// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: biz_models.proto

#ifndef PROTOBUF_biz_5fmodels_2eproto__INCLUDED
#define PROTOBUF_biz_5fmodels_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace biz_model {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_biz_5fmodels_2eproto();
void protobuf_AssignDesc_biz_5fmodels_2eproto();
void protobuf_ShutdownFile_biz_5fmodels_2eproto();

class ConversationID;
class FullUserID;
class HistoryMessageEntity;
class OpenID;
class Peer;
class UserDialogEntity;
class UserInfo;
class UserMessageEntity;
class UserToeken;
class ZUserID;

enum DataType {
  STRING = 0,
  INT32 = 1,
  INT64 = 2,
  UINT32 = 8,
  UINT64 = 3,
  FLOAT = 9,
  DOUBLE = 5,
  BOOL = 6,
  DATE = 10,
  DATETIME = 4,
  BINARY = 7,
  ENUM = 13,
  DATA_TYPE = 11,
  NULL_TYPE = 12,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataType_IsValid(int value);
const DataType DataType_MIN = STRING;
const DataType DataType_MAX = ENUM;
const int DataType_ARRAYSIZE = DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataType_descriptor();
inline const ::std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataType_descriptor(), value);
}
inline bool DataType_Parse(
    const ::std::string& name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
    DataType_descriptor(), name, value);
}
// ===================================================================

class UserToeken : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.UserToeken) */ {
 public:
  UserToeken();
  virtual ~UserToeken();

  UserToeken(const UserToeken& from);

  inline UserToeken& operator=(const UserToeken& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserToeken& default_instance();

  void Swap(UserToeken* other);

  // implements Message ----------------------------------------------

  inline UserToeken* New() const { return New(NULL); }

  UserToeken* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserToeken* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_key = 1;
  void clear_app_key();
  static const int kAppKeyFieldNumber = 1;
  const ::std::string& app_key() const;
  void set_app_key(const ::std::string& value);
  void set_app_key(const char* value);
  void set_app_key(const char* value, size_t size);
  ::std::string* mutable_app_key();
  ::std::string* release_app_key();
  void set_allocated_app_key(::std::string* app_key);

  // optional string user_token = 2;
  void clear_user_token();
  static const int kUserTokenFieldNumber = 2;
  const ::std::string& user_token() const;
  void set_user_token(const ::std::string& value);
  void set_user_token(const char* value);
  void set_user_token(const char* value, size_t size);
  ::std::string* mutable_user_token();
  ::std::string* release_user_token();
  void set_allocated_user_token(::std::string* user_token);

  // @@protoc_insertion_point(class_scope:biz_model.UserToeken)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr app_key_;
  ::google::protobuf::internal::ArenaStringPtr user_token_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static UserToeken* default_instance_;
};
// -------------------------------------------------------------------

class FullUserID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.FullUserID) */ {
 public:
  FullUserID();
  virtual ~FullUserID();

  FullUserID(const FullUserID& from);

  inline FullUserID& operator=(const FullUserID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FullUserID& default_instance();

  void Swap(FullUserID* other);

  // implements Message ----------------------------------------------

  inline FullUserID* New() const { return New(NULL); }

  FullUserID* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FullUserID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional string app_key = 2;
  void clear_app_key();
  static const int kAppKeyFieldNumber = 2;
  const ::std::string& app_key() const;
  void set_app_key(const ::std::string& value);
  void set_app_key(const char* value);
  void set_app_key(const char* value, size_t size);
  ::std::string* mutable_app_key();
  ::std::string* release_app_key();
  void set_allocated_app_key(::std::string* app_key);

  // optional string app_open_id = 3;
  void clear_app_open_id();
  static const int kAppOpenIdFieldNumber = 3;
  const ::std::string& app_open_id() const;
  void set_app_open_id(const ::std::string& value);
  void set_app_open_id(const char* value);
  void set_app_open_id(const char* value, size_t size);
  ::std::string* mutable_app_open_id();
  ::std::string* release_app_open_id();
  void set_allocated_app_open_id(::std::string* app_open_id);

  // optional uint32 user_id = 4;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:biz_model.FullUserID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr app_key_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::internal::ArenaStringPtr app_open_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static FullUserID* default_instance_;
};
// -------------------------------------------------------------------

class OpenID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.OpenID) */ {
 public:
  OpenID();
  virtual ~OpenID();

  OpenID(const OpenID& from);

  inline OpenID& operator=(const OpenID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenID& default_instance();

  void Swap(OpenID* other);

  // implements Message ----------------------------------------------

  inline OpenID* New() const { return New(NULL); }

  OpenID* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional string app_open_id = 3;
  void clear_app_open_id();
  static const int kAppOpenIdFieldNumber = 3;
  const ::std::string& app_open_id() const;
  void set_app_open_id(const ::std::string& value);
  void set_app_open_id(const char* value);
  void set_app_open_id(const char* value, size_t size);
  ::std::string* mutable_app_open_id();
  ::std::string* release_app_open_id();
  void set_allocated_app_open_id(::std::string* app_open_id);

  // @@protoc_insertion_point(class_scope:biz_model.OpenID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr app_open_id_;
  ::google::protobuf::uint32 app_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static OpenID* default_instance_;
};
// -------------------------------------------------------------------

class ZUserID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.ZUserID) */ {
 public:
  ZUserID();
  virtual ~ZUserID();

  ZUserID(const ZUserID& from);

  inline ZUserID& operator=(const ZUserID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ZUserID& default_instance();

  void Swap(ZUserID* other);

  // implements Message ----------------------------------------------

  inline ZUserID* New() const { return New(NULL); }

  ZUserID* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ZUserID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:biz_model.ZUserID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 user_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static ZUserID* default_instance_;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  inline UserInfo* New() const { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .biz_model.ZUserID user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::biz_model::ZUserID& user_id() const;
  ::biz_model::ZUserID* mutable_user_id();
  ::biz_model::ZUserID* release_user_id();
  void set_allocated_user_id(::biz_model::ZUserID* user_id);

  // optional string nick = 2;
  void clear_nick();
  static const int kNickFieldNumber = 2;
  const ::std::string& nick() const;
  void set_nick(const ::std::string& value);
  void set_nick(const char* value);
  void set_nick(const char* value, size_t size);
  ::std::string* mutable_nick();
  ::std::string* release_nick();
  void set_allocated_nick(::std::string* nick);

  // optional string avatar = 3;
  void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  const ::std::string& avatar() const;
  void set_avatar(const ::std::string& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  ::std::string* mutable_avatar();
  ::std::string* release_avatar();
  void set_allocated_avatar(::std::string* avatar);

  // @@protoc_insertion_point(class_scope:biz_model.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::biz_model::ZUserID* user_id_;
  ::google::protobuf::internal::ArenaStringPtr nick_;
  ::google::protobuf::internal::ArenaStringPtr avatar_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static UserInfo* default_instance_;
};
// -------------------------------------------------------------------

class Peer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.Peer) */ {
 public:
  Peer();
  virtual ~Peer();

  Peer(const Peer& from);

  inline Peer& operator=(const Peer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Peer& default_instance();

  void Swap(Peer* other);

  // implements Message ----------------------------------------------

  inline Peer* New() const { return New(NULL); }

  Peer* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Peer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:biz_model.Peer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static Peer* default_instance_;
};
// -------------------------------------------------------------------

class ConversationID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.ConversationID) */ {
 public:
  ConversationID();
  virtual ~ConversationID();

  ConversationID(const ConversationID& from);

  inline ConversationID& operator=(const ConversationID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConversationID& default_instance();

  void Swap(ConversationID* other);

  // implements Message ----------------------------------------------

  inline ConversationID* New() const { return New(NULL); }

  ConversationID* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConversationID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 sender_user_id = 1;
  void clear_sender_user_id();
  static const int kSenderUserIdFieldNumber = 1;
  ::google::protobuf::uint32 sender_user_id() const;
  void set_sender_user_id(::google::protobuf::uint32 value);

  // optional .biz_model.Peer peer = 2;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 2;
  const ::biz_model::Peer& peer() const;
  ::biz_model::Peer* mutable_peer();
  ::biz_model::Peer* release_peer();
  void set_allocated_peer(::biz_model::Peer* peer);

  // @@protoc_insertion_point(class_scope:biz_model.ConversationID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::biz_model::Peer* peer_;
  ::google::protobuf::uint32 sender_user_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static ConversationID* default_instance_;
};
// -------------------------------------------------------------------

class HistoryMessageEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.HistoryMessageEntity) */ {
 public:
  HistoryMessageEntity();
  virtual ~HistoryMessageEntity();

  HistoryMessageEntity(const HistoryMessageEntity& from);

  inline HistoryMessageEntity& operator=(const HistoryMessageEntity& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryMessageEntity& default_instance();

  void Swap(HistoryMessageEntity* other);

  // implements Message ----------------------------------------------

  inline HistoryMessageEntity* New() const { return New(NULL); }

  HistoryMessageEntity* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HistoryMessageEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 sender_user_id = 2;
  void clear_sender_user_id();
  static const int kSenderUserIdFieldNumber = 2;
  ::google::protobuf::uint32 sender_user_id() const;
  void set_sender_user_id(::google::protobuf::uint32 value);

  // optional uint32 peer_id = 3;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 3;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // optional uint32 peer_type = 4;
  void clear_peer_type();
  static const int kPeerTypeFieldNumber = 4;
  ::google::protobuf::uint32 peer_type() const;
  void set_peer_type(::google::protobuf::uint32 value);

  // optional uint64 client_message_id = 5;
  void clear_client_message_id();
  static const int kClientMessageIdFieldNumber = 5;
  ::google::protobuf::uint64 client_message_id() const;
  void set_client_message_id(::google::protobuf::uint64 value);

  // optional uint32 message_peer_seq = 6;
  void clear_message_peer_seq();
  static const int kMessagePeerSeqFieldNumber = 6;
  ::google::protobuf::uint32 message_peer_seq() const;
  void set_message_peer_seq(::google::protobuf::uint32 value);

  // optional uint32 message_content_type = 7;
  void clear_message_content_type();
  static const int kMessageContentTypeFieldNumber = 7;
  ::google::protobuf::uint32 message_content_type() const;
  void set_message_content_type(::google::protobuf::uint32 value);

  // optional bytes message_content_data = 8;
  void clear_message_content_data();
  static const int kMessageContentDataFieldNumber = 8;
  const ::std::string& message_content_data() const;
  void set_message_content_data(const ::std::string& value);
  void set_message_content_data(const char* value);
  void set_message_content_data(const void* value, size_t size);
  ::std::string* mutable_message_content_data();
  ::std::string* release_message_content_data();
  void set_allocated_message_content_data(::std::string* message_content_data);

  // optional bytes passthrough_data = 9;
  void clear_passthrough_data();
  static const int kPassthroughDataFieldNumber = 9;
  const ::std::string& passthrough_data() const;
  void set_passthrough_data(const ::std::string& value);
  void set_passthrough_data(const char* value);
  void set_passthrough_data(const void* value, size_t size);
  ::std::string* mutable_passthrough_data();
  ::std::string* release_passthrough_data();
  void set_allocated_passthrough_data(::std::string* passthrough_data);

  // optional uint32 status = 10;
  void clear_status();
  static const int kStatusFieldNumber = 10;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint64 created_at = 11;
  void clear_created_at();
  static const int kCreatedAtFieldNumber = 11;
  ::google::protobuf::uint64 created_at() const;
  void set_created_at(::google::protobuf::uint64 value);

  // optional uint64 updated_at = 12;
  void clear_updated_at();
  static const int kUpdatedAtFieldNumber = 12;
  ::google::protobuf::uint64 updated_at() const;
  void set_updated_at(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:biz_model.HistoryMessageEntity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 sender_user_id_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 peer_type_;
  ::google::protobuf::uint64 client_message_id_;
  ::google::protobuf::uint32 message_peer_seq_;
  ::google::protobuf::uint32 message_content_type_;
  ::google::protobuf::internal::ArenaStringPtr message_content_data_;
  ::google::protobuf::internal::ArenaStringPtr passthrough_data_;
  ::google::protobuf::uint64 created_at_;
  ::google::protobuf::uint64 updated_at_;
  ::google::protobuf::uint32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static HistoryMessageEntity* default_instance_;
};
// -------------------------------------------------------------------

class UserMessageEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.UserMessageEntity) */ {
 public:
  UserMessageEntity();
  virtual ~UserMessageEntity();

  UserMessageEntity(const UserMessageEntity& from);

  inline UserMessageEntity& operator=(const UserMessageEntity& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserMessageEntity& default_instance();

  void Swap(UserMessageEntity* other);

  // implements Message ----------------------------------------------

  inline UserMessageEntity* New() const { return New(NULL); }

  UserMessageEntity* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserMessageEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // optional uint32 message_seq = 3;
  void clear_message_seq();
  static const int kMessageSeqFieldNumber = 3;
  ::google::protobuf::uint32 message_seq() const;
  void set_message_seq(::google::protobuf::uint32 value);

  // optional uint32 sender_user_id = 4;
  void clear_sender_user_id();
  static const int kSenderUserIdFieldNumber = 4;
  ::google::protobuf::uint32 sender_user_id() const;
  void set_sender_user_id(::google::protobuf::uint32 value);

  // optional uint32 peer_id = 5;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 5;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // optional uint32 peer_type = 6;
  void clear_peer_type();
  static const int kPeerTypeFieldNumber = 6;
  ::google::protobuf::uint32 peer_type() const;
  void set_peer_type(::google::protobuf::uint32 value);

  // optional uint64 client_message_id = 7;
  void clear_client_message_id();
  static const int kClientMessageIdFieldNumber = 7;
  ::google::protobuf::uint64 client_message_id() const;
  void set_client_message_id(::google::protobuf::uint64 value);

  // optional uint32 message_peer_seq = 8;
  void clear_message_peer_seq();
  static const int kMessagePeerSeqFieldNumber = 8;
  ::google::protobuf::uint32 message_peer_seq() const;
  void set_message_peer_seq(::google::protobuf::uint32 value);

  // optional uint32 status = 9;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint64 created_at = 10;
  void clear_created_at();
  static const int kCreatedAtFieldNumber = 10;
  ::google::protobuf::uint64 created_at() const;
  void set_created_at(::google::protobuf::uint64 value);

  // optional uint64 updated_at = 11;
  void clear_updated_at();
  static const int kUpdatedAtFieldNumber = 11;
  ::google::protobuf::uint64 updated_at() const;
  void set_updated_at(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:biz_model.UserMessageEntity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 message_seq_;
  ::google::protobuf::uint32 sender_user_id_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 peer_type_;
  ::google::protobuf::uint64 client_message_id_;
  ::google::protobuf::uint32 message_peer_seq_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint64 created_at_;
  ::google::protobuf::uint64 updated_at_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static UserMessageEntity* default_instance_;
};
// -------------------------------------------------------------------

class UserDialogEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:biz_model.UserDialogEntity) */ {
 public:
  UserDialogEntity();
  virtual ~UserDialogEntity();

  UserDialogEntity(const UserDialogEntity& from);

  inline UserDialogEntity& operator=(const UserDialogEntity& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserDialogEntity& default_instance();

  void Swap(UserDialogEntity* other);

  // implements Message ----------------------------------------------

  inline UserDialogEntity* New() const { return New(NULL); }

  UserDialogEntity* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserDialogEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // optional uint32 peer_id = 5;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 5;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // optional uint32 peer_type = 6;
  void clear_peer_type();
  static const int kPeerTypeFieldNumber = 6;
  ::google::protobuf::uint32 peer_type() const;
  void set_peer_type(::google::protobuf::uint32 value);

  // optional uint32 status = 9;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint64 created_at = 10;
  void clear_created_at();
  static const int kCreatedAtFieldNumber = 10;
  ::google::protobuf::uint64 created_at() const;
  void set_created_at(::google::protobuf::uint64 value);

  // optional uint64 updated_at = 11;
  void clear_updated_at();
  static const int kUpdatedAtFieldNumber = 11;
  ::google::protobuf::uint64 updated_at() const;
  void set_updated_at(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:biz_model.UserDialogEntity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 peer_type_;
  ::google::protobuf::uint64 created_at_;
  ::google::protobuf::uint64 updated_at_;
  ::google::protobuf::uint32 status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_biz_5fmodels_2eproto();
  friend void protobuf_AssignDesc_biz_5fmodels_2eproto();
  friend void protobuf_ShutdownFile_biz_5fmodels_2eproto();

  void InitAsDefaultInstance();
  static UserDialogEntity* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserToeken

// optional string app_key = 1;
inline void UserToeken::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserToeken::app_key() const {
  // @@protoc_insertion_point(field_get:biz_model.UserToeken.app_key)
  return app_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserToeken::set_app_key(const ::std::string& value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.UserToeken.app_key)
}
inline void UserToeken::set_app_key(const char* value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.UserToeken.app_key)
}
inline void UserToeken::set_app_key(const char* value, size_t size) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.UserToeken.app_key)
}
inline ::std::string* UserToeken::mutable_app_key() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.UserToeken.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserToeken::release_app_key() {
  // @@protoc_insertion_point(field_release:biz_model.UserToeken.app_key)
  
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserToeken::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    
  } else {
    
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserToeken.app_key)
}

// optional string user_token = 2;
inline void UserToeken::clear_user_token() {
  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserToeken::user_token() const {
  // @@protoc_insertion_point(field_get:biz_model.UserToeken.user_token)
  return user_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserToeken::set_user_token(const ::std::string& value) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.UserToeken.user_token)
}
inline void UserToeken::set_user_token(const char* value) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.UserToeken.user_token)
}
inline void UserToeken::set_user_token(const char* value, size_t size) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.UserToeken.user_token)
}
inline ::std::string* UserToeken::mutable_user_token() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.UserToeken.user_token)
  return user_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserToeken::release_user_token() {
  // @@protoc_insertion_point(field_release:biz_model.UserToeken.user_token)
  
  return user_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserToeken::set_allocated_user_token(::std::string* user_token) {
  if (user_token != NULL) {
    
  } else {
    
  }
  user_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_token);
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserToeken.user_token)
}

// -------------------------------------------------------------------

// FullUserID

// optional uint32 app_id = 1;
inline void FullUserID::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 FullUserID::app_id() const {
  // @@protoc_insertion_point(field_get:biz_model.FullUserID.app_id)
  return app_id_;
}
inline void FullUserID::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.FullUserID.app_id)
}

// optional string app_key = 2;
inline void FullUserID::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FullUserID::app_key() const {
  // @@protoc_insertion_point(field_get:biz_model.FullUserID.app_key)
  return app_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FullUserID::set_app_key(const ::std::string& value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.FullUserID.app_key)
}
inline void FullUserID::set_app_key(const char* value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.FullUserID.app_key)
}
inline void FullUserID::set_app_key(const char* value, size_t size) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.FullUserID.app_key)
}
inline ::std::string* FullUserID::mutable_app_key() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.FullUserID.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FullUserID::release_app_key() {
  // @@protoc_insertion_point(field_release:biz_model.FullUserID.app_key)
  
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FullUserID::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    
  } else {
    
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:biz_model.FullUserID.app_key)
}

// optional string app_open_id = 3;
inline void FullUserID::clear_app_open_id() {
  app_open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FullUserID::app_open_id() const {
  // @@protoc_insertion_point(field_get:biz_model.FullUserID.app_open_id)
  return app_open_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FullUserID::set_app_open_id(const ::std::string& value) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.FullUserID.app_open_id)
}
inline void FullUserID::set_app_open_id(const char* value) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.FullUserID.app_open_id)
}
inline void FullUserID::set_app_open_id(const char* value, size_t size) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.FullUserID.app_open_id)
}
inline ::std::string* FullUserID::mutable_app_open_id() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.FullUserID.app_open_id)
  return app_open_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FullUserID::release_app_open_id() {
  // @@protoc_insertion_point(field_release:biz_model.FullUserID.app_open_id)
  
  return app_open_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FullUserID::set_allocated_app_open_id(::std::string* app_open_id) {
  if (app_open_id != NULL) {
    
  } else {
    
  }
  app_open_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_open_id);
  // @@protoc_insertion_point(field_set_allocated:biz_model.FullUserID.app_open_id)
}

// optional uint32 user_id = 4;
inline void FullUserID::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 FullUserID::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.FullUserID.user_id)
  return user_id_;
}
inline void FullUserID::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.FullUserID.user_id)
}

// -------------------------------------------------------------------

// OpenID

// optional uint32 app_id = 1;
inline void OpenID::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 OpenID::app_id() const {
  // @@protoc_insertion_point(field_get:biz_model.OpenID.app_id)
  return app_id_;
}
inline void OpenID::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.OpenID.app_id)
}

// optional string app_open_id = 3;
inline void OpenID::clear_app_open_id() {
  app_open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenID::app_open_id() const {
  // @@protoc_insertion_point(field_get:biz_model.OpenID.app_open_id)
  return app_open_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenID::set_app_open_id(const ::std::string& value) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.OpenID.app_open_id)
}
inline void OpenID::set_app_open_id(const char* value) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.OpenID.app_open_id)
}
inline void OpenID::set_app_open_id(const char* value, size_t size) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.OpenID.app_open_id)
}
inline ::std::string* OpenID::mutable_app_open_id() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.OpenID.app_open_id)
  return app_open_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenID::release_app_open_id() {
  // @@protoc_insertion_point(field_release:biz_model.OpenID.app_open_id)
  
  return app_open_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenID::set_allocated_app_open_id(::std::string* app_open_id) {
  if (app_open_id != NULL) {
    
  } else {
    
  }
  app_open_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_open_id);
  // @@protoc_insertion_point(field_set_allocated:biz_model.OpenID.app_open_id)
}

// -------------------------------------------------------------------

// ZUserID

// optional uint32 app_id = 1;
inline void ZUserID::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 ZUserID::app_id() const {
  // @@protoc_insertion_point(field_get:biz_model.ZUserID.app_id)
  return app_id_;
}
inline void ZUserID::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.ZUserID.app_id)
}

// optional uint32 user_id = 2;
inline void ZUserID::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 ZUserID::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.ZUserID.user_id)
  return user_id_;
}
inline void ZUserID::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.ZUserID.user_id)
}

// -------------------------------------------------------------------

// UserInfo

// optional .biz_model.ZUserID user_id = 1;
inline bool UserInfo::has_user_id() const {
  return !_is_default_instance_ && user_id_ != NULL;
}
inline void UserInfo::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::biz_model::ZUserID& UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserInfo.user_id)
  return user_id_ != NULL ? *user_id_ : *default_instance_->user_id_;
}
inline ::biz_model::ZUserID* UserInfo::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::biz_model::ZUserID;
  }
  // @@protoc_insertion_point(field_mutable:biz_model.UserInfo.user_id)
  return user_id_;
}
inline ::biz_model::ZUserID* UserInfo::release_user_id() {
  // @@protoc_insertion_point(field_release:biz_model.UserInfo.user_id)
  
  ::biz_model::ZUserID* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void UserInfo::set_allocated_user_id(::biz_model::ZUserID* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserInfo.user_id)
}

// optional string nick = 2;
inline void UserInfo::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::nick() const {
  // @@protoc_insertion_point(field_get:biz_model.UserInfo.nick)
  return nick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_nick(const ::std::string& value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.UserInfo.nick)
}
inline void UserInfo::set_nick(const char* value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.UserInfo.nick)
}
inline void UserInfo::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.UserInfo.nick)
}
inline ::std::string* UserInfo::mutable_nick() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.UserInfo.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_nick() {
  // @@protoc_insertion_point(field_release:biz_model.UserInfo.nick)
  
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserInfo.nick)
}

// optional string avatar = 3;
inline void UserInfo::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::avatar() const {
  // @@protoc_insertion_point(field_get:biz_model.UserInfo.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.UserInfo.avatar)
}
inline void UserInfo::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.UserInfo.avatar)
}
inline void UserInfo::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.UserInfo.avatar)
}
inline ::std::string* UserInfo::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.UserInfo.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:biz_model.UserInfo.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserInfo.avatar)
}

// -------------------------------------------------------------------

// Peer

// optional uint32 type = 1;
inline void Peer::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Peer::type() const {
  // @@protoc_insertion_point(field_get:biz_model.Peer.type)
  return type_;
}
inline void Peer::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.Peer.type)
}

// optional uint32 id = 2;
inline void Peer::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Peer::id() const {
  // @@protoc_insertion_point(field_get:biz_model.Peer.id)
  return id_;
}
inline void Peer::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.Peer.id)
}

// -------------------------------------------------------------------

// ConversationID

// optional uint32 sender_user_id = 1;
inline void ConversationID::clear_sender_user_id() {
  sender_user_id_ = 0u;
}
inline ::google::protobuf::uint32 ConversationID::sender_user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.ConversationID.sender_user_id)
  return sender_user_id_;
}
inline void ConversationID::set_sender_user_id(::google::protobuf::uint32 value) {
  
  sender_user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.ConversationID.sender_user_id)
}

// optional .biz_model.Peer peer = 2;
inline bool ConversationID::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
inline void ConversationID::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::biz_model::Peer& ConversationID::peer() const {
  // @@protoc_insertion_point(field_get:biz_model.ConversationID.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
inline ::biz_model::Peer* ConversationID::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::biz_model::Peer;
  }
  // @@protoc_insertion_point(field_mutable:biz_model.ConversationID.peer)
  return peer_;
}
inline ::biz_model::Peer* ConversationID::release_peer() {
  // @@protoc_insertion_point(field_release:biz_model.ConversationID.peer)
  
  ::biz_model::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void ConversationID::set_allocated_peer(::biz_model::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:biz_model.ConversationID.peer)
}

// -------------------------------------------------------------------

// HistoryMessageEntity

// optional uint32 id = 1;
inline void HistoryMessageEntity::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 HistoryMessageEntity::id() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.id)
  return id_;
}
inline void HistoryMessageEntity::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.id)
}

// optional uint32 sender_user_id = 2;
inline void HistoryMessageEntity::clear_sender_user_id() {
  sender_user_id_ = 0u;
}
inline ::google::protobuf::uint32 HistoryMessageEntity::sender_user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.sender_user_id)
  return sender_user_id_;
}
inline void HistoryMessageEntity::set_sender_user_id(::google::protobuf::uint32 value) {
  
  sender_user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.sender_user_id)
}

// optional uint32 peer_id = 3;
inline void HistoryMessageEntity::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 HistoryMessageEntity::peer_id() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.peer_id)
  return peer_id_;
}
inline void HistoryMessageEntity::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.peer_id)
}

// optional uint32 peer_type = 4;
inline void HistoryMessageEntity::clear_peer_type() {
  peer_type_ = 0u;
}
inline ::google::protobuf::uint32 HistoryMessageEntity::peer_type() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.peer_type)
  return peer_type_;
}
inline void HistoryMessageEntity::set_peer_type(::google::protobuf::uint32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.peer_type)
}

// optional uint64 client_message_id = 5;
inline void HistoryMessageEntity::clear_client_message_id() {
  client_message_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HistoryMessageEntity::client_message_id() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.client_message_id)
  return client_message_id_;
}
inline void HistoryMessageEntity::set_client_message_id(::google::protobuf::uint64 value) {
  
  client_message_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.client_message_id)
}

// optional uint32 message_peer_seq = 6;
inline void HistoryMessageEntity::clear_message_peer_seq() {
  message_peer_seq_ = 0u;
}
inline ::google::protobuf::uint32 HistoryMessageEntity::message_peer_seq() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.message_peer_seq)
  return message_peer_seq_;
}
inline void HistoryMessageEntity::set_message_peer_seq(::google::protobuf::uint32 value) {
  
  message_peer_seq_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.message_peer_seq)
}

// optional uint32 message_content_type = 7;
inline void HistoryMessageEntity::clear_message_content_type() {
  message_content_type_ = 0u;
}
inline ::google::protobuf::uint32 HistoryMessageEntity::message_content_type() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.message_content_type)
  return message_content_type_;
}
inline void HistoryMessageEntity::set_message_content_type(::google::protobuf::uint32 value) {
  
  message_content_type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.message_content_type)
}

// optional bytes message_content_data = 8;
inline void HistoryMessageEntity::clear_message_content_data() {
  message_content_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HistoryMessageEntity::message_content_data() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.message_content_data)
  return message_content_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HistoryMessageEntity::set_message_content_data(const ::std::string& value) {
  
  message_content_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.message_content_data)
}
inline void HistoryMessageEntity::set_message_content_data(const char* value) {
  
  message_content_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.HistoryMessageEntity.message_content_data)
}
inline void HistoryMessageEntity::set_message_content_data(const void* value, size_t size) {
  
  message_content_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.HistoryMessageEntity.message_content_data)
}
inline ::std::string* HistoryMessageEntity::mutable_message_content_data() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.HistoryMessageEntity.message_content_data)
  return message_content_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HistoryMessageEntity::release_message_content_data() {
  // @@protoc_insertion_point(field_release:biz_model.HistoryMessageEntity.message_content_data)
  
  return message_content_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HistoryMessageEntity::set_allocated_message_content_data(::std::string* message_content_data) {
  if (message_content_data != NULL) {
    
  } else {
    
  }
  message_content_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_content_data);
  // @@protoc_insertion_point(field_set_allocated:biz_model.HistoryMessageEntity.message_content_data)
}

// optional bytes passthrough_data = 9;
inline void HistoryMessageEntity::clear_passthrough_data() {
  passthrough_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HistoryMessageEntity::passthrough_data() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.passthrough_data)
  return passthrough_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HistoryMessageEntity::set_passthrough_data(const ::std::string& value) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.passthrough_data)
}
inline void HistoryMessageEntity::set_passthrough_data(const char* value) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.HistoryMessageEntity.passthrough_data)
}
inline void HistoryMessageEntity::set_passthrough_data(const void* value, size_t size) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.HistoryMessageEntity.passthrough_data)
}
inline ::std::string* HistoryMessageEntity::mutable_passthrough_data() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.HistoryMessageEntity.passthrough_data)
  return passthrough_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HistoryMessageEntity::release_passthrough_data() {
  // @@protoc_insertion_point(field_release:biz_model.HistoryMessageEntity.passthrough_data)
  
  return passthrough_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HistoryMessageEntity::set_allocated_passthrough_data(::std::string* passthrough_data) {
  if (passthrough_data != NULL) {
    
  } else {
    
  }
  passthrough_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passthrough_data);
  // @@protoc_insertion_point(field_set_allocated:biz_model.HistoryMessageEntity.passthrough_data)
}

// optional uint32 status = 10;
inline void HistoryMessageEntity::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 HistoryMessageEntity::status() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.status)
  return status_;
}
inline void HistoryMessageEntity::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.status)
}

// optional uint64 created_at = 11;
inline void HistoryMessageEntity::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HistoryMessageEntity::created_at() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.created_at)
  return created_at_;
}
inline void HistoryMessageEntity::set_created_at(::google::protobuf::uint64 value) {
  
  created_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.created_at)
}

// optional uint64 updated_at = 12;
inline void HistoryMessageEntity::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HistoryMessageEntity::updated_at() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.updated_at)
  return updated_at_;
}
inline void HistoryMessageEntity::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.updated_at)
}

// -------------------------------------------------------------------

// UserMessageEntity

// optional uint32 id = 1;
inline void UserMessageEntity::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 UserMessageEntity::id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.id)
  return id_;
}
inline void UserMessageEntity::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.id)
}

// optional uint32 user_id = 2;
inline void UserMessageEntity::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 UserMessageEntity::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.user_id)
  return user_id_;
}
inline void UserMessageEntity::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.user_id)
}

// optional uint32 message_seq = 3;
inline void UserMessageEntity::clear_message_seq() {
  message_seq_ = 0u;
}
inline ::google::protobuf::uint32 UserMessageEntity::message_seq() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.message_seq)
  return message_seq_;
}
inline void UserMessageEntity::set_message_seq(::google::protobuf::uint32 value) {
  
  message_seq_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.message_seq)
}

// optional uint32 sender_user_id = 4;
inline void UserMessageEntity::clear_sender_user_id() {
  sender_user_id_ = 0u;
}
inline ::google::protobuf::uint32 UserMessageEntity::sender_user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.sender_user_id)
  return sender_user_id_;
}
inline void UserMessageEntity::set_sender_user_id(::google::protobuf::uint32 value) {
  
  sender_user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.sender_user_id)
}

// optional uint32 peer_id = 5;
inline void UserMessageEntity::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 UserMessageEntity::peer_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.peer_id)
  return peer_id_;
}
inline void UserMessageEntity::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.peer_id)
}

// optional uint32 peer_type = 6;
inline void UserMessageEntity::clear_peer_type() {
  peer_type_ = 0u;
}
inline ::google::protobuf::uint32 UserMessageEntity::peer_type() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.peer_type)
  return peer_type_;
}
inline void UserMessageEntity::set_peer_type(::google::protobuf::uint32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.peer_type)
}

// optional uint64 client_message_id = 7;
inline void UserMessageEntity::clear_client_message_id() {
  client_message_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserMessageEntity::client_message_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.client_message_id)
  return client_message_id_;
}
inline void UserMessageEntity::set_client_message_id(::google::protobuf::uint64 value) {
  
  client_message_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.client_message_id)
}

// optional uint32 message_peer_seq = 8;
inline void UserMessageEntity::clear_message_peer_seq() {
  message_peer_seq_ = 0u;
}
inline ::google::protobuf::uint32 UserMessageEntity::message_peer_seq() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.message_peer_seq)
  return message_peer_seq_;
}
inline void UserMessageEntity::set_message_peer_seq(::google::protobuf::uint32 value) {
  
  message_peer_seq_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.message_peer_seq)
}

// optional uint32 status = 9;
inline void UserMessageEntity::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 UserMessageEntity::status() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.status)
  return status_;
}
inline void UserMessageEntity::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.status)
}

// optional uint64 created_at = 10;
inline void UserMessageEntity::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserMessageEntity::created_at() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.created_at)
  return created_at_;
}
inline void UserMessageEntity::set_created_at(::google::protobuf::uint64 value) {
  
  created_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.created_at)
}

// optional uint64 updated_at = 11;
inline void UserMessageEntity::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserMessageEntity::updated_at() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.updated_at)
  return updated_at_;
}
inline void UserMessageEntity::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.updated_at)
}

// -------------------------------------------------------------------

// UserDialogEntity

// optional uint32 id = 1;
inline void UserDialogEntity::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 UserDialogEntity::id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.id)
  return id_;
}
inline void UserDialogEntity::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.id)
}

// optional uint32 user_id = 2;
inline void UserDialogEntity::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 UserDialogEntity::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.user_id)
  return user_id_;
}
inline void UserDialogEntity::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.user_id)
}

// optional uint32 peer_id = 5;
inline void UserDialogEntity::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 UserDialogEntity::peer_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.peer_id)
  return peer_id_;
}
inline void UserDialogEntity::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.peer_id)
}

// optional uint32 peer_type = 6;
inline void UserDialogEntity::clear_peer_type() {
  peer_type_ = 0u;
}
inline ::google::protobuf::uint32 UserDialogEntity::peer_type() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.peer_type)
  return peer_type_;
}
inline void UserDialogEntity::set_peer_type(::google::protobuf::uint32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.peer_type)
}

// optional uint32 status = 9;
inline void UserDialogEntity::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 UserDialogEntity::status() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.status)
  return status_;
}
inline void UserDialogEntity::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.status)
}

// optional uint64 created_at = 10;
inline void UserDialogEntity::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserDialogEntity::created_at() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.created_at)
  return created_at_;
}
inline void UserDialogEntity::set_created_at(::google::protobuf::uint64 value) {
  
  created_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.created_at)
}

// optional uint64 updated_at = 11;
inline void UserDialogEntity::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserDialogEntity::updated_at() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.updated_at)
  return updated_at_;
}
inline void UserDialogEntity::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.updated_at)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace biz_model

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::biz_model::DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::biz_model::DataType>() {
  return ::biz_model::DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_biz_5fmodels_2eproto__INCLUDED
