// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: biz_models.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "biz_models.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace biz_model {

namespace {

const ::google::protobuf::Descriptor* UserToeken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserToeken_reflection_ = NULL;
const ::google::protobuf::Descriptor* FullUserID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FullUserID_reflection_ = NULL;
const ::google::protobuf::Descriptor* OpenID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OpenID_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZUserID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZUserID_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Peer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Peer_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConversationID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConversationID_reflection_ = NULL;
const ::google::protobuf::Descriptor* HistoryMessageEntity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HistoryMessageEntity_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserMessageEntity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserMessageEntity_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserDialogEntity_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserDialogEntity_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DataType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_biz_5fmodels_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_biz_5fmodels_2eproto() {
  protobuf_AddDesc_biz_5fmodels_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "biz_models.proto");
  GOOGLE_CHECK(file != NULL);
  UserToeken_descriptor_ = file->message_type(0);
  static const int UserToeken_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, app_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, user_token_),
  };
  UserToeken_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserToeken_descriptor_,
      UserToeken::default_instance_,
      UserToeken_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserToeken),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, _is_default_instance_));
  FullUserID_descriptor_ = file->message_type(1);
  static const int FullUserID_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullUserID, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullUserID, app_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullUserID, app_open_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullUserID, user_id_),
  };
  FullUserID_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FullUserID_descriptor_,
      FullUserID::default_instance_,
      FullUserID_offsets_,
      -1,
      -1,
      -1,
      sizeof(FullUserID),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullUserID, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FullUserID, _is_default_instance_));
  OpenID_descriptor_ = file->message_type(2);
  static const int OpenID_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenID, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenID, app_open_id_),
  };
  OpenID_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OpenID_descriptor_,
      OpenID::default_instance_,
      OpenID_offsets_,
      -1,
      -1,
      -1,
      sizeof(OpenID),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenID, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenID, _is_default_instance_));
  ZUserID_descriptor_ = file->message_type(3);
  static const int ZUserID_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZUserID, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZUserID, user_id_),
  };
  ZUserID_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZUserID_descriptor_,
      ZUserID::default_instance_,
      ZUserID_offsets_,
      -1,
      -1,
      -1,
      sizeof(ZUserID),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZUserID, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZUserID, _is_default_instance_));
  UserInfo_descriptor_ = file->message_type(4);
  static const int UserInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, nick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, avatar_),
  };
  UserInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserInfo_descriptor_,
      UserInfo::default_instance_,
      UserInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _is_default_instance_));
  Peer_descriptor_ = file->message_type(5);
  static const int Peer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Peer, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Peer, id_),
  };
  Peer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Peer_descriptor_,
      Peer::default_instance_,
      Peer_offsets_,
      -1,
      -1,
      -1,
      sizeof(Peer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Peer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Peer, _is_default_instance_));
  ConversationID_descriptor_ = file->message_type(6);
  static const int ConversationID_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConversationID, sender_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConversationID, peer_),
  };
  ConversationID_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConversationID_descriptor_,
      ConversationID::default_instance_,
      ConversationID_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConversationID),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConversationID, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConversationID, _is_default_instance_));
  HistoryMessageEntity_descriptor_ = file->message_type(7);
  static const int HistoryMessageEntity_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, sender_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, peer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, client_message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, message_peer_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, message_content_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, message_content_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, passthrough_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, updated_at_),
  };
  HistoryMessageEntity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HistoryMessageEntity_descriptor_,
      HistoryMessageEntity::default_instance_,
      HistoryMessageEntity_offsets_,
      -1,
      -1,
      -1,
      sizeof(HistoryMessageEntity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMessageEntity, _is_default_instance_));
  UserMessageEntity_descriptor_ = file->message_type(8);
  static const int UserMessageEntity_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, message_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, sender_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, peer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, client_message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, message_peer_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, updated_at_),
  };
  UserMessageEntity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserMessageEntity_descriptor_,
      UserMessageEntity::default_instance_,
      UserMessageEntity_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserMessageEntity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserMessageEntity, _is_default_instance_));
  UserDialogEntity_descriptor_ = file->message_type(9);
  static const int UserDialogEntity_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, peer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, peer_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, created_at_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, updated_at_),
  };
  UserDialogEntity_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserDialogEntity_descriptor_,
      UserDialogEntity::default_instance_,
      UserDialogEntity_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserDialogEntity),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserDialogEntity, _is_default_instance_));
  DataType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_biz_5fmodels_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserToeken_descriptor_, &UserToeken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FullUserID_descriptor_, &FullUserID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OpenID_descriptor_, &OpenID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZUserID_descriptor_, &ZUserID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserInfo_descriptor_, &UserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Peer_descriptor_, &Peer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConversationID_descriptor_, &ConversationID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HistoryMessageEntity_descriptor_, &HistoryMessageEntity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserMessageEntity_descriptor_, &UserMessageEntity::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserDialogEntity_descriptor_, &UserDialogEntity::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_biz_5fmodels_2eproto() {
  delete UserToeken::default_instance_;
  delete UserToeken_reflection_;
  delete FullUserID::default_instance_;
  delete FullUserID_reflection_;
  delete OpenID::default_instance_;
  delete OpenID_reflection_;
  delete ZUserID::default_instance_;
  delete ZUserID_reflection_;
  delete UserInfo::default_instance_;
  delete UserInfo_reflection_;
  delete Peer::default_instance_;
  delete Peer_reflection_;
  delete ConversationID::default_instance_;
  delete ConversationID_reflection_;
  delete HistoryMessageEntity::default_instance_;
  delete HistoryMessageEntity_reflection_;
  delete UserMessageEntity::default_instance_;
  delete UserMessageEntity_reflection_;
  delete UserDialogEntity::default_instance_;
  delete UserDialogEntity_reflection_;
}

void protobuf_AddDesc_biz_5fmodels_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_biz_5fmodels_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020biz_models.proto\022\tbiz_model\"1\n\nUserToe"
    "ken\022\017\n\007app_key\030\001 \001(\t\022\022\n\nuser_token\030\002 \001(\t"
    "\"S\n\nFullUserID\022\016\n\006app_id\030\001 \001(\r\022\017\n\007app_ke"
    "y\030\002 \001(\t\022\023\n\013app_open_id\030\003 \001(\t\022\017\n\007user_id\030"
    "\004 \001(\r\"-\n\006OpenID\022\016\n\006app_id\030\001 \001(\r\022\023\n\013app_o"
    "pen_id\030\003 \001(\t\"*\n\007ZUserID\022\016\n\006app_id\030\001 \001(\r\022"
    "\017\n\007user_id\030\002 \001(\r\"M\n\010UserInfo\022#\n\007user_id\030"
    "\001 \001(\0132\022.biz_model.ZUserID\022\014\n\004nick\030\002 \001(\t\022"
    "\016\n\006avatar\030\003 \001(\t\" \n\004Peer\022\014\n\004type\030\001 \001(\r\022\n\n"
    "\002id\030\002 \001(\r\"G\n\016ConversationID\022\026\n\016sender_us"
    "er_id\030\001 \001(\r\022\035\n\004peer\030\002 \001(\0132\017.biz_model.Pe"
    "er\"\241\002\n\024HistoryMessageEntity\022\n\n\002id\030\001 \001(\r\022"
    "\026\n\016sender_user_id\030\002 \001(\r\022\017\n\007peer_id\030\003 \001(\r"
    "\022\021\n\tpeer_type\030\004 \001(\r\022\031\n\021client_message_id"
    "\030\005 \001(\004\022\030\n\020message_peer_seq\030\006 \001(\r\022\034\n\024mess"
    "age_content_type\030\007 \001(\r\022\034\n\024message_conten"
    "t_data\030\010 \001(\014\022\030\n\020passthrough_data\030\t \001(\014\022\016"
    "\n\006status\030\n \001(\r\022\022\n\ncreated_at\030\013 \001(\004\022\022\n\nup"
    "dated_at\030\014 \001(\004\"\356\001\n\021UserMessageEntity\022\n\n\002"
    "id\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\r\022\023\n\013message_seq"
    "\030\003 \001(\r\022\026\n\016sender_user_id\030\004 \001(\r\022\017\n\007peer_i"
    "d\030\005 \001(\r\022\021\n\tpeer_type\030\006 \001(\r\022\031\n\021client_mes"
    "sage_id\030\007 \001(\004\022\030\n\020message_peer_seq\030\010 \001(\r\022"
    "\016\n\006status\030\t \001(\r\022\022\n\ncreated_at\030\n \001(\004\022\022\n\nu"
    "pdated_at\030\013 \001(\004\"\213\001\n\020UserDialogEntity\022\n\n\002"
    "id\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\r\022\017\n\007peer_id\030\005 \001"
    "(\r\022\021\n\tpeer_type\030\006 \001(\r\022\016\n\006status\030\t \001(\r\022\022\n"
    "\ncreated_at\030\n \001(\004\022\022\n\nupdated_at\030\013 \001(\004*\261\001"
    "\n\010DataType\022\n\n\006STRING\020\000\022\t\n\005INT32\020\001\022\t\n\005INT"
    "64\020\002\022\n\n\006UINT32\020\010\022\n\n\006UINT64\020\003\022\t\n\005FLOAT\020\t\022"
    "\n\n\006DOUBLE\020\005\022\010\n\004BOOL\020\006\022\010\n\004DATE\020\n\022\014\n\010DATET"
    "IME\020\004\022\n\n\006BINARY\020\007\022\010\n\004ENUM\020\r\022\r\n\tDATA_TYPE"
    "\020\013\022\r\n\tNULL_TYPE\020\014B(\n\031com.zchat.engine.bi"
    "zmodelB\tBizModelsH\002b\006proto3", 1347);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "biz_models.proto", &protobuf_RegisterTypes);
  UserToeken::default_instance_ = new UserToeken();
  FullUserID::default_instance_ = new FullUserID();
  OpenID::default_instance_ = new OpenID();
  ZUserID::default_instance_ = new ZUserID();
  UserInfo::default_instance_ = new UserInfo();
  Peer::default_instance_ = new Peer();
  ConversationID::default_instance_ = new ConversationID();
  HistoryMessageEntity::default_instance_ = new HistoryMessageEntity();
  UserMessageEntity::default_instance_ = new UserMessageEntity();
  UserDialogEntity::default_instance_ = new UserDialogEntity();
  UserToeken::default_instance_->InitAsDefaultInstance();
  FullUserID::default_instance_->InitAsDefaultInstance();
  OpenID::default_instance_->InitAsDefaultInstance();
  ZUserID::default_instance_->InitAsDefaultInstance();
  UserInfo::default_instance_->InitAsDefaultInstance();
  Peer::default_instance_->InitAsDefaultInstance();
  ConversationID::default_instance_->InitAsDefaultInstance();
  HistoryMessageEntity::default_instance_->InitAsDefaultInstance();
  UserMessageEntity::default_instance_->InitAsDefaultInstance();
  UserDialogEntity::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_biz_5fmodels_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_biz_5fmodels_2eproto {
  StaticDescriptorInitializer_biz_5fmodels_2eproto() {
    protobuf_AddDesc_biz_5fmodels_2eproto();
  }
} static_descriptor_initializer_biz_5fmodels_2eproto_;
const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_descriptor_;
}
bool DataType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserToeken::kAppKeyFieldNumber;
const int UserToeken::kUserTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserToeken::UserToeken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.UserToeken)
}

void UserToeken::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserToeken::UserToeken(const UserToeken& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.UserToeken)
}

void UserToeken::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserToeken::~UserToeken() {
  // @@protoc_insertion_point(destructor:biz_model.UserToeken)
  SharedDtor();
}

void UserToeken::SharedDtor() {
  app_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserToeken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserToeken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserToeken_descriptor_;
}

const UserToeken& UserToeken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

UserToeken* UserToeken::default_instance_ = NULL;

UserToeken* UserToeken::New(::google::protobuf::Arena* arena) const {
  UserToeken* n = new UserToeken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserToeken::Swap(UserToeken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserToeken::InternalSwap(UserToeken* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserToeken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserToeken_descriptor_;
  metadata.reflection = UserToeken_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserToeken

// optional string app_key = 1;
void UserToeken::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserToeken::app_key() const {
  // @@protoc_insertion_point(field_get:biz_model.UserToeken.app_key)
  return app_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_app_key(const ::std::string& value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.UserToeken.app_key)
}
 void UserToeken::set_app_key(const char* value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.UserToeken.app_key)
}
 void UserToeken::set_app_key(const char* value, size_t size) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.UserToeken.app_key)
}
 ::std::string* UserToeken::mutable_app_key() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.UserToeken.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserToeken::release_app_key() {
  // @@protoc_insertion_point(field_release:biz_model.UserToeken.app_key)
  
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    
  } else {
    
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserToeken.app_key)
}

// optional string user_token = 2;
void UserToeken::clear_user_token() {
  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserToeken::user_token() const {
  // @@protoc_insertion_point(field_get:biz_model.UserToeken.user_token)
  return user_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_user_token(const ::std::string& value) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.UserToeken.user_token)
}
 void UserToeken::set_user_token(const char* value) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.UserToeken.user_token)
}
 void UserToeken::set_user_token(const char* value, size_t size) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.UserToeken.user_token)
}
 ::std::string* UserToeken::mutable_user_token() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.UserToeken.user_token)
  return user_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserToeken::release_user_token() {
  // @@protoc_insertion_point(field_release:biz_model.UserToeken.user_token)
  
  return user_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_allocated_user_token(::std::string* user_token) {
  if (user_token != NULL) {
    
  } else {
    
  }
  user_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_token);
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserToeken.user_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FullUserID::kAppIdFieldNumber;
const int FullUserID::kAppKeyFieldNumber;
const int FullUserID::kAppOpenIdFieldNumber;
const int FullUserID::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FullUserID::FullUserID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.FullUserID)
}

void FullUserID::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FullUserID::FullUserID(const FullUserID& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.FullUserID)
}

void FullUserID::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_id_ = 0u;
  app_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_open_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
}

FullUserID::~FullUserID() {
  // @@protoc_insertion_point(destructor:biz_model.FullUserID)
  SharedDtor();
}

void FullUserID::SharedDtor() {
  app_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_open_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FullUserID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FullUserID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FullUserID_descriptor_;
}

const FullUserID& FullUserID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

FullUserID* FullUserID::default_instance_ = NULL;

FullUserID* FullUserID::New(::google::protobuf::Arena* arena) const {
  FullUserID* n = new FullUserID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FullUserID::Swap(FullUserID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FullUserID::InternalSwap(FullUserID* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata FullUserID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FullUserID_descriptor_;
  metadata.reflection = FullUserID_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FullUserID

// optional uint32 app_id = 1;
void FullUserID::clear_app_id() {
  app_id_ = 0u;
}
 ::google::protobuf::uint32 FullUserID::app_id() const {
  // @@protoc_insertion_point(field_get:biz_model.FullUserID.app_id)
  return app_id_;
}
 void FullUserID::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.FullUserID.app_id)
}

// optional string app_key = 2;
void FullUserID::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FullUserID::app_key() const {
  // @@protoc_insertion_point(field_get:biz_model.FullUserID.app_key)
  return app_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FullUserID::set_app_key(const ::std::string& value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.FullUserID.app_key)
}
 void FullUserID::set_app_key(const char* value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.FullUserID.app_key)
}
 void FullUserID::set_app_key(const char* value, size_t size) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.FullUserID.app_key)
}
 ::std::string* FullUserID::mutable_app_key() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.FullUserID.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FullUserID::release_app_key() {
  // @@protoc_insertion_point(field_release:biz_model.FullUserID.app_key)
  
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FullUserID::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    
  } else {
    
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:biz_model.FullUserID.app_key)
}

// optional string app_open_id = 3;
void FullUserID::clear_app_open_id() {
  app_open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FullUserID::app_open_id() const {
  // @@protoc_insertion_point(field_get:biz_model.FullUserID.app_open_id)
  return app_open_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FullUserID::set_app_open_id(const ::std::string& value) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.FullUserID.app_open_id)
}
 void FullUserID::set_app_open_id(const char* value) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.FullUserID.app_open_id)
}
 void FullUserID::set_app_open_id(const char* value, size_t size) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.FullUserID.app_open_id)
}
 ::std::string* FullUserID::mutable_app_open_id() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.FullUserID.app_open_id)
  return app_open_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FullUserID::release_app_open_id() {
  // @@protoc_insertion_point(field_release:biz_model.FullUserID.app_open_id)
  
  return app_open_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FullUserID::set_allocated_app_open_id(::std::string* app_open_id) {
  if (app_open_id != NULL) {
    
  } else {
    
  }
  app_open_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_open_id);
  // @@protoc_insertion_point(field_set_allocated:biz_model.FullUserID.app_open_id)
}

// optional uint32 user_id = 4;
void FullUserID::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 FullUserID::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.FullUserID.user_id)
  return user_id_;
}
 void FullUserID::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.FullUserID.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenID::kAppIdFieldNumber;
const int OpenID::kAppOpenIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenID::OpenID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.OpenID)
}

void OpenID::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

OpenID::OpenID(const OpenID& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.OpenID)
}

void OpenID::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_id_ = 0u;
  app_open_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpenID::~OpenID() {
  // @@protoc_insertion_point(destructor:biz_model.OpenID)
  SharedDtor();
}

void OpenID::SharedDtor() {
  app_open_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OpenID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OpenID_descriptor_;
}

const OpenID& OpenID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

OpenID* OpenID::default_instance_ = NULL;

OpenID* OpenID::New(::google::protobuf::Arena* arena) const {
  OpenID* n = new OpenID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenID::Swap(OpenID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenID::InternalSwap(OpenID* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata OpenID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OpenID_descriptor_;
  metadata.reflection = OpenID_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenID

// optional uint32 app_id = 1;
void OpenID::clear_app_id() {
  app_id_ = 0u;
}
 ::google::protobuf::uint32 OpenID::app_id() const {
  // @@protoc_insertion_point(field_get:biz_model.OpenID.app_id)
  return app_id_;
}
 void OpenID::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.OpenID.app_id)
}

// optional string app_open_id = 3;
void OpenID::clear_app_open_id() {
  app_open_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& OpenID::app_open_id() const {
  // @@protoc_insertion_point(field_get:biz_model.OpenID.app_open_id)
  return app_open_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OpenID::set_app_open_id(const ::std::string& value) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.OpenID.app_open_id)
}
 void OpenID::set_app_open_id(const char* value) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.OpenID.app_open_id)
}
 void OpenID::set_app_open_id(const char* value, size_t size) {
  
  app_open_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.OpenID.app_open_id)
}
 ::std::string* OpenID::mutable_app_open_id() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.OpenID.app_open_id)
  return app_open_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OpenID::release_app_open_id() {
  // @@protoc_insertion_point(field_release:biz_model.OpenID.app_open_id)
  
  return app_open_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OpenID::set_allocated_app_open_id(::std::string* app_open_id) {
  if (app_open_id != NULL) {
    
  } else {
    
  }
  app_open_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_open_id);
  // @@protoc_insertion_point(field_set_allocated:biz_model.OpenID.app_open_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZUserID::kAppIdFieldNumber;
const int ZUserID::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZUserID::ZUserID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.ZUserID)
}

void ZUserID::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ZUserID::ZUserID(const ZUserID& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.ZUserID)
}

void ZUserID::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  app_id_ = 0u;
  user_id_ = 0u;
}

ZUserID::~ZUserID() {
  // @@protoc_insertion_point(destructor:biz_model.ZUserID)
  SharedDtor();
}

void ZUserID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ZUserID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZUserID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZUserID_descriptor_;
}

const ZUserID& ZUserID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

ZUserID* ZUserID::default_instance_ = NULL;

ZUserID* ZUserID::New(::google::protobuf::Arena* arena) const {
  ZUserID* n = new ZUserID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZUserID::Swap(ZUserID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZUserID::InternalSwap(ZUserID* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ZUserID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZUserID_descriptor_;
  metadata.reflection = ZUserID_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZUserID

// optional uint32 app_id = 1;
void ZUserID::clear_app_id() {
  app_id_ = 0u;
}
 ::google::protobuf::uint32 ZUserID::app_id() const {
  // @@protoc_insertion_point(field_get:biz_model.ZUserID.app_id)
  return app_id_;
}
 void ZUserID::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.ZUserID.app_id)
}

// optional uint32 user_id = 2;
void ZUserID::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 ZUserID::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.ZUserID.user_id)
  return user_id_;
}
 void ZUserID::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.ZUserID.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserIdFieldNumber;
const int UserInfo::kNickFieldNumber;
const int UserInfo::kAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.UserInfo)
}

void UserInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  user_id_ = const_cast< ::biz_model::ZUserID*>(&::biz_model::ZUserID::default_instance());
}

UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.UserInfo)
}

void UserInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_ = NULL;
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:biz_model.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete user_id_;
  }
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_descriptor_;
}

const UserInfo& UserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

UserInfo* UserInfo::default_instance_ = NULL;

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_descriptor_;
  metadata.reflection = UserInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// optional .biz_model.ZUserID user_id = 1;
bool UserInfo::has_user_id() const {
  return !_is_default_instance_ && user_id_ != NULL;
}
void UserInfo::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::biz_model::ZUserID& UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserInfo.user_id)
  return user_id_ != NULL ? *user_id_ : *default_instance_->user_id_;
}
::biz_model::ZUserID* UserInfo::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::biz_model::ZUserID;
  }
  // @@protoc_insertion_point(field_mutable:biz_model.UserInfo.user_id)
  return user_id_;
}
::biz_model::ZUserID* UserInfo::release_user_id() {
  // @@protoc_insertion_point(field_release:biz_model.UserInfo.user_id)
  
  ::biz_model::ZUserID* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void UserInfo::set_allocated_user_id(::biz_model::ZUserID* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserInfo.user_id)
}

// optional string nick = 2;
void UserInfo::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserInfo::nick() const {
  // @@protoc_insertion_point(field_get:biz_model.UserInfo.nick)
  return nick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_nick(const ::std::string& value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.UserInfo.nick)
}
 void UserInfo::set_nick(const char* value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.UserInfo.nick)
}
 void UserInfo::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.UserInfo.nick)
}
 ::std::string* UserInfo::mutable_nick() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.UserInfo.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserInfo::release_nick() {
  // @@protoc_insertion_point(field_release:biz_model.UserInfo.nick)
  
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserInfo.nick)
}

// optional string avatar = 3;
void UserInfo::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserInfo::avatar() const {
  // @@protoc_insertion_point(field_get:biz_model.UserInfo.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.UserInfo.avatar)
}
 void UserInfo::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.UserInfo.avatar)
}
 void UserInfo::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.UserInfo.avatar)
}
 ::std::string* UserInfo::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.UserInfo.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:biz_model.UserInfo.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:biz_model.UserInfo.avatar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Peer::kTypeFieldNumber;
const int Peer::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Peer::Peer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.Peer)
}

void Peer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Peer::Peer(const Peer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.Peer)
}

void Peer::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0u;
  id_ = 0u;
}

Peer::~Peer() {
  // @@protoc_insertion_point(destructor:biz_model.Peer)
  SharedDtor();
}

void Peer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Peer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Peer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Peer_descriptor_;
}

const Peer& Peer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

Peer* Peer::default_instance_ = NULL;

Peer* Peer::New(::google::protobuf::Arena* arena) const {
  Peer* n = new Peer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Peer::Swap(Peer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Peer::InternalSwap(Peer* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Peer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Peer_descriptor_;
  metadata.reflection = Peer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Peer

// optional uint32 type = 1;
void Peer::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 Peer::type() const {
  // @@protoc_insertion_point(field_get:biz_model.Peer.type)
  return type_;
}
 void Peer::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.Peer.type)
}

// optional uint32 id = 2;
void Peer::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 Peer::id() const {
  // @@protoc_insertion_point(field_get:biz_model.Peer.id)
  return id_;
}
 void Peer::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.Peer.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConversationID::kSenderUserIdFieldNumber;
const int ConversationID::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConversationID::ConversationID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.ConversationID)
}

void ConversationID::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::biz_model::Peer*>(&::biz_model::Peer::default_instance());
}

ConversationID::ConversationID(const ConversationID& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.ConversationID)
}

void ConversationID::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sender_user_id_ = 0u;
  peer_ = NULL;
}

ConversationID::~ConversationID() {
  // @@protoc_insertion_point(destructor:biz_model.ConversationID)
  SharedDtor();
}

void ConversationID::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void ConversationID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConversationID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConversationID_descriptor_;
}

const ConversationID& ConversationID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

ConversationID* ConversationID::default_instance_ = NULL;

ConversationID* ConversationID::New(::google::protobuf::Arena* arena) const {
  ConversationID* n = new ConversationID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConversationID::Swap(ConversationID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConversationID::InternalSwap(ConversationID* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ConversationID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConversationID_descriptor_;
  metadata.reflection = ConversationID_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConversationID

// optional uint32 sender_user_id = 1;
void ConversationID::clear_sender_user_id() {
  sender_user_id_ = 0u;
}
 ::google::protobuf::uint32 ConversationID::sender_user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.ConversationID.sender_user_id)
  return sender_user_id_;
}
 void ConversationID::set_sender_user_id(::google::protobuf::uint32 value) {
  
  sender_user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.ConversationID.sender_user_id)
}

// optional .biz_model.Peer peer = 2;
bool ConversationID::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void ConversationID::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::biz_model::Peer& ConversationID::peer() const {
  // @@protoc_insertion_point(field_get:biz_model.ConversationID.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::biz_model::Peer* ConversationID::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::biz_model::Peer;
  }
  // @@protoc_insertion_point(field_mutable:biz_model.ConversationID.peer)
  return peer_;
}
::biz_model::Peer* ConversationID::release_peer() {
  // @@protoc_insertion_point(field_release:biz_model.ConversationID.peer)
  
  ::biz_model::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ConversationID::set_allocated_peer(::biz_model::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:biz_model.ConversationID.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HistoryMessageEntity::kIdFieldNumber;
const int HistoryMessageEntity::kSenderUserIdFieldNumber;
const int HistoryMessageEntity::kPeerIdFieldNumber;
const int HistoryMessageEntity::kPeerTypeFieldNumber;
const int HistoryMessageEntity::kClientMessageIdFieldNumber;
const int HistoryMessageEntity::kMessagePeerSeqFieldNumber;
const int HistoryMessageEntity::kMessageContentTypeFieldNumber;
const int HistoryMessageEntity::kMessageContentDataFieldNumber;
const int HistoryMessageEntity::kPassthroughDataFieldNumber;
const int HistoryMessageEntity::kStatusFieldNumber;
const int HistoryMessageEntity::kCreatedAtFieldNumber;
const int HistoryMessageEntity::kUpdatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HistoryMessageEntity::HistoryMessageEntity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.HistoryMessageEntity)
}

void HistoryMessageEntity::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HistoryMessageEntity::HistoryMessageEntity(const HistoryMessageEntity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.HistoryMessageEntity)
}

void HistoryMessageEntity::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  sender_user_id_ = 0u;
  peer_id_ = 0u;
  peer_type_ = 0u;
  client_message_id_ = GOOGLE_ULONGLONG(0);
  message_peer_seq_ = 0u;
  message_content_type_ = 0u;
  message_content_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passthrough_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
}

HistoryMessageEntity::~HistoryMessageEntity() {
  // @@protoc_insertion_point(destructor:biz_model.HistoryMessageEntity)
  SharedDtor();
}

void HistoryMessageEntity::SharedDtor() {
  message_content_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passthrough_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HistoryMessageEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HistoryMessageEntity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HistoryMessageEntity_descriptor_;
}

const HistoryMessageEntity& HistoryMessageEntity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

HistoryMessageEntity* HistoryMessageEntity::default_instance_ = NULL;

HistoryMessageEntity* HistoryMessageEntity::New(::google::protobuf::Arena* arena) const {
  HistoryMessageEntity* n = new HistoryMessageEntity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HistoryMessageEntity::Swap(HistoryMessageEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HistoryMessageEntity::InternalSwap(HistoryMessageEntity* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata HistoryMessageEntity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HistoryMessageEntity_descriptor_;
  metadata.reflection = HistoryMessageEntity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HistoryMessageEntity

// optional uint32 id = 1;
void HistoryMessageEntity::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 HistoryMessageEntity::id() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.id)
  return id_;
}
 void HistoryMessageEntity::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.id)
}

// optional uint32 sender_user_id = 2;
void HistoryMessageEntity::clear_sender_user_id() {
  sender_user_id_ = 0u;
}
 ::google::protobuf::uint32 HistoryMessageEntity::sender_user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.sender_user_id)
  return sender_user_id_;
}
 void HistoryMessageEntity::set_sender_user_id(::google::protobuf::uint32 value) {
  
  sender_user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.sender_user_id)
}

// optional uint32 peer_id = 3;
void HistoryMessageEntity::clear_peer_id() {
  peer_id_ = 0u;
}
 ::google::protobuf::uint32 HistoryMessageEntity::peer_id() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.peer_id)
  return peer_id_;
}
 void HistoryMessageEntity::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.peer_id)
}

// optional uint32 peer_type = 4;
void HistoryMessageEntity::clear_peer_type() {
  peer_type_ = 0u;
}
 ::google::protobuf::uint32 HistoryMessageEntity::peer_type() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.peer_type)
  return peer_type_;
}
 void HistoryMessageEntity::set_peer_type(::google::protobuf::uint32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.peer_type)
}

// optional uint64 client_message_id = 5;
void HistoryMessageEntity::clear_client_message_id() {
  client_message_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HistoryMessageEntity::client_message_id() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.client_message_id)
  return client_message_id_;
}
 void HistoryMessageEntity::set_client_message_id(::google::protobuf::uint64 value) {
  
  client_message_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.client_message_id)
}

// optional uint32 message_peer_seq = 6;
void HistoryMessageEntity::clear_message_peer_seq() {
  message_peer_seq_ = 0u;
}
 ::google::protobuf::uint32 HistoryMessageEntity::message_peer_seq() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.message_peer_seq)
  return message_peer_seq_;
}
 void HistoryMessageEntity::set_message_peer_seq(::google::protobuf::uint32 value) {
  
  message_peer_seq_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.message_peer_seq)
}

// optional uint32 message_content_type = 7;
void HistoryMessageEntity::clear_message_content_type() {
  message_content_type_ = 0u;
}
 ::google::protobuf::uint32 HistoryMessageEntity::message_content_type() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.message_content_type)
  return message_content_type_;
}
 void HistoryMessageEntity::set_message_content_type(::google::protobuf::uint32 value) {
  
  message_content_type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.message_content_type)
}

// optional bytes message_content_data = 8;
void HistoryMessageEntity::clear_message_content_data() {
  message_content_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HistoryMessageEntity::message_content_data() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.message_content_data)
  return message_content_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HistoryMessageEntity::set_message_content_data(const ::std::string& value) {
  
  message_content_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.message_content_data)
}
 void HistoryMessageEntity::set_message_content_data(const char* value) {
  
  message_content_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.HistoryMessageEntity.message_content_data)
}
 void HistoryMessageEntity::set_message_content_data(const void* value, size_t size) {
  
  message_content_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.HistoryMessageEntity.message_content_data)
}
 ::std::string* HistoryMessageEntity::mutable_message_content_data() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.HistoryMessageEntity.message_content_data)
  return message_content_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HistoryMessageEntity::release_message_content_data() {
  // @@protoc_insertion_point(field_release:biz_model.HistoryMessageEntity.message_content_data)
  
  return message_content_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HistoryMessageEntity::set_allocated_message_content_data(::std::string* message_content_data) {
  if (message_content_data != NULL) {
    
  } else {
    
  }
  message_content_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_content_data);
  // @@protoc_insertion_point(field_set_allocated:biz_model.HistoryMessageEntity.message_content_data)
}

// optional bytes passthrough_data = 9;
void HistoryMessageEntity::clear_passthrough_data() {
  passthrough_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HistoryMessageEntity::passthrough_data() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.passthrough_data)
  return passthrough_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HistoryMessageEntity::set_passthrough_data(const ::std::string& value) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.passthrough_data)
}
 void HistoryMessageEntity::set_passthrough_data(const char* value) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:biz_model.HistoryMessageEntity.passthrough_data)
}
 void HistoryMessageEntity::set_passthrough_data(const void* value, size_t size) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:biz_model.HistoryMessageEntity.passthrough_data)
}
 ::std::string* HistoryMessageEntity::mutable_passthrough_data() {
  
  // @@protoc_insertion_point(field_mutable:biz_model.HistoryMessageEntity.passthrough_data)
  return passthrough_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HistoryMessageEntity::release_passthrough_data() {
  // @@protoc_insertion_point(field_release:biz_model.HistoryMessageEntity.passthrough_data)
  
  return passthrough_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HistoryMessageEntity::set_allocated_passthrough_data(::std::string* passthrough_data) {
  if (passthrough_data != NULL) {
    
  } else {
    
  }
  passthrough_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passthrough_data);
  // @@protoc_insertion_point(field_set_allocated:biz_model.HistoryMessageEntity.passthrough_data)
}

// optional uint32 status = 10;
void HistoryMessageEntity::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 HistoryMessageEntity::status() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.status)
  return status_;
}
 void HistoryMessageEntity::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.status)
}

// optional uint64 created_at = 11;
void HistoryMessageEntity::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HistoryMessageEntity::created_at() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.created_at)
  return created_at_;
}
 void HistoryMessageEntity::set_created_at(::google::protobuf::uint64 value) {
  
  created_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.created_at)
}

// optional uint64 updated_at = 12;
void HistoryMessageEntity::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HistoryMessageEntity::updated_at() const {
  // @@protoc_insertion_point(field_get:biz_model.HistoryMessageEntity.updated_at)
  return updated_at_;
}
 void HistoryMessageEntity::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.HistoryMessageEntity.updated_at)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserMessageEntity::kIdFieldNumber;
const int UserMessageEntity::kUserIdFieldNumber;
const int UserMessageEntity::kMessageSeqFieldNumber;
const int UserMessageEntity::kSenderUserIdFieldNumber;
const int UserMessageEntity::kPeerIdFieldNumber;
const int UserMessageEntity::kPeerTypeFieldNumber;
const int UserMessageEntity::kClientMessageIdFieldNumber;
const int UserMessageEntity::kMessagePeerSeqFieldNumber;
const int UserMessageEntity::kStatusFieldNumber;
const int UserMessageEntity::kCreatedAtFieldNumber;
const int UserMessageEntity::kUpdatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserMessageEntity::UserMessageEntity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.UserMessageEntity)
}

void UserMessageEntity::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserMessageEntity::UserMessageEntity(const UserMessageEntity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.UserMessageEntity)
}

void UserMessageEntity::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
  user_id_ = 0u;
  message_seq_ = 0u;
  sender_user_id_ = 0u;
  peer_id_ = 0u;
  peer_type_ = 0u;
  client_message_id_ = GOOGLE_ULONGLONG(0);
  message_peer_seq_ = 0u;
  status_ = 0u;
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
}

UserMessageEntity::~UserMessageEntity() {
  // @@protoc_insertion_point(destructor:biz_model.UserMessageEntity)
  SharedDtor();
}

void UserMessageEntity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserMessageEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserMessageEntity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserMessageEntity_descriptor_;
}

const UserMessageEntity& UserMessageEntity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

UserMessageEntity* UserMessageEntity::default_instance_ = NULL;

UserMessageEntity* UserMessageEntity::New(::google::protobuf::Arena* arena) const {
  UserMessageEntity* n = new UserMessageEntity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserMessageEntity::Swap(UserMessageEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserMessageEntity::InternalSwap(UserMessageEntity* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserMessageEntity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserMessageEntity_descriptor_;
  metadata.reflection = UserMessageEntity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserMessageEntity

// optional uint32 id = 1;
void UserMessageEntity::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 UserMessageEntity::id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.id)
  return id_;
}
 void UserMessageEntity::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.id)
}

// optional uint32 user_id = 2;
void UserMessageEntity::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 UserMessageEntity::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.user_id)
  return user_id_;
}
 void UserMessageEntity::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.user_id)
}

// optional uint32 message_seq = 3;
void UserMessageEntity::clear_message_seq() {
  message_seq_ = 0u;
}
 ::google::protobuf::uint32 UserMessageEntity::message_seq() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.message_seq)
  return message_seq_;
}
 void UserMessageEntity::set_message_seq(::google::protobuf::uint32 value) {
  
  message_seq_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.message_seq)
}

// optional uint32 sender_user_id = 4;
void UserMessageEntity::clear_sender_user_id() {
  sender_user_id_ = 0u;
}
 ::google::protobuf::uint32 UserMessageEntity::sender_user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.sender_user_id)
  return sender_user_id_;
}
 void UserMessageEntity::set_sender_user_id(::google::protobuf::uint32 value) {
  
  sender_user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.sender_user_id)
}

// optional uint32 peer_id = 5;
void UserMessageEntity::clear_peer_id() {
  peer_id_ = 0u;
}
 ::google::protobuf::uint32 UserMessageEntity::peer_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.peer_id)
  return peer_id_;
}
 void UserMessageEntity::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.peer_id)
}

// optional uint32 peer_type = 6;
void UserMessageEntity::clear_peer_type() {
  peer_type_ = 0u;
}
 ::google::protobuf::uint32 UserMessageEntity::peer_type() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.peer_type)
  return peer_type_;
}
 void UserMessageEntity::set_peer_type(::google::protobuf::uint32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.peer_type)
}

// optional uint64 client_message_id = 7;
void UserMessageEntity::clear_client_message_id() {
  client_message_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UserMessageEntity::client_message_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.client_message_id)
  return client_message_id_;
}
 void UserMessageEntity::set_client_message_id(::google::protobuf::uint64 value) {
  
  client_message_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.client_message_id)
}

// optional uint32 message_peer_seq = 8;
void UserMessageEntity::clear_message_peer_seq() {
  message_peer_seq_ = 0u;
}
 ::google::protobuf::uint32 UserMessageEntity::message_peer_seq() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.message_peer_seq)
  return message_peer_seq_;
}
 void UserMessageEntity::set_message_peer_seq(::google::protobuf::uint32 value) {
  
  message_peer_seq_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.message_peer_seq)
}

// optional uint32 status = 9;
void UserMessageEntity::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 UserMessageEntity::status() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.status)
  return status_;
}
 void UserMessageEntity::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.status)
}

// optional uint64 created_at = 10;
void UserMessageEntity::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UserMessageEntity::created_at() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.created_at)
  return created_at_;
}
 void UserMessageEntity::set_created_at(::google::protobuf::uint64 value) {
  
  created_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.created_at)
}

// optional uint64 updated_at = 11;
void UserMessageEntity::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UserMessageEntity::updated_at() const {
  // @@protoc_insertion_point(field_get:biz_model.UserMessageEntity.updated_at)
  return updated_at_;
}
 void UserMessageEntity::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserMessageEntity.updated_at)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserDialogEntity::kIdFieldNumber;
const int UserDialogEntity::kUserIdFieldNumber;
const int UserDialogEntity::kPeerIdFieldNumber;
const int UserDialogEntity::kPeerTypeFieldNumber;
const int UserDialogEntity::kStatusFieldNumber;
const int UserDialogEntity::kCreatedAtFieldNumber;
const int UserDialogEntity::kUpdatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserDialogEntity::UserDialogEntity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:biz_model.UserDialogEntity)
}

void UserDialogEntity::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserDialogEntity::UserDialogEntity(const UserDialogEntity& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:biz_model.UserDialogEntity)
}

void UserDialogEntity::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = 0u;
  user_id_ = 0u;
  peer_id_ = 0u;
  peer_type_ = 0u;
  status_ = 0u;
  created_at_ = GOOGLE_ULONGLONG(0);
  updated_at_ = GOOGLE_ULONGLONG(0);
}

UserDialogEntity::~UserDialogEntity() {
  // @@protoc_insertion_point(destructor:biz_model.UserDialogEntity)
  SharedDtor();
}

void UserDialogEntity::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UserDialogEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserDialogEntity::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserDialogEntity_descriptor_;
}

const UserDialogEntity& UserDialogEntity::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_biz_5fmodels_2eproto();
  return *default_instance_;
}

UserDialogEntity* UserDialogEntity::default_instance_ = NULL;

UserDialogEntity* UserDialogEntity::New(::google::protobuf::Arena* arena) const {
  UserDialogEntity* n = new UserDialogEntity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserDialogEntity::Swap(UserDialogEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserDialogEntity::InternalSwap(UserDialogEntity* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserDialogEntity::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserDialogEntity_descriptor_;
  metadata.reflection = UserDialogEntity_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserDialogEntity

// optional uint32 id = 1;
void UserDialogEntity::clear_id() {
  id_ = 0u;
}
 ::google::protobuf::uint32 UserDialogEntity::id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.id)
  return id_;
}
 void UserDialogEntity::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.id)
}

// optional uint32 user_id = 2;
void UserDialogEntity::clear_user_id() {
  user_id_ = 0u;
}
 ::google::protobuf::uint32 UserDialogEntity::user_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.user_id)
  return user_id_;
}
 void UserDialogEntity::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.user_id)
}

// optional uint32 peer_id = 5;
void UserDialogEntity::clear_peer_id() {
  peer_id_ = 0u;
}
 ::google::protobuf::uint32 UserDialogEntity::peer_id() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.peer_id)
  return peer_id_;
}
 void UserDialogEntity::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.peer_id)
}

// optional uint32 peer_type = 6;
void UserDialogEntity::clear_peer_type() {
  peer_type_ = 0u;
}
 ::google::protobuf::uint32 UserDialogEntity::peer_type() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.peer_type)
  return peer_type_;
}
 void UserDialogEntity::set_peer_type(::google::protobuf::uint32 value) {
  
  peer_type_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.peer_type)
}

// optional uint32 status = 9;
void UserDialogEntity::clear_status() {
  status_ = 0u;
}
 ::google::protobuf::uint32 UserDialogEntity::status() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.status)
  return status_;
}
 void UserDialogEntity::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.status)
}

// optional uint64 created_at = 10;
void UserDialogEntity::clear_created_at() {
  created_at_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UserDialogEntity::created_at() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.created_at)
  return created_at_;
}
 void UserDialogEntity::set_created_at(::google::protobuf::uint64 value) {
  
  created_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.created_at)
}

// optional uint64 updated_at = 11;
void UserDialogEntity::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UserDialogEntity::updated_at() const {
  // @@protoc_insertion_point(field_get:biz_model.UserDialogEntity.updated_at)
  return updated_at_;
}
 void UserDialogEntity::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:biz_model.UserDialogEntity.updated_at)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace biz_model

// @@protoc_insertion_point(global_scope)
