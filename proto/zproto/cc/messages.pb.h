// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_messages_2eproto__INCLUDED
#define PROTOBUF_messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "bases.pb.h"
// @@protoc_insertion_point(includes)

namespace zproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_messages_2eproto();
void protobuf_AssignDesc_messages_2eproto();
void protobuf_ShutdownFile_messages_2eproto();

class LoadDialogsReq;
class LoadDialogsRsp;
class LoadHistoryMessageReq;
class LoadHistoryMessageRsp;
class MessageDataNotify;
class MessageNotify;
class MessageReadReq;
class MessageSyncReq;
class MessageSyncRsp;
class SendMessageReq;
class SeqDateRsp;

// ===================================================================

class SendMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SendMessageReq) */ {
 public:
  SendMessageReq();
  virtual ~SendMessageReq();

  SendMessageReq(const SendMessageReq& from);

  inline SendMessageReq& operator=(const SendMessageReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMessageReq& default_instance();

  void Swap(SendMessageReq* other);

  // implements Message ----------------------------------------------

  inline SendMessageReq* New() const { return New(NULL); }

  SendMessageReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zproto.MessageContainer message_data = 1;
  bool has_message_data() const;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 1;
  const ::zproto::MessageContainer& message_data() const;
  ::zproto::MessageContainer* mutable_message_data();
  ::zproto::MessageContainer* release_message_data();
  void set_allocated_message_data(::zproto::MessageContainer* message_data);

  // @@protoc_insertion_point(class_scope:zproto.SendMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::zproto::MessageContainer* message_data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static SendMessageReq* default_instance_;
};
// -------------------------------------------------------------------

class SeqDateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SeqDateRsp) */ {
 public:
  SeqDateRsp();
  virtual ~SeqDateRsp();

  SeqDateRsp(const SeqDateRsp& from);

  inline SeqDateRsp& operator=(const SeqDateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SeqDateRsp& default_instance();

  void Swap(SeqDateRsp* other);

  // implements Message ----------------------------------------------

  inline SeqDateRsp* New() const { return New(NULL); }

  SeqDateRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SeqDateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 seq = 1;
  void clear_seq();
  static const int kSeqFieldNumber = 1;
  ::google::protobuf::uint64 seq() const;
  void set_seq(::google::protobuf::uint64 value);

  // optional uint64 created = 2;
  void clear_created();
  static const int kCreatedFieldNumber = 2;
  ::google::protobuf::uint64 created() const;
  void set_created(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.SeqDateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 seq_;
  ::google::protobuf::uint64 created_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static SeqDateRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageNotify) */ {
 public:
  MessageNotify();
  virtual ~MessageNotify();

  MessageNotify(const MessageNotify& from);

  inline MessageNotify& operator=(const MessageNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageNotify& default_instance();

  void Swap(MessageNotify* other);

  // implements Message ----------------------------------------------

  inline MessageNotify* New() const { return New(NULL); }

  MessageNotify* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.MessageNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static MessageNotify* default_instance_;
};
// -------------------------------------------------------------------

class MessageDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageDataNotify) */ {
 public:
  MessageDataNotify();
  virtual ~MessageDataNotify();

  MessageDataNotify(const MessageDataNotify& from);

  inline MessageDataNotify& operator=(const MessageDataNotify& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDataNotify& default_instance();

  void Swap(MessageDataNotify* other);

  // implements Message ----------------------------------------------

  inline MessageDataNotify* New() const { return New(NULL); }

  MessageDataNotify* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zproto.MessageContainer message_data = 1;
  bool has_message_data() const;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 1;
  const ::zproto::MessageContainer& message_data() const;
  ::zproto::MessageContainer* mutable_message_data();
  ::zproto::MessageContainer* release_message_data();
  void set_allocated_message_data(::zproto::MessageContainer* message_data);

  // @@protoc_insertion_point(class_scope:zproto.MessageDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::zproto::MessageContainer* message_data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static MessageDataNotify* default_instance_;
};
// -------------------------------------------------------------------

class MessageSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageSyncReq) */ {
 public:
  MessageSyncReq();
  virtual ~MessageSyncReq();

  MessageSyncReq(const MessageSyncReq& from);

  inline MessageSyncReq& operator=(const MessageSyncReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSyncReq& default_instance();

  void Swap(MessageSyncReq* other);

  // implements Message ----------------------------------------------

  inline MessageSyncReq* New() const { return New(NULL); }

  MessageSyncReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 received_max_seq = 1;
  void clear_received_max_seq();
  static const int kReceivedMaxSeqFieldNumber = 1;
  ::google::protobuf::uint64 received_max_seq() const;
  void set_received_max_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.MessageSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 received_max_seq_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static MessageSyncReq* default_instance_;
};
// -------------------------------------------------------------------

class MessageSyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageSyncRsp) */ {
 public:
  MessageSyncRsp();
  virtual ~MessageSyncRsp();

  MessageSyncRsp(const MessageSyncRsp& from);

  inline MessageSyncRsp& operator=(const MessageSyncRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageSyncRsp& default_instance();

  void Swap(MessageSyncRsp* other);

  // implements Message ----------------------------------------------

  inline MessageSyncRsp* New() const { return New(NULL); }

  MessageSyncRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageSyncRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.MessageContainer message_data = 1;
  int message_data_size() const;
  void clear_message_data();
  static const int kMessageDataFieldNumber = 1;
  const ::zproto::MessageContainer& message_data(int index) const;
  ::zproto::MessageContainer* mutable_message_data(int index);
  ::zproto::MessageContainer* add_message_data();
  ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
      mutable_message_data();
  const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
      message_data() const;

  // @@protoc_insertion_point(class_scope:zproto.MessageSyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer > message_data_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static MessageSyncRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageReadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.MessageReadReq) */ {
 public:
  MessageReadReq();
  virtual ~MessageReadReq();

  MessageReadReq(const MessageReadReq& from);

  inline MessageReadReq& operator=(const MessageReadReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageReadReq& default_instance();

  void Swap(MessageReadReq* other);

  // implements Message ----------------------------------------------

  inline MessageReadReq* New() const { return New(NULL); }

  MessageReadReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageReadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zproto.Peer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::zproto::Peer& peer() const;
  ::zproto::Peer* mutable_peer();
  ::zproto::Peer* release_peer();
  void set_allocated_peer(::zproto::Peer* peer);

  // optional uint64 read_max_seq = 2;
  void clear_read_max_seq();
  static const int kReadMaxSeqFieldNumber = 2;
  ::google::protobuf::uint64 read_max_seq() const;
  void set_read_max_seq(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:zproto.MessageReadReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::zproto::Peer* peer_;
  ::google::protobuf::uint64 read_max_seq_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static MessageReadReq* default_instance_;
};
// -------------------------------------------------------------------

class LoadHistoryMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadHistoryMessageReq) */ {
 public:
  LoadHistoryMessageReq();
  virtual ~LoadHistoryMessageReq();

  LoadHistoryMessageReq(const LoadHistoryMessageReq& from);

  inline LoadHistoryMessageReq& operator=(const LoadHistoryMessageReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadHistoryMessageReq& default_instance();

  void Swap(LoadHistoryMessageReq* other);

  // implements Message ----------------------------------------------

  inline LoadHistoryMessageReq* New() const { return New(NULL); }

  LoadHistoryMessageReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadHistoryMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .zproto.Peer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::zproto::Peer& peer() const;
  ::zproto::Peer* mutable_peer();
  ::zproto::Peer* release_peer();
  void set_allocated_peer(::zproto::Peer* peer);

  // optional uint32 date = 2;
  void clear_date();
  static const int kDateFieldNumber = 2;
  ::google::protobuf::uint32 date() const;
  void set_date(::google::protobuf::uint32 value);

  // optional .zproto.EnumHelper.ListLoadMode load_mode = 3;
  void clear_load_mode();
  static const int kLoadModeFieldNumber = 3;
  ::zproto::EnumHelper_ListLoadMode load_mode() const;
  void set_load_mode(::zproto::EnumHelper_ListLoadMode value);

  // optional uint32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.LoadHistoryMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::zproto::Peer* peer_;
  ::google::protobuf::uint32 date_;
  int load_mode_;
  ::google::protobuf::uint32 limit_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static LoadHistoryMessageReq* default_instance_;
};
// -------------------------------------------------------------------

class LoadHistoryMessageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadHistoryMessageRsp) */ {
 public:
  LoadHistoryMessageRsp();
  virtual ~LoadHistoryMessageRsp();

  LoadHistoryMessageRsp(const LoadHistoryMessageRsp& from);

  inline LoadHistoryMessageRsp& operator=(const LoadHistoryMessageRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadHistoryMessageRsp& default_instance();

  void Swap(LoadHistoryMessageRsp* other);

  // implements Message ----------------------------------------------

  inline LoadHistoryMessageRsp* New() const { return New(NULL); }

  LoadHistoryMessageRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadHistoryMessageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.MessageContainer history = 1;
  int history_size() const;
  void clear_history();
  static const int kHistoryFieldNumber = 1;
  const ::zproto::MessageContainer& history(int index) const;
  ::zproto::MessageContainer* mutable_history(int index);
  ::zproto::MessageContainer* add_history();
  ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
      mutable_history();
  const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
      history() const;

  // @@protoc_insertion_point(class_scope:zproto.LoadHistoryMessageRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer > history_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static LoadHistoryMessageRsp* default_instance_;
};
// -------------------------------------------------------------------

class LoadDialogsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadDialogsReq) */ {
 public:
  LoadDialogsReq();
  virtual ~LoadDialogsReq();

  LoadDialogsReq(const LoadDialogsReq& from);

  inline LoadDialogsReq& operator=(const LoadDialogsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadDialogsReq& default_instance();

  void Swap(LoadDialogsReq* other);

  // implements Message ----------------------------------------------

  inline LoadDialogsReq* New() const { return New(NULL); }

  LoadDialogsReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadDialogsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 min_date = 1;
  void clear_min_date();
  static const int kMinDateFieldNumber = 1;
  ::google::protobuf::uint64 min_date() const;
  void set_min_date(::google::protobuf::uint64 value);

  // optional uint32 limit = 2;
  void clear_limit();
  static const int kLimitFieldNumber = 2;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:zproto.LoadDialogsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 min_date_;
  ::google::protobuf::uint32 limit_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static LoadDialogsReq* default_instance_;
};
// -------------------------------------------------------------------

class LoadDialogsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadDialogsRsp) */ {
 public:
  LoadDialogsRsp();
  virtual ~LoadDialogsRsp();

  LoadDialogsRsp(const LoadDialogsRsp& from);

  inline LoadDialogsRsp& operator=(const LoadDialogsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadDialogsRsp& default_instance();

  void Swap(LoadDialogsRsp* other);

  // implements Message ----------------------------------------------

  inline LoadDialogsRsp* New() const { return New(NULL); }

  LoadDialogsRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadDialogsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.Dialog dialogs = 1;
  int dialogs_size() const;
  void clear_dialogs();
  static const int kDialogsFieldNumber = 1;
  const ::zproto::Dialog& dialogs(int index) const;
  ::zproto::Dialog* mutable_dialogs(int index);
  ::zproto::Dialog* add_dialogs();
  ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >*
      mutable_dialogs();
  const ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >&
      dialogs() const;

  // @@protoc_insertion_point(class_scope:zproto.LoadDialogsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::zproto::Dialog > dialogs_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_messages_2eproto();
  friend void protobuf_AssignDesc_messages_2eproto();
  friend void protobuf_ShutdownFile_messages_2eproto();

  void InitAsDefaultInstance();
  static LoadDialogsRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SendMessageReq

// optional .zproto.MessageContainer message_data = 1;
inline bool SendMessageReq::has_message_data() const {
  return !_is_default_instance_ && message_data_ != NULL;
}
inline void SendMessageReq::clear_message_data() {
  if (GetArenaNoVirtual() == NULL && message_data_ != NULL) delete message_data_;
  message_data_ = NULL;
}
inline const ::zproto::MessageContainer& SendMessageReq::message_data() const {
  // @@protoc_insertion_point(field_get:zproto.SendMessageReq.message_data)
  return message_data_ != NULL ? *message_data_ : *default_instance_->message_data_;
}
inline ::zproto::MessageContainer* SendMessageReq::mutable_message_data() {
  
  if (message_data_ == NULL) {
    message_data_ = new ::zproto::MessageContainer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.SendMessageReq.message_data)
  return message_data_;
}
inline ::zproto::MessageContainer* SendMessageReq::release_message_data() {
  // @@protoc_insertion_point(field_release:zproto.SendMessageReq.message_data)
  
  ::zproto::MessageContainer* temp = message_data_;
  message_data_ = NULL;
  return temp;
}
inline void SendMessageReq::set_allocated_message_data(::zproto::MessageContainer* message_data) {
  delete message_data_;
  message_data_ = message_data;
  if (message_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.SendMessageReq.message_data)
}

// -------------------------------------------------------------------

// SeqDateRsp

// optional uint64 seq = 1;
inline void SeqDateRsp::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SeqDateRsp::seq() const {
  // @@protoc_insertion_point(field_get:zproto.SeqDateRsp.seq)
  return seq_;
}
inline void SeqDateRsp::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.SeqDateRsp.seq)
}

// optional uint64 created = 2;
inline void SeqDateRsp::clear_created() {
  created_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SeqDateRsp::created() const {
  // @@protoc_insertion_point(field_get:zproto.SeqDateRsp.created)
  return created_;
}
inline void SeqDateRsp::set_created(::google::protobuf::uint64 value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:zproto.SeqDateRsp.created)
}

// -------------------------------------------------------------------

// MessageNotify

// -------------------------------------------------------------------

// MessageDataNotify

// optional .zproto.MessageContainer message_data = 1;
inline bool MessageDataNotify::has_message_data() const {
  return !_is_default_instance_ && message_data_ != NULL;
}
inline void MessageDataNotify::clear_message_data() {
  if (GetArenaNoVirtual() == NULL && message_data_ != NULL) delete message_data_;
  message_data_ = NULL;
}
inline const ::zproto::MessageContainer& MessageDataNotify::message_data() const {
  // @@protoc_insertion_point(field_get:zproto.MessageDataNotify.message_data)
  return message_data_ != NULL ? *message_data_ : *default_instance_->message_data_;
}
inline ::zproto::MessageContainer* MessageDataNotify::mutable_message_data() {
  
  if (message_data_ == NULL) {
    message_data_ = new ::zproto::MessageContainer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageDataNotify.message_data)
  return message_data_;
}
inline ::zproto::MessageContainer* MessageDataNotify::release_message_data() {
  // @@protoc_insertion_point(field_release:zproto.MessageDataNotify.message_data)
  
  ::zproto::MessageContainer* temp = message_data_;
  message_data_ = NULL;
  return temp;
}
inline void MessageDataNotify::set_allocated_message_data(::zproto::MessageContainer* message_data) {
  delete message_data_;
  message_data_ = message_data;
  if (message_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageDataNotify.message_data)
}

// -------------------------------------------------------------------

// MessageSyncReq

// optional uint64 received_max_seq = 1;
inline void MessageSyncReq::clear_received_max_seq() {
  received_max_seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageSyncReq::received_max_seq() const {
  // @@protoc_insertion_point(field_get:zproto.MessageSyncReq.received_max_seq)
  return received_max_seq_;
}
inline void MessageSyncReq::set_received_max_seq(::google::protobuf::uint64 value) {
  
  received_max_seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageSyncReq.received_max_seq)
}

// -------------------------------------------------------------------

// MessageSyncRsp

// repeated .zproto.MessageContainer message_data = 1;
inline int MessageSyncRsp::message_data_size() const {
  return message_data_.size();
}
inline void MessageSyncRsp::clear_message_data() {
  message_data_.Clear();
}
inline const ::zproto::MessageContainer& MessageSyncRsp::message_data(int index) const {
  // @@protoc_insertion_point(field_get:zproto.MessageSyncRsp.message_data)
  return message_data_.Get(index);
}
inline ::zproto::MessageContainer* MessageSyncRsp::mutable_message_data(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.MessageSyncRsp.message_data)
  return message_data_.Mutable(index);
}
inline ::zproto::MessageContainer* MessageSyncRsp::add_message_data() {
  // @@protoc_insertion_point(field_add:zproto.MessageSyncRsp.message_data)
  return message_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
MessageSyncRsp::mutable_message_data() {
  // @@protoc_insertion_point(field_mutable_list:zproto.MessageSyncRsp.message_data)
  return &message_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
MessageSyncRsp::message_data() const {
  // @@protoc_insertion_point(field_list:zproto.MessageSyncRsp.message_data)
  return message_data_;
}

// -------------------------------------------------------------------

// MessageReadReq

// optional .zproto.Peer peer = 1;
inline bool MessageReadReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
inline void MessageReadReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::zproto::Peer& MessageReadReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
inline ::zproto::Peer* MessageReadReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageReadReq.peer)
  return peer_;
}
inline ::zproto::Peer* MessageReadReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageReadReq.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void MessageReadReq::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageReadReq.peer)
}

// optional uint64 read_max_seq = 2;
inline void MessageReadReq::clear_read_max_seq() {
  read_max_seq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MessageReadReq::read_max_seq() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadReq.read_max_seq)
  return read_max_seq_;
}
inline void MessageReadReq::set_read_max_seq(::google::protobuf::uint64 value) {
  
  read_max_seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReadReq.read_max_seq)
}

// -------------------------------------------------------------------

// LoadHistoryMessageReq

// optional .zproto.Peer peer = 1;
inline bool LoadHistoryMessageReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
inline void LoadHistoryMessageReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::zproto::Peer& LoadHistoryMessageReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
inline ::zproto::Peer* LoadHistoryMessageReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryMessageReq.peer)
  return peer_;
}
inline ::zproto::Peer* LoadHistoryMessageReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.LoadHistoryMessageReq.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void LoadHistoryMessageReq::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.LoadHistoryMessageReq.peer)
}

// optional uint32 date = 2;
inline void LoadHistoryMessageReq::clear_date() {
  date_ = 0u;
}
inline ::google::protobuf::uint32 LoadHistoryMessageReq::date() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageReq.date)
  return date_;
}
inline void LoadHistoryMessageReq::set_date(::google::protobuf::uint32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryMessageReq.date)
}

// optional .zproto.EnumHelper.ListLoadMode load_mode = 3;
inline void LoadHistoryMessageReq::clear_load_mode() {
  load_mode_ = 0;
}
inline ::zproto::EnumHelper_ListLoadMode LoadHistoryMessageReq::load_mode() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageReq.load_mode)
  return static_cast< ::zproto::EnumHelper_ListLoadMode >(load_mode_);
}
inline void LoadHistoryMessageReq::set_load_mode(::zproto::EnumHelper_ListLoadMode value) {
  
  load_mode_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryMessageReq.load_mode)
}

// optional uint32 limit = 4;
inline void LoadHistoryMessageReq::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 LoadHistoryMessageReq::limit() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageReq.limit)
  return limit_;
}
inline void LoadHistoryMessageReq::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryMessageReq.limit)
}

// -------------------------------------------------------------------

// LoadHistoryMessageRsp

// repeated .zproto.MessageContainer history = 1;
inline int LoadHistoryMessageRsp::history_size() const {
  return history_.size();
}
inline void LoadHistoryMessageRsp::clear_history() {
  history_.Clear();
}
inline const ::zproto::MessageContainer& LoadHistoryMessageRsp::history(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryMessageRsp.history)
  return history_.Get(index);
}
inline ::zproto::MessageContainer* LoadHistoryMessageRsp::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryMessageRsp.history)
  return history_.Mutable(index);
}
inline ::zproto::MessageContainer* LoadHistoryMessageRsp::add_history() {
  // @@protoc_insertion_point(field_add:zproto.LoadHistoryMessageRsp.history)
  return history_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
LoadHistoryMessageRsp::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadHistoryMessageRsp.history)
  return &history_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
LoadHistoryMessageRsp::history() const {
  // @@protoc_insertion_point(field_list:zproto.LoadHistoryMessageRsp.history)
  return history_;
}

// -------------------------------------------------------------------

// LoadDialogsReq

// optional uint64 min_date = 1;
inline void LoadDialogsReq::clear_min_date() {
  min_date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 LoadDialogsReq::min_date() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.min_date)
  return min_date_;
}
inline void LoadDialogsReq::set_min_date(::google::protobuf::uint64 value) {
  
  min_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.min_date)
}

// optional uint32 limit = 2;
inline void LoadDialogsReq::clear_limit() {
  limit_ = 0u;
}
inline ::google::protobuf::uint32 LoadDialogsReq::limit() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.limit)
  return limit_;
}
inline void LoadDialogsReq::set_limit(::google::protobuf::uint32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.limit)
}

// -------------------------------------------------------------------

// LoadDialogsRsp

// repeated .zproto.Dialog dialogs = 1;
inline int LoadDialogsRsp::dialogs_size() const {
  return dialogs_.size();
}
inline void LoadDialogsRsp::clear_dialogs() {
  dialogs_.Clear();
}
inline const ::zproto::Dialog& LoadDialogsRsp::dialogs(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Get(index);
}
inline ::zproto::Dialog* LoadDialogsRsp::mutable_dialogs(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Mutable(index);
}
inline ::zproto::Dialog* LoadDialogsRsp::add_dialogs() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >*
LoadDialogsRsp::mutable_dialogs() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.dialogs)
  return &dialogs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >&
LoadDialogsRsp::dialogs() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.dialogs)
  return dialogs_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2eproto__INCLUDED
