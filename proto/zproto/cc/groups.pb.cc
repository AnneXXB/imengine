// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: groups.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "groups.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* GroupMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GroupMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* Group_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Group_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateGroupReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateGroupReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateGroupRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateGroupRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_groups_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_groups_2eproto() {
  protobuf_AddDesc_groups_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "groups.proto");
  GOOGLE_CHECK(file != NULL);
  GroupMember_descriptor_ = file->message_type(0);
  static const int GroupMember_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, inviter_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, is_admin_),
  };
  GroupMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GroupMember_descriptor_,
      GroupMember::default_instance_,
      GroupMember_offsets_,
      -1,
      -1,
      -1,
      sizeof(GroupMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMember, _is_default_instance_));
  Group_descriptor_ = file->message_type(1);
  static const int Group_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, members_),
  };
  Group_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Group_descriptor_,
      Group::default_instance_,
      Group_offsets_,
      -1,
      -1,
      -1,
      sizeof(Group),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, _is_default_instance_));
  CreateGroupReq_descriptor_ = file->message_type(2);
  static const int CreateGroupReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupReq, creator_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupReq, client_group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupReq, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupReq, user_ids_),
  };
  CreateGroupReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateGroupReq_descriptor_,
      CreateGroupReq::default_instance_,
      CreateGroupReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateGroupReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupReq, _is_default_instance_));
  CreateGroupRsp_descriptor_ = file->message_type(3);
  static const int CreateGroupRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRsp, seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRsp, created_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRsp, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRsp, user_ids_),
  };
  CreateGroupRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateGroupRsp_descriptor_,
      CreateGroupRsp::default_instance_,
      CreateGroupRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateGroupRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGroupRsp, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_groups_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GroupMember_descriptor_, &GroupMember::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Group_descriptor_, &Group::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateGroupReq_descriptor_, &CreateGroupReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateGroupRsp_descriptor_, &CreateGroupRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_groups_2eproto() {
  delete GroupMember::default_instance_;
  delete GroupMember_reflection_;
  delete Group::default_instance_;
  delete Group_reflection_;
  delete CreateGroupReq::default_instance_;
  delete CreateGroupReq_reflection_;
  delete CreateGroupRsp::default_instance_;
  delete CreateGroupRsp_reflection_;
}

void protobuf_AddDesc_groups_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_groups_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014groups.proto\022\006zproto\"S\n\013GroupMember\022\017\n"
    "\007user_id\030\001 \001(\t\022\023\n\013inviter_uid\030\002 \001(\t\022\014\n\004d"
    "ate\030\003 \001(\003\022\020\n\010is_admin\030\004 \001(\010\"N\n\005Group\022\020\n\010"
    "group_id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022$\n\007members"
    "\030\003 \003(\0132\023.zproto.GroupMember\"c\n\016CreateGro"
    "upReq\022\027\n\017creator_user_id\030\001 \001(\t\022\027\n\017client"
    "_group_id\030\002 \001(\003\022\r\n\005title\030\003 \001(\t\022\020\n\010user_i"
    "ds\030\004 \003(\t\"^\n\016CreateGroupRsp\022\013\n\003seq\030\001 \001(\004\022"
    "\017\n\007created\030\002 \001(\004\022\034\n\005group\030\003 \001(\0132\r.zproto"
    ".Group\022\020\n\010user_ids\030\004 \003(\tB#\n\027com.zchat.en"
    "gine.zprotoB\006ZProtoH\002b\006proto3", 429);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "groups.proto", &protobuf_RegisterTypes);
  GroupMember::default_instance_ = new GroupMember();
  Group::default_instance_ = new Group();
  CreateGroupReq::default_instance_ = new CreateGroupReq();
  CreateGroupRsp::default_instance_ = new CreateGroupRsp();
  GroupMember::default_instance_->InitAsDefaultInstance();
  Group::default_instance_->InitAsDefaultInstance();
  CreateGroupReq::default_instance_->InitAsDefaultInstance();
  CreateGroupRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_groups_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_groups_2eproto {
  StaticDescriptorInitializer_groups_2eproto() {
    protobuf_AddDesc_groups_2eproto();
  }
} static_descriptor_initializer_groups_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupMember::kUserIdFieldNumber;
const int GroupMember::kInviterUidFieldNumber;
const int GroupMember::kDateFieldNumber;
const int GroupMember::kIsAdminFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupMember::GroupMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.GroupMember)
}

void GroupMember::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GroupMember::GroupMember(const GroupMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.GroupMember)
}

void GroupMember::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_ = GOOGLE_LONGLONG(0);
  is_admin_ = false;
}

GroupMember::~GroupMember() {
  // @@protoc_insertion_point(destructor:zproto.GroupMember)
  SharedDtor();
}

void GroupMember::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inviter_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GroupMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GroupMember_descriptor_;
}

const GroupMember& GroupMember::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_groups_2eproto();
  return *default_instance_;
}

GroupMember* GroupMember::default_instance_ = NULL;

GroupMember* GroupMember::New(::google::protobuf::Arena* arena) const {
  GroupMember* n = new GroupMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupMember::Swap(GroupMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupMember::InternalSwap(GroupMember* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata GroupMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GroupMember_descriptor_;
  metadata.reflection = GroupMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupMember

// optional string user_id = 1;
void GroupMember::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GroupMember::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.GroupMember.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GroupMember::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.GroupMember.user_id)
}
 void GroupMember::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.GroupMember.user_id)
}
 void GroupMember::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.GroupMember.user_id)
}
 ::std::string* GroupMember::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.GroupMember.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GroupMember::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.GroupMember.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GroupMember::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.GroupMember.user_id)
}

// optional string inviter_uid = 2;
void GroupMember::clear_inviter_uid() {
  inviter_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GroupMember::inviter_uid() const {
  // @@protoc_insertion_point(field_get:zproto.GroupMember.inviter_uid)
  return inviter_uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GroupMember::set_inviter_uid(const ::std::string& value) {
  
  inviter_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.GroupMember.inviter_uid)
}
 void GroupMember::set_inviter_uid(const char* value) {
  
  inviter_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.GroupMember.inviter_uid)
}
 void GroupMember::set_inviter_uid(const char* value, size_t size) {
  
  inviter_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.GroupMember.inviter_uid)
}
 ::std::string* GroupMember::mutable_inviter_uid() {
  
  // @@protoc_insertion_point(field_mutable:zproto.GroupMember.inviter_uid)
  return inviter_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GroupMember::release_inviter_uid() {
  // @@protoc_insertion_point(field_release:zproto.GroupMember.inviter_uid)
  
  return inviter_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GroupMember::set_allocated_inviter_uid(::std::string* inviter_uid) {
  if (inviter_uid != NULL) {
    
  } else {
    
  }
  inviter_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inviter_uid);
  // @@protoc_insertion_point(field_set_allocated:zproto.GroupMember.inviter_uid)
}

// optional int64 date = 3;
void GroupMember::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GroupMember::date() const {
  // @@protoc_insertion_point(field_get:zproto.GroupMember.date)
  return date_;
}
 void GroupMember::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.GroupMember.date)
}

// optional bool is_admin = 4;
void GroupMember::clear_is_admin() {
  is_admin_ = false;
}
 bool GroupMember::is_admin() const {
  // @@protoc_insertion_point(field_get:zproto.GroupMember.is_admin)
  return is_admin_;
}
 void GroupMember::set_is_admin(bool value) {
  
  is_admin_ = value;
  // @@protoc_insertion_point(field_set:zproto.GroupMember.is_admin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Group::kGroupIdFieldNumber;
const int Group::kTitleFieldNumber;
const int Group::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Group::Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Group)
}

void Group::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Group::Group(const Group& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Group)
}

void Group::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  group_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Group::~Group() {
  // @@protoc_insertion_point(destructor:zproto.Group)
  SharedDtor();
}

void Group::SharedDtor() {
  group_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Group::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Group::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Group_descriptor_;
}

const Group& Group::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_groups_2eproto();
  return *default_instance_;
}

Group* Group::default_instance_ = NULL;

Group* Group::New(::google::protobuf::Arena* arena) const {
  Group* n = new Group;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Group::Swap(Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Group::InternalSwap(Group* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Group::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Group_descriptor_;
  metadata.reflection = Group_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Group

// optional string group_id = 1;
void Group::clear_group_id() {
  group_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Group::group_id() const {
  // @@protoc_insertion_point(field_get:zproto.Group.group_id)
  return group_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group::set_group_id(const ::std::string& value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Group.group_id)
}
 void Group::set_group_id(const char* value) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Group.group_id)
}
 void Group::set_group_id(const char* value, size_t size) {
  
  group_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Group.group_id)
}
 ::std::string* Group::mutable_group_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Group.group_id)
  return group_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Group::release_group_id() {
  // @@protoc_insertion_point(field_release:zproto.Group.group_id)
  
  return group_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group::set_allocated_group_id(::std::string* group_id) {
  if (group_id != NULL) {
    
  } else {
    
  }
  group_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.Group.group_id)
}

// optional string title = 2;
void Group::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Group::title() const {
  // @@protoc_insertion_point(field_get:zproto.Group.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Group.title)
}
 void Group::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Group.title)
}
 void Group::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Group.title)
}
 ::std::string* Group::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Group.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Group::release_title() {
  // @@protoc_insertion_point(field_release:zproto.Group.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:zproto.Group.title)
}

// repeated .zproto.GroupMember members = 3;
int Group::members_size() const {
  return members_.size();
}
void Group::clear_members() {
  members_.Clear();
}
const ::zproto::GroupMember& Group::members(int index) const {
  // @@protoc_insertion_point(field_get:zproto.Group.members)
  return members_.Get(index);
}
::zproto::GroupMember* Group::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.Group.members)
  return members_.Mutable(index);
}
::zproto::GroupMember* Group::add_members() {
  // @@protoc_insertion_point(field_add:zproto.Group.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::GroupMember >*
Group::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:zproto.Group.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::GroupMember >&
Group::members() const {
  // @@protoc_insertion_point(field_list:zproto.Group.members)
  return members_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateGroupReq::kCreatorUserIdFieldNumber;
const int CreateGroupReq::kClientGroupIdFieldNumber;
const int CreateGroupReq::kTitleFieldNumber;
const int CreateGroupReq::kUserIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateGroupReq::CreateGroupReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.CreateGroupReq)
}

void CreateGroupReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateGroupReq::CreateGroupReq(const CreateGroupReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.CreateGroupReq)
}

void CreateGroupReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  creator_user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_group_id_ = GOOGLE_LONGLONG(0);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateGroupReq::~CreateGroupReq() {
  // @@protoc_insertion_point(destructor:zproto.CreateGroupReq)
  SharedDtor();
}

void CreateGroupReq::SharedDtor() {
  creator_user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateGroupReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateGroupReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateGroupReq_descriptor_;
}

const CreateGroupReq& CreateGroupReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_groups_2eproto();
  return *default_instance_;
}

CreateGroupReq* CreateGroupReq::default_instance_ = NULL;

CreateGroupReq* CreateGroupReq::New(::google::protobuf::Arena* arena) const {
  CreateGroupReq* n = new CreateGroupReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateGroupReq::Swap(CreateGroupReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateGroupReq::InternalSwap(CreateGroupReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata CreateGroupReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateGroupReq_descriptor_;
  metadata.reflection = CreateGroupReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateGroupReq

// optional string creator_user_id = 1;
void CreateGroupReq::clear_creator_user_id() {
  creator_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateGroupReq::creator_user_id() const {
  // @@protoc_insertion_point(field_get:zproto.CreateGroupReq.creator_user_id)
  return creator_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateGroupReq::set_creator_user_id(const ::std::string& value) {
  
  creator_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.CreateGroupReq.creator_user_id)
}
 void CreateGroupReq::set_creator_user_id(const char* value) {
  
  creator_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.CreateGroupReq.creator_user_id)
}
 void CreateGroupReq::set_creator_user_id(const char* value, size_t size) {
  
  creator_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.CreateGroupReq.creator_user_id)
}
 ::std::string* CreateGroupReq::mutable_creator_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.CreateGroupReq.creator_user_id)
  return creator_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateGroupReq::release_creator_user_id() {
  // @@protoc_insertion_point(field_release:zproto.CreateGroupReq.creator_user_id)
  
  return creator_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateGroupReq::set_allocated_creator_user_id(::std::string* creator_user_id) {
  if (creator_user_id != NULL) {
    
  } else {
    
  }
  creator_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator_user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.CreateGroupReq.creator_user_id)
}

// optional int64 client_group_id = 2;
void CreateGroupReq::clear_client_group_id() {
  client_group_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 CreateGroupReq::client_group_id() const {
  // @@protoc_insertion_point(field_get:zproto.CreateGroupReq.client_group_id)
  return client_group_id_;
}
 void CreateGroupReq::set_client_group_id(::google::protobuf::int64 value) {
  
  client_group_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.CreateGroupReq.client_group_id)
}

// optional string title = 3;
void CreateGroupReq::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateGroupReq::title() const {
  // @@protoc_insertion_point(field_get:zproto.CreateGroupReq.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateGroupReq::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.CreateGroupReq.title)
}
 void CreateGroupReq::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.CreateGroupReq.title)
}
 void CreateGroupReq::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.CreateGroupReq.title)
}
 ::std::string* CreateGroupReq::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:zproto.CreateGroupReq.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateGroupReq::release_title() {
  // @@protoc_insertion_point(field_release:zproto.CreateGroupReq.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateGroupReq::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:zproto.CreateGroupReq.title)
}

// repeated string user_ids = 4;
int CreateGroupReq::user_ids_size() const {
  return user_ids_.size();
}
void CreateGroupReq::clear_user_ids() {
  user_ids_.Clear();
}
 const ::std::string& CreateGroupReq::user_ids(int index) const {
  // @@protoc_insertion_point(field_get:zproto.CreateGroupReq.user_ids)
  return user_ids_.Get(index);
}
 ::std::string* CreateGroupReq::mutable_user_ids(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.CreateGroupReq.user_ids)
  return user_ids_.Mutable(index);
}
 void CreateGroupReq::set_user_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:zproto.CreateGroupReq.user_ids)
  user_ids_.Mutable(index)->assign(value);
}
 void CreateGroupReq::set_user_ids(int index, const char* value) {
  user_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:zproto.CreateGroupReq.user_ids)
}
 void CreateGroupReq::set_user_ids(int index, const char* value, size_t size) {
  user_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:zproto.CreateGroupReq.user_ids)
}
 ::std::string* CreateGroupReq::add_user_ids() {
  // @@protoc_insertion_point(field_add_mutable:zproto.CreateGroupReq.user_ids)
  return user_ids_.Add();
}
 void CreateGroupReq::add_user_ids(const ::std::string& value) {
  user_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:zproto.CreateGroupReq.user_ids)
}
 void CreateGroupReq::add_user_ids(const char* value) {
  user_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:zproto.CreateGroupReq.user_ids)
}
 void CreateGroupReq::add_user_ids(const char* value, size_t size) {
  user_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:zproto.CreateGroupReq.user_ids)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateGroupReq::user_ids() const {
  // @@protoc_insertion_point(field_list:zproto.CreateGroupReq.user_ids)
  return user_ids_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateGroupReq::mutable_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:zproto.CreateGroupReq.user_ids)
  return &user_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateGroupRsp::kSeqFieldNumber;
const int CreateGroupRsp::kCreatedFieldNumber;
const int CreateGroupRsp::kGroupFieldNumber;
const int CreateGroupRsp::kUserIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateGroupRsp::CreateGroupRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.CreateGroupRsp)
}

void CreateGroupRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  group_ = const_cast< ::zproto::Group*>(&::zproto::Group::default_instance());
}

CreateGroupRsp::CreateGroupRsp(const CreateGroupRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.CreateGroupRsp)
}

void CreateGroupRsp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  seq_ = GOOGLE_ULONGLONG(0);
  created_ = GOOGLE_ULONGLONG(0);
  group_ = NULL;
}

CreateGroupRsp::~CreateGroupRsp() {
  // @@protoc_insertion_point(destructor:zproto.CreateGroupRsp)
  SharedDtor();
}

void CreateGroupRsp::SharedDtor() {
  if (this != default_instance_) {
    delete group_;
  }
}

void CreateGroupRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateGroupRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateGroupRsp_descriptor_;
}

const CreateGroupRsp& CreateGroupRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_groups_2eproto();
  return *default_instance_;
}

CreateGroupRsp* CreateGroupRsp::default_instance_ = NULL;

CreateGroupRsp* CreateGroupRsp::New(::google::protobuf::Arena* arena) const {
  CreateGroupRsp* n = new CreateGroupRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateGroupRsp::Swap(CreateGroupRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateGroupRsp::InternalSwap(CreateGroupRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata CreateGroupRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateGroupRsp_descriptor_;
  metadata.reflection = CreateGroupRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateGroupRsp

// optional uint64 seq = 1;
void CreateGroupRsp::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreateGroupRsp::seq() const {
  // @@protoc_insertion_point(field_get:zproto.CreateGroupRsp.seq)
  return seq_;
}
 void CreateGroupRsp::set_seq(::google::protobuf::uint64 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.CreateGroupRsp.seq)
}

// optional uint64 created = 2;
void CreateGroupRsp::clear_created() {
  created_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreateGroupRsp::created() const {
  // @@protoc_insertion_point(field_get:zproto.CreateGroupRsp.created)
  return created_;
}
 void CreateGroupRsp::set_created(::google::protobuf::uint64 value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:zproto.CreateGroupRsp.created)
}

// optional .zproto.Group group = 3;
bool CreateGroupRsp::has_group() const {
  return !_is_default_instance_ && group_ != NULL;
}
void CreateGroupRsp::clear_group() {
  if (GetArenaNoVirtual() == NULL && group_ != NULL) delete group_;
  group_ = NULL;
}
const ::zproto::Group& CreateGroupRsp::group() const {
  // @@protoc_insertion_point(field_get:zproto.CreateGroupRsp.group)
  return group_ != NULL ? *group_ : *default_instance_->group_;
}
::zproto::Group* CreateGroupRsp::mutable_group() {
  
  if (group_ == NULL) {
    group_ = new ::zproto::Group;
  }
  // @@protoc_insertion_point(field_mutable:zproto.CreateGroupRsp.group)
  return group_;
}
::zproto::Group* CreateGroupRsp::release_group() {
  // @@protoc_insertion_point(field_release:zproto.CreateGroupRsp.group)
  
  ::zproto::Group* temp = group_;
  group_ = NULL;
  return temp;
}
void CreateGroupRsp::set_allocated_group(::zproto::Group* group) {
  delete group_;
  group_ = group;
  if (group) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.CreateGroupRsp.group)
}

// repeated string user_ids = 4;
int CreateGroupRsp::user_ids_size() const {
  return user_ids_.size();
}
void CreateGroupRsp::clear_user_ids() {
  user_ids_.Clear();
}
 const ::std::string& CreateGroupRsp::user_ids(int index) const {
  // @@protoc_insertion_point(field_get:zproto.CreateGroupRsp.user_ids)
  return user_ids_.Get(index);
}
 ::std::string* CreateGroupRsp::mutable_user_ids(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.CreateGroupRsp.user_ids)
  return user_ids_.Mutable(index);
}
 void CreateGroupRsp::set_user_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:zproto.CreateGroupRsp.user_ids)
  user_ids_.Mutable(index)->assign(value);
}
 void CreateGroupRsp::set_user_ids(int index, const char* value) {
  user_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:zproto.CreateGroupRsp.user_ids)
}
 void CreateGroupRsp::set_user_ids(int index, const char* value, size_t size) {
  user_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:zproto.CreateGroupRsp.user_ids)
}
 ::std::string* CreateGroupRsp::add_user_ids() {
  // @@protoc_insertion_point(field_add_mutable:zproto.CreateGroupRsp.user_ids)
  return user_ids_.Add();
}
 void CreateGroupRsp::add_user_ids(const ::std::string& value) {
  user_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:zproto.CreateGroupRsp.user_ids)
}
 void CreateGroupRsp::add_user_ids(const char* value) {
  user_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:zproto.CreateGroupRsp.user_ids)
}
 void CreateGroupRsp::add_user_ids(const char* value, size_t size) {
  user_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:zproto.CreateGroupRsp.user_ids)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateGroupRsp::user_ids() const {
  // @@protoc_insertion_point(field_list:zproto.CreateGroupRsp.user_ids)
  return user_ids_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateGroupRsp::mutable_user_ids() {
  // @@protoc_insertion_point(field_mutable_list:zproto.CreateGroupRsp.user_ids)
  return &user_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
