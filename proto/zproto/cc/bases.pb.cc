// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bases.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bases.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* EnumHelper_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnumHelper_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumHelper_PeerType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumHelper_ListLoadMode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumHelper_MessageState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnumHelper_MessageType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* UserToeken_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserToeken_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Peer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Peer_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageContainer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageContainer_reflection_ = NULL;
const ::google::protobuf::Descriptor* Dialog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dialog_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_bases_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_bases_2eproto() {
  protobuf_AddDesc_bases_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bases.proto");
  GOOGLE_CHECK(file != NULL);
  EnumHelper_descriptor_ = file->message_type(0);
  static const int EnumHelper_offsets_[1] = {
  };
  EnumHelper_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnumHelper_descriptor_,
      EnumHelper::default_instance_,
      EnumHelper_offsets_,
      -1,
      -1,
      -1,
      sizeof(EnumHelper),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumHelper, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumHelper, _is_default_instance_));
  EnumHelper_PeerType_descriptor_ = EnumHelper_descriptor_->enum_type(0);
  EnumHelper_ListLoadMode_descriptor_ = EnumHelper_descriptor_->enum_type(1);
  EnumHelper_MessageState_descriptor_ = EnumHelper_descriptor_->enum_type(2);
  EnumHelper_MessageType_descriptor_ = EnumHelper_descriptor_->enum_type(3);
  UserToeken_descriptor_ = file->message_type(1);
  static const int UserToeken_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, app_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, user_token_),
  };
  UserToeken_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserToeken_descriptor_,
      UserToeken::default_instance_,
      UserToeken_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserToeken),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserToeken, _is_default_instance_));
  UserInfo_descriptor_ = file->message_type(2);
  static const int UserInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, push_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, avatar_),
  };
  UserInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserInfo_descriptor_,
      UserInfo::default_instance_,
      UserInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _is_default_instance_));
  Peer_descriptor_ = file->message_type(3);
  static const int Peer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Peer, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Peer, id_),
  };
  Peer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Peer_descriptor_,
      Peer::default_instance_,
      Peer_offsets_,
      -1,
      -1,
      -1,
      sizeof(Peer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Peer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Peer, _is_default_instance_));
  MessageContainer_descriptor_ = file->message_type(4);
  static const int MessageContainer_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, sender_user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, client_message_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, message_seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, message_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, message_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, passthrough_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, updated_at_),
  };
  MessageContainer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageContainer_descriptor_,
      MessageContainer::default_instance_,
      MessageContainer_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageContainer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContainer, _is_default_instance_));
  Dialog_descriptor_ = file->message_type(5);
  static const int Dialog_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, peer_),
  };
  Dialog_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Dialog_descriptor_,
      Dialog::default_instance_,
      Dialog_offsets_,
      -1,
      -1,
      -1,
      sizeof(Dialog),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bases_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnumHelper_descriptor_, &EnumHelper::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserToeken_descriptor_, &UserToeken::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserInfo_descriptor_, &UserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Peer_descriptor_, &Peer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageContainer_descriptor_, &MessageContainer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Dialog_descriptor_, &Dialog::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bases_2eproto() {
  delete EnumHelper::default_instance_;
  delete EnumHelper_reflection_;
  delete UserToeken::default_instance_;
  delete UserToeken_reflection_;
  delete UserInfo::default_instance_;
  delete UserInfo_reflection_;
  delete Peer::default_instance_;
  delete Peer_reflection_;
  delete MessageContainer::default_instance_;
  delete MessageContainer_reflection_;
  delete Dialog::default_instance_;
  delete Dialog_reflection_;
}

void protobuf_AddDesc_bases_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_bases_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013bases.proto\022\006zproto\"\235\002\n\nEnumHelper\"5\n\010"
    "PeerType\022\021\n\rPeerType_NONE\020\000\022\013\n\007PRIVATE\020\001"
    "\022\t\n\005GROUP\020\002\"J\n\014ListLoadMode\022\025\n\021ListLoadM"
    "ode_NONE\020\000\022\013\n\007FOWRARD\020\001\022\014\n\010BACKWARD\020\002\022\010\n"
    "\004BOTH\020\003\"G\n\014MessageState\022\025\n\021MessageState_"
    "NONE\020\000\022\010\n\004SENT\020\001\022\014\n\010RECEIVED\020\002\022\010\n\004READ\020\003"
    "\"C\n\013MessageType\022\024\n\020MessageType_NONE\020\000\022\010\n"
    "\004TEXT\020\001\022\t\n\005AUDIO\020\002\022\t\n\005VIDEO\020\003\"B\n\nUserToe"
    "ken\022\017\n\007app_key\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\022\n"
    "\nuser_token\030\003 \001(\t\"N\n\010UserInfo\022\016\n\006app_id\030"
    "\001 \001(\r\022\017\n\007user_id\030\002 \001(\t\022\021\n\tpush_name\030\003 \001("
    "\t\022\016\n\006avatar\030\004 \001(\t\" \n\004Peer\022\014\n\004type\030\001 \001(\r\022"
    "\n\n\002id\030\002 \001(\t\"\267\002\n\020MessageContainer\022\022\n\nmess"
    "age_id\030\001 \001(\004\022\026\n\016sender_user_id\030\002 \001(\t\022\032\n\004"
    "peer\030\003 \001(\0132\014.zproto.Peer\022\031\n\021client_messa"
    "ge_id\030\004 \001(\004\022\023\n\013message_seq\030\005 \001(\004\022.\n\005stat"
    "e\030\006 \001(\0162\037.zproto.EnumHelper.MessageState"
    "\0224\n\014message_type\030\007 \001(\0162\036.zproto.EnumHelp"
    "er.MessageType\022\027\n\017message_content\030\010 \001(\014\022"
    "\030\n\020passthrough_data\030\t \001(\014\022\022\n\nupdated_at\030"
    "\n \001(\004\"$\n\006Dialog\022\032\n\004peer\030\001 \001(\0132\014.zproto.P"
    "eerB#\n\027com.zchat.engine.zprotoB\006ZProtoH\002"
    "b\006proto3", 888);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bases.proto", &protobuf_RegisterTypes);
  EnumHelper::default_instance_ = new EnumHelper();
  UserToeken::default_instance_ = new UserToeken();
  UserInfo::default_instance_ = new UserInfo();
  Peer::default_instance_ = new Peer();
  MessageContainer::default_instance_ = new MessageContainer();
  Dialog::default_instance_ = new Dialog();
  EnumHelper::default_instance_->InitAsDefaultInstance();
  UserToeken::default_instance_->InitAsDefaultInstance();
  UserInfo::default_instance_->InitAsDefaultInstance();
  Peer::default_instance_->InitAsDefaultInstance();
  MessageContainer::default_instance_->InitAsDefaultInstance();
  Dialog::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bases_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bases_2eproto {
  StaticDescriptorInitializer_bases_2eproto() {
    protobuf_AddDesc_bases_2eproto();
  }
} static_descriptor_initializer_bases_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* EnumHelper_PeerType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumHelper_PeerType_descriptor_;
}
bool EnumHelper_PeerType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumHelper_PeerType EnumHelper::PeerType_NONE;
const EnumHelper_PeerType EnumHelper::PRIVATE;
const EnumHelper_PeerType EnumHelper::GROUP;
const EnumHelper_PeerType EnumHelper::PeerType_MIN;
const EnumHelper_PeerType EnumHelper::PeerType_MAX;
const int EnumHelper::PeerType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnumHelper_ListLoadMode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumHelper_ListLoadMode_descriptor_;
}
bool EnumHelper_ListLoadMode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumHelper_ListLoadMode EnumHelper::ListLoadMode_NONE;
const EnumHelper_ListLoadMode EnumHelper::FOWRARD;
const EnumHelper_ListLoadMode EnumHelper::BACKWARD;
const EnumHelper_ListLoadMode EnumHelper::BOTH;
const EnumHelper_ListLoadMode EnumHelper::ListLoadMode_MIN;
const EnumHelper_ListLoadMode EnumHelper::ListLoadMode_MAX;
const int EnumHelper::ListLoadMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnumHelper_MessageState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumHelper_MessageState_descriptor_;
}
bool EnumHelper_MessageState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumHelper_MessageState EnumHelper::MessageState_NONE;
const EnumHelper_MessageState EnumHelper::SENT;
const EnumHelper_MessageState EnumHelper::RECEIVED;
const EnumHelper_MessageState EnumHelper::READ;
const EnumHelper_MessageState EnumHelper::MessageState_MIN;
const EnumHelper_MessageState EnumHelper::MessageState_MAX;
const int EnumHelper::MessageState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnumHelper_MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumHelper_MessageType_descriptor_;
}
bool EnumHelper_MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumHelper_MessageType EnumHelper::MessageType_NONE;
const EnumHelper_MessageType EnumHelper::TEXT;
const EnumHelper_MessageType EnumHelper::AUDIO;
const EnumHelper_MessageType EnumHelper::VIDEO;
const EnumHelper_MessageType EnumHelper::MessageType_MIN;
const EnumHelper_MessageType EnumHelper::MessageType_MAX;
const int EnumHelper::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumHelper::EnumHelper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.EnumHelper)
}

void EnumHelper::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EnumHelper::EnumHelper(const EnumHelper& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.EnumHelper)
}

void EnumHelper::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

EnumHelper::~EnumHelper() {
  // @@protoc_insertion_point(destructor:zproto.EnumHelper)
  SharedDtor();
}

void EnumHelper::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnumHelper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnumHelper::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnumHelper_descriptor_;
}

const EnumHelper& EnumHelper::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bases_2eproto();
  return *default_instance_;
}

EnumHelper* EnumHelper::default_instance_ = NULL;

EnumHelper* EnumHelper::New(::google::protobuf::Arena* arena) const {
  EnumHelper* n = new EnumHelper;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnumHelper::Swap(EnumHelper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumHelper::InternalSwap(EnumHelper* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata EnumHelper::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnumHelper_descriptor_;
  metadata.reflection = EnumHelper_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnumHelper

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserToeken::kAppKeyFieldNumber;
const int UserToeken::kUserIdFieldNumber;
const int UserToeken::kUserTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserToeken::UserToeken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserToeken)
}

void UserToeken::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserToeken::UserToeken(const UserToeken& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UserToeken)
}

void UserToeken::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserToeken::~UserToeken() {
  // @@protoc_insertion_point(destructor:zproto.UserToeken)
  SharedDtor();
}

void UserToeken::SharedDtor() {
  app_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserToeken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserToeken::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserToeken_descriptor_;
}

const UserToeken& UserToeken::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bases_2eproto();
  return *default_instance_;
}

UserToeken* UserToeken::default_instance_ = NULL;

UserToeken* UserToeken::New(::google::protobuf::Arena* arena) const {
  UserToeken* n = new UserToeken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserToeken::Swap(UserToeken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserToeken::InternalSwap(UserToeken* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserToeken::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserToeken_descriptor_;
  metadata.reflection = UserToeken_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserToeken

// optional string app_key = 1;
void UserToeken::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserToeken::app_key() const {
  // @@protoc_insertion_point(field_get:zproto.UserToeken.app_key)
  return app_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_app_key(const ::std::string& value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserToeken.app_key)
}
 void UserToeken::set_app_key(const char* value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserToeken.app_key)
}
 void UserToeken::set_app_key(const char* value, size_t size) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserToeken.app_key)
}
 ::std::string* UserToeken::mutable_app_key() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserToeken.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserToeken::release_app_key() {
  // @@protoc_insertion_point(field_release:zproto.UserToeken.app_key)
  
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    
  } else {
    
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserToeken.app_key)
}

// optional string user_id = 2;
void UserToeken::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserToeken::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.UserToeken.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserToeken.user_id)
}
 void UserToeken::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserToeken.user_id)
}
 void UserToeken::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserToeken.user_id)
}
 ::std::string* UserToeken::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserToeken.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserToeken::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.UserToeken.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserToeken.user_id)
}

// optional string user_token = 3;
void UserToeken::clear_user_token() {
  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserToeken::user_token() const {
  // @@protoc_insertion_point(field_get:zproto.UserToeken.user_token)
  return user_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_user_token(const ::std::string& value) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserToeken.user_token)
}
 void UserToeken::set_user_token(const char* value) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserToeken.user_token)
}
 void UserToeken::set_user_token(const char* value, size_t size) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserToeken.user_token)
}
 ::std::string* UserToeken::mutable_user_token() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserToeken.user_token)
  return user_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserToeken::release_user_token() {
  // @@protoc_insertion_point(field_release:zproto.UserToeken.user_token)
  
  return user_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserToeken::set_allocated_user_token(::std::string* user_token) {
  if (user_token != NULL) {
    
  } else {
    
  }
  user_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_token);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserToeken.user_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kAppIdFieldNumber;
const int UserInfo::kUserIdFieldNumber;
const int UserInfo::kPushNameFieldNumber;
const int UserInfo::kAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserInfo)
}

void UserInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UserInfo)
}

void UserInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_id_ = 0u;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  push_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:zproto.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  push_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserInfo_descriptor_;
}

const UserInfo& UserInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bases_2eproto();
  return *default_instance_;
}

UserInfo* UserInfo::default_instance_ = NULL;

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserInfo_descriptor_;
  metadata.reflection = UserInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// optional uint32 app_id = 1;
void UserInfo::clear_app_id() {
  app_id_ = 0u;
}
 ::google::protobuf::uint32 UserInfo::app_id() const {
  // @@protoc_insertion_point(field_get:zproto.UserInfo.app_id)
  return app_id_;
}
 void UserInfo::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.UserInfo.app_id)
}

// optional string user_id = 2;
void UserInfo::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.UserInfo.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserInfo.user_id)
}
 void UserInfo::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserInfo.user_id)
}
 void UserInfo::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserInfo.user_id)
}
 ::std::string* UserInfo::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserInfo.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserInfo::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.UserInfo.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserInfo.user_id)
}

// optional string push_name = 3;
void UserInfo::clear_push_name() {
  push_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserInfo::push_name() const {
  // @@protoc_insertion_point(field_get:zproto.UserInfo.push_name)
  return push_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_push_name(const ::std::string& value) {
  
  push_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserInfo.push_name)
}
 void UserInfo::set_push_name(const char* value) {
  
  push_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserInfo.push_name)
}
 void UserInfo::set_push_name(const char* value, size_t size) {
  
  push_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserInfo.push_name)
}
 ::std::string* UserInfo::mutable_push_name() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserInfo.push_name)
  return push_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserInfo::release_push_name() {
  // @@protoc_insertion_point(field_release:zproto.UserInfo.push_name)
  
  return push_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_allocated_push_name(::std::string* push_name) {
  if (push_name != NULL) {
    
  } else {
    
  }
  push_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), push_name);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserInfo.push_name)
}

// optional string avatar = 4;
void UserInfo::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserInfo::avatar() const {
  // @@protoc_insertion_point(field_get:zproto.UserInfo.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserInfo.avatar)
}
 void UserInfo::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserInfo.avatar)
}
 void UserInfo::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserInfo.avatar)
}
 ::std::string* UserInfo::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserInfo.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:zproto.UserInfo.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserInfo::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserInfo.avatar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Peer::kTypeFieldNumber;
const int Peer::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Peer::Peer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Peer)
}

void Peer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Peer::Peer(const Peer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Peer)
}

void Peer::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0u;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Peer::~Peer() {
  // @@protoc_insertion_point(destructor:zproto.Peer)
  SharedDtor();
}

void Peer::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Peer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Peer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Peer_descriptor_;
}

const Peer& Peer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bases_2eproto();
  return *default_instance_;
}

Peer* Peer::default_instance_ = NULL;

Peer* Peer::New(::google::protobuf::Arena* arena) const {
  Peer* n = new Peer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Peer::Swap(Peer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Peer::InternalSwap(Peer* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Peer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Peer_descriptor_;
  metadata.reflection = Peer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Peer

// optional uint32 type = 1;
void Peer::clear_type() {
  type_ = 0u;
}
 ::google::protobuf::uint32 Peer::type() const {
  // @@protoc_insertion_point(field_get:zproto.Peer.type)
  return type_;
}
 void Peer::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:zproto.Peer.type)
}

// optional string id = 2;
void Peer::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Peer::id() const {
  // @@protoc_insertion_point(field_get:zproto.Peer.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Peer::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Peer.id)
}
 void Peer::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Peer.id)
}
 void Peer::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Peer.id)
}
 ::std::string* Peer::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Peer.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Peer::release_id() {
  // @@protoc_insertion_point(field_release:zproto.Peer.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Peer::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:zproto.Peer.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageContainer::kMessageIdFieldNumber;
const int MessageContainer::kSenderUserIdFieldNumber;
const int MessageContainer::kPeerFieldNumber;
const int MessageContainer::kClientMessageIdFieldNumber;
const int MessageContainer::kMessageSeqFieldNumber;
const int MessageContainer::kStateFieldNumber;
const int MessageContainer::kMessageTypeFieldNumber;
const int MessageContainer::kMessageContentFieldNumber;
const int MessageContainer::kPassthroughDataFieldNumber;
const int MessageContainer::kUpdatedAtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageContainer::MessageContainer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageContainer)
}

void MessageContainer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

MessageContainer::MessageContainer(const MessageContainer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageContainer)
}

void MessageContainer::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_id_ = GOOGLE_ULONGLONG(0);
  sender_user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  peer_ = NULL;
  client_message_id_ = GOOGLE_ULONGLONG(0);
  message_seq_ = GOOGLE_ULONGLONG(0);
  state_ = 0;
  message_type_ = 0;
  message_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passthrough_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updated_at_ = GOOGLE_ULONGLONG(0);
}

MessageContainer::~MessageContainer() {
  // @@protoc_insertion_point(destructor:zproto.MessageContainer)
  SharedDtor();
}

void MessageContainer::SharedDtor() {
  sender_user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passthrough_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageContainer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageContainer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageContainer_descriptor_;
}

const MessageContainer& MessageContainer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bases_2eproto();
  return *default_instance_;
}

MessageContainer* MessageContainer::default_instance_ = NULL;

MessageContainer* MessageContainer::New(::google::protobuf::Arena* arena) const {
  MessageContainer* n = new MessageContainer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageContainer::Swap(MessageContainer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageContainer::InternalSwap(MessageContainer* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageContainer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageContainer_descriptor_;
  metadata.reflection = MessageContainer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageContainer

// optional uint64 message_id = 1;
void MessageContainer::clear_message_id() {
  message_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageContainer::message_id() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.message_id)
  return message_id_;
}
 void MessageContainer::set_message_id(::google::protobuf::uint64 value) {
  
  message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.message_id)
}

// optional string sender_user_id = 2;
void MessageContainer::clear_sender_user_id() {
  sender_user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageContainer::sender_user_id() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.sender_user_id)
  return sender_user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageContainer::set_sender_user_id(const ::std::string& value) {
  
  sender_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.sender_user_id)
}
 void MessageContainer::set_sender_user_id(const char* value) {
  
  sender_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.MessageContainer.sender_user_id)
}
 void MessageContainer::set_sender_user_id(const char* value, size_t size) {
  
  sender_user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.MessageContainer.sender_user_id)
}
 ::std::string* MessageContainer::mutable_sender_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.MessageContainer.sender_user_id)
  return sender_user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageContainer::release_sender_user_id() {
  // @@protoc_insertion_point(field_release:zproto.MessageContainer.sender_user_id)
  
  return sender_user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageContainer::set_allocated_sender_user_id(::std::string* sender_user_id) {
  if (sender_user_id != NULL) {
    
  } else {
    
  }
  sender_user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageContainer.sender_user_id)
}

// optional .zproto.Peer peer = 3;
bool MessageContainer::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageContainer::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageContainer::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageContainer::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageContainer.peer)
  return peer_;
}
::zproto::Peer* MessageContainer::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageContainer.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageContainer::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageContainer.peer)
}

// optional uint64 client_message_id = 4;
void MessageContainer::clear_client_message_id() {
  client_message_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageContainer::client_message_id() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.client_message_id)
  return client_message_id_;
}
 void MessageContainer::set_client_message_id(::google::protobuf::uint64 value) {
  
  client_message_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.client_message_id)
}

// optional uint64 message_seq = 5;
void MessageContainer::clear_message_seq() {
  message_seq_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageContainer::message_seq() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.message_seq)
  return message_seq_;
}
 void MessageContainer::set_message_seq(::google::protobuf::uint64 value) {
  
  message_seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.message_seq)
}

// optional .zproto.EnumHelper.MessageState state = 6;
void MessageContainer::clear_state() {
  state_ = 0;
}
 ::zproto::EnumHelper_MessageState MessageContainer::state() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.state)
  return static_cast< ::zproto::EnumHelper_MessageState >(state_);
}
 void MessageContainer::set_state(::zproto::EnumHelper_MessageState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.state)
}

// optional .zproto.EnumHelper.MessageType message_type = 7;
void MessageContainer::clear_message_type() {
  message_type_ = 0;
}
 ::zproto::EnumHelper_MessageType MessageContainer::message_type() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.message_type)
  return static_cast< ::zproto::EnumHelper_MessageType >(message_type_);
}
 void MessageContainer::set_message_type(::zproto::EnumHelper_MessageType value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.message_type)
}

// optional bytes message_content = 8;
void MessageContainer::clear_message_content() {
  message_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageContainer::message_content() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.message_content)
  return message_content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageContainer::set_message_content(const ::std::string& value) {
  
  message_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.message_content)
}
 void MessageContainer::set_message_content(const char* value) {
  
  message_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.MessageContainer.message_content)
}
 void MessageContainer::set_message_content(const void* value, size_t size) {
  
  message_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.MessageContainer.message_content)
}
 ::std::string* MessageContainer::mutable_message_content() {
  
  // @@protoc_insertion_point(field_mutable:zproto.MessageContainer.message_content)
  return message_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageContainer::release_message_content() {
  // @@protoc_insertion_point(field_release:zproto.MessageContainer.message_content)
  
  return message_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageContainer::set_allocated_message_content(::std::string* message_content) {
  if (message_content != NULL) {
    
  } else {
    
  }
  message_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_content);
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageContainer.message_content)
}

// optional bytes passthrough_data = 9;
void MessageContainer::clear_passthrough_data() {
  passthrough_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageContainer::passthrough_data() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.passthrough_data)
  return passthrough_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageContainer::set_passthrough_data(const ::std::string& value) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.passthrough_data)
}
 void MessageContainer::set_passthrough_data(const char* value) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.MessageContainer.passthrough_data)
}
 void MessageContainer::set_passthrough_data(const void* value, size_t size) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.MessageContainer.passthrough_data)
}
 ::std::string* MessageContainer::mutable_passthrough_data() {
  
  // @@protoc_insertion_point(field_mutable:zproto.MessageContainer.passthrough_data)
  return passthrough_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageContainer::release_passthrough_data() {
  // @@protoc_insertion_point(field_release:zproto.MessageContainer.passthrough_data)
  
  return passthrough_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageContainer::set_allocated_passthrough_data(::std::string* passthrough_data) {
  if (passthrough_data != NULL) {
    
  } else {
    
  }
  passthrough_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passthrough_data);
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageContainer.passthrough_data)
}

// optional uint64 updated_at = 10;
void MessageContainer::clear_updated_at() {
  updated_at_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MessageContainer::updated_at() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContainer.updated_at)
  return updated_at_;
}
 void MessageContainer::set_updated_at(::google::protobuf::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContainer.updated_at)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dialog::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dialog::Dialog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Dialog)
}

void Dialog::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

Dialog::Dialog(const Dialog& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Dialog)
}

void Dialog::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

Dialog::~Dialog() {
  // @@protoc_insertion_point(destructor:zproto.Dialog)
  SharedDtor();
}

void Dialog::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void Dialog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dialog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dialog_descriptor_;
}

const Dialog& Dialog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bases_2eproto();
  return *default_instance_;
}

Dialog* Dialog::default_instance_ = NULL;

Dialog* Dialog::New(::google::protobuf::Arena* arena) const {
  Dialog* n = new Dialog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dialog::Swap(Dialog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dialog::InternalSwap(Dialog* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Dialog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dialog_descriptor_;
  metadata.reflection = Dialog_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Dialog

// optional .zproto.Peer peer = 1;
bool Dialog::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void Dialog::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& Dialog::peer() const {
  // @@protoc_insertion_point(field_get:zproto.Dialog.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* Dialog::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.Dialog.peer)
  return peer_;
}
::zproto::Peer* Dialog::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.Dialog.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void Dialog::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.Dialog.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
