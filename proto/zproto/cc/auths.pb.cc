// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auths.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "auths.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* UserTokenAuthReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserTokenAuthReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserTokenAuthRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserTokenAuthRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_auths_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_auths_2eproto() {
  protobuf_AddDesc_auths_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "auths.proto");
  GOOGLE_CHECK(file != NULL);
  UserTokenAuthReq_descriptor_ = file->message_type(0);
  static const int UserTokenAuthReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthReq, app_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthReq, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthReq, user_token_),
  };
  UserTokenAuthReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserTokenAuthReq_descriptor_,
      UserTokenAuthReq::default_instance_,
      UserTokenAuthReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserTokenAuthReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthReq, _is_default_instance_));
  UserTokenAuthRsp_descriptor_ = file->message_type(1);
  static const int UserTokenAuthRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthRsp, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthRsp, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthRsp, nick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthRsp, avatar_),
  };
  UserTokenAuthRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserTokenAuthRsp_descriptor_,
      UserTokenAuthRsp::default_instance_,
      UserTokenAuthRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserTokenAuthRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserTokenAuthRsp, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_auths_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserTokenAuthReq_descriptor_, &UserTokenAuthReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserTokenAuthRsp_descriptor_, &UserTokenAuthRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_auths_2eproto() {
  delete UserTokenAuthReq::default_instance_;
  delete UserTokenAuthReq_reflection_;
  delete UserTokenAuthRsp::default_instance_;
  delete UserTokenAuthRsp_reflection_;
}

void protobuf_AddDesc_auths_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_auths_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013auths.proto\022\006zproto\"H\n\020UserTokenAuthRe"
    "q\022\017\n\007app_key\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\022\n\nu"
    "ser_token\030\003 \001(\t\"Q\n\020UserTokenAuthRsp\022\016\n\006a"
    "pp_id\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\t\022\014\n\004nick\030\003 \001"
    "(\t\022\016\n\006avatar\030\004 \001(\tB#\n\027com.zchat.engine.z"
    "protoB\006ZProtoH\002b\006proto3", 223);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "auths.proto", &protobuf_RegisterTypes);
  UserTokenAuthReq::default_instance_ = new UserTokenAuthReq();
  UserTokenAuthRsp::default_instance_ = new UserTokenAuthRsp();
  UserTokenAuthReq::default_instance_->InitAsDefaultInstance();
  UserTokenAuthRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_auths_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_auths_2eproto {
  StaticDescriptorInitializer_auths_2eproto() {
    protobuf_AddDesc_auths_2eproto();
  }
} static_descriptor_initializer_auths_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserTokenAuthReq::kAppKeyFieldNumber;
const int UserTokenAuthReq::kUserIdFieldNumber;
const int UserTokenAuthReq::kUserTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserTokenAuthReq::UserTokenAuthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserTokenAuthReq)
}

void UserTokenAuthReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserTokenAuthReq::UserTokenAuthReq(const UserTokenAuthReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UserTokenAuthReq)
}

void UserTokenAuthReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserTokenAuthReq::~UserTokenAuthReq() {
  // @@protoc_insertion_point(destructor:zproto.UserTokenAuthReq)
  SharedDtor();
}

void UserTokenAuthReq::SharedDtor() {
  app_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserTokenAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserTokenAuthReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserTokenAuthReq_descriptor_;
}

const UserTokenAuthReq& UserTokenAuthReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_auths_2eproto();
  return *default_instance_;
}

UserTokenAuthReq* UserTokenAuthReq::default_instance_ = NULL;

UserTokenAuthReq* UserTokenAuthReq::New(::google::protobuf::Arena* arena) const {
  UserTokenAuthReq* n = new UserTokenAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserTokenAuthReq::Swap(UserTokenAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserTokenAuthReq::InternalSwap(UserTokenAuthReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserTokenAuthReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserTokenAuthReq_descriptor_;
  metadata.reflection = UserTokenAuthReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserTokenAuthReq

// optional string app_key = 1;
void UserTokenAuthReq::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserTokenAuthReq::app_key() const {
  // @@protoc_insertion_point(field_get:zproto.UserTokenAuthReq.app_key)
  return app_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthReq::set_app_key(const ::std::string& value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserTokenAuthReq.app_key)
}
 void UserTokenAuthReq::set_app_key(const char* value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserTokenAuthReq.app_key)
}
 void UserTokenAuthReq::set_app_key(const char* value, size_t size) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserTokenAuthReq.app_key)
}
 ::std::string* UserTokenAuthReq::mutable_app_key() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserTokenAuthReq.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserTokenAuthReq::release_app_key() {
  // @@protoc_insertion_point(field_release:zproto.UserTokenAuthReq.app_key)
  
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthReq::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    
  } else {
    
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserTokenAuthReq.app_key)
}

// optional string user_id = 2;
void UserTokenAuthReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserTokenAuthReq::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.UserTokenAuthReq.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserTokenAuthReq.user_id)
}
 void UserTokenAuthReq::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserTokenAuthReq.user_id)
}
 void UserTokenAuthReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserTokenAuthReq.user_id)
}
 ::std::string* UserTokenAuthReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserTokenAuthReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserTokenAuthReq::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.UserTokenAuthReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserTokenAuthReq.user_id)
}

// optional string user_token = 3;
void UserTokenAuthReq::clear_user_token() {
  user_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserTokenAuthReq::user_token() const {
  // @@protoc_insertion_point(field_get:zproto.UserTokenAuthReq.user_token)
  return user_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthReq::set_user_token(const ::std::string& value) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserTokenAuthReq.user_token)
}
 void UserTokenAuthReq::set_user_token(const char* value) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserTokenAuthReq.user_token)
}
 void UserTokenAuthReq::set_user_token(const char* value, size_t size) {
  
  user_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserTokenAuthReq.user_token)
}
 ::std::string* UserTokenAuthReq::mutable_user_token() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserTokenAuthReq.user_token)
  return user_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserTokenAuthReq::release_user_token() {
  // @@protoc_insertion_point(field_release:zproto.UserTokenAuthReq.user_token)
  
  return user_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthReq::set_allocated_user_token(::std::string* user_token) {
  if (user_token != NULL) {
    
  } else {
    
  }
  user_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_token);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserTokenAuthReq.user_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserTokenAuthRsp::kAppIdFieldNumber;
const int UserTokenAuthRsp::kUserIdFieldNumber;
const int UserTokenAuthRsp::kNickFieldNumber;
const int UserTokenAuthRsp::kAvatarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserTokenAuthRsp::UserTokenAuthRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserTokenAuthRsp)
}

void UserTokenAuthRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserTokenAuthRsp::UserTokenAuthRsp(const UserTokenAuthRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UserTokenAuthRsp)
}

void UserTokenAuthRsp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_id_ = 0u;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserTokenAuthRsp::~UserTokenAuthRsp() {
  // @@protoc_insertion_point(destructor:zproto.UserTokenAuthRsp)
  SharedDtor();
}

void UserTokenAuthRsp::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UserTokenAuthRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserTokenAuthRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserTokenAuthRsp_descriptor_;
}

const UserTokenAuthRsp& UserTokenAuthRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_auths_2eproto();
  return *default_instance_;
}

UserTokenAuthRsp* UserTokenAuthRsp::default_instance_ = NULL;

UserTokenAuthRsp* UserTokenAuthRsp::New(::google::protobuf::Arena* arena) const {
  UserTokenAuthRsp* n = new UserTokenAuthRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserTokenAuthRsp::Swap(UserTokenAuthRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserTokenAuthRsp::InternalSwap(UserTokenAuthRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserTokenAuthRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserTokenAuthRsp_descriptor_;
  metadata.reflection = UserTokenAuthRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserTokenAuthRsp

// optional uint32 app_id = 1;
void UserTokenAuthRsp::clear_app_id() {
  app_id_ = 0u;
}
 ::google::protobuf::uint32 UserTokenAuthRsp::app_id() const {
  // @@protoc_insertion_point(field_get:zproto.UserTokenAuthRsp.app_id)
  return app_id_;
}
 void UserTokenAuthRsp::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.UserTokenAuthRsp.app_id)
}

// optional string user_id = 2;
void UserTokenAuthRsp::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserTokenAuthRsp::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.UserTokenAuthRsp.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthRsp::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserTokenAuthRsp.user_id)
}
 void UserTokenAuthRsp::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserTokenAuthRsp.user_id)
}
 void UserTokenAuthRsp::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserTokenAuthRsp.user_id)
}
 ::std::string* UserTokenAuthRsp::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserTokenAuthRsp.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserTokenAuthRsp::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.UserTokenAuthRsp.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthRsp::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserTokenAuthRsp.user_id)
}

// optional string nick = 3;
void UserTokenAuthRsp::clear_nick() {
  nick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserTokenAuthRsp::nick() const {
  // @@protoc_insertion_point(field_get:zproto.UserTokenAuthRsp.nick)
  return nick_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthRsp::set_nick(const ::std::string& value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserTokenAuthRsp.nick)
}
 void UserTokenAuthRsp::set_nick(const char* value) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserTokenAuthRsp.nick)
}
 void UserTokenAuthRsp::set_nick(const char* value, size_t size) {
  
  nick_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserTokenAuthRsp.nick)
}
 ::std::string* UserTokenAuthRsp::mutable_nick() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserTokenAuthRsp.nick)
  return nick_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserTokenAuthRsp::release_nick() {
  // @@protoc_insertion_point(field_release:zproto.UserTokenAuthRsp.nick)
  
  return nick_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthRsp::set_allocated_nick(::std::string* nick) {
  if (nick != NULL) {
    
  } else {
    
  }
  nick_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserTokenAuthRsp.nick)
}

// optional string avatar = 4;
void UserTokenAuthRsp::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserTokenAuthRsp::avatar() const {
  // @@protoc_insertion_point(field_get:zproto.UserTokenAuthRsp.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthRsp::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.UserTokenAuthRsp.avatar)
}
 void UserTokenAuthRsp::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.UserTokenAuthRsp.avatar)
}
 void UserTokenAuthRsp::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.UserTokenAuthRsp.avatar)
}
 ::std::string* UserTokenAuthRsp::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:zproto.UserTokenAuthRsp.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserTokenAuthRsp::release_avatar() {
  // @@protoc_insertion_point(field_release:zproto.UserTokenAuthRsp.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserTokenAuthRsp::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:zproto.UserTokenAuthRsp.avatar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
