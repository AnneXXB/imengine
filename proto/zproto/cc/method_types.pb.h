// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: method_types.proto

#ifndef PROTOBUF_method_5ftypes_2eproto__INCLUDED
#define PROTOBUF_method_5ftypes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace zproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_method_5ftypes_2eproto();
void protobuf_AssignDesc_method_5ftypes_2eproto();
void protobuf_ShutdownFile_method_5ftypes_2eproto();


enum MethodID {
  METHOD_ID_UNKNOWN = 0,
  USER_TOKEN_AUTH_REQ = 65025,
  USER_TOKEN_AUTH_RSP = 65026,
  SERVER_AUTH_REQ = 65281,
  SERVER_AUTH_RSP = 65282,
  USER_NAME_PASSWORD_AUTH_REQ = 65283,
  USER_NAME_PASSWORD_AUTH_RSP = 65284,
  CLIENT_ONLINE_REQ = 65285,
  CLIENT_ONLINE_RSP = 65286,
  CLIENT_OFFLINE_REQ = 65287,
  CLIENT_OFFLINE_RSP = 65288,
  SEND_MESSAGE_REQ = 65289,
  SEQ_DATE_RSP = 65290,
  MESSAGE_NOTIFY = 65291,
  MESSAGE_DATA_NOTIFY = 65292,
  MESSAGE_SYNC_REQ = 65293,
  MESSAGE_SYNC_RSP = 65294,
  MESSAGE_READ_REQ = 65295,
  LOAD_HISTORY_MESSAGE_REQ = 65296,
  LOAD_HISTORY_MESSAGE_RSP = 65297,
  LOAD_DIALOGS_REQ = 65298,
  LOAD_DIALOGS_RSP = 65299,
  MethodID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MethodID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MethodID_IsValid(int value);
const MethodID MethodID_MIN = METHOD_ID_UNKNOWN;
const MethodID MethodID_MAX = LOAD_DIALOGS_RSP;
const int MethodID_ARRAYSIZE = MethodID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MethodID_descriptor();
inline const ::std::string& MethodID_Name(MethodID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MethodID_descriptor(), value);
}
inline bool MethodID_Parse(
    const ::std::string& name, MethodID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MethodID>(
    MethodID_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zproto::MethodID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zproto::MethodID>() {
  return ::zproto::MethodID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_method_5ftypes_2eproto__INCLUDED
