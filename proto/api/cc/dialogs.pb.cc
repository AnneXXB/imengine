// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dialogs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dialogs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* Dialog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dialog_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadDialogsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadDialogsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadDialogsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadDialogsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateChatDialogReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateChatDialogReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateChatDialogRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateChatDialogRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* PeerBlockedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PeerBlockedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PeerUnBlockedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PeerUnBlockedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PeerTopedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PeerTopedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PeerUnTopedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PeerUnTopedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PeerDndedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PeerDndedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* PeerUnDndedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PeerUnDndedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockPeerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockPeerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnBlockPeerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnBlockPeerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TopPeerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TopPeerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnTopPeerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnTopPeerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DndPeerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DndPeerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnDndPeerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnDndPeerReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_dialogs_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_dialogs_2eproto() {
  protobuf_AddDesc_dialogs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "dialogs.proto");
  GOOGLE_CHECK(file != NULL);
  Dialog_descriptor_ = file->message_type(0);
  static const int Dialog_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, unread_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, sort_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, last_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, first_unread_date_),
  };
  Dialog_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Dialog_descriptor_,
      Dialog::default_instance_,
      Dialog_offsets_,
      -1,
      -1,
      -1,
      sizeof(Dialog),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dialog, _is_default_instance_));
  LoadDialogsReq_descriptor_ = file->message_type(1);
  static const int LoadDialogsReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, min_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, load_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, limit_),
  };
  LoadDialogsReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadDialogsReq_descriptor_,
      LoadDialogsReq::default_instance_,
      LoadDialogsReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadDialogsReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, _is_default_instance_));
  LoadDialogsRsp_descriptor_ = file->message_type(2);
  static const int LoadDialogsRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, dialogs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, user_peers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, group_peers_),
  };
  LoadDialogsRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadDialogsRsp_descriptor_,
      LoadDialogsRsp::default_instance_,
      LoadDialogsRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadDialogsRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, _is_default_instance_));
  CreateChatDialogReq_descriptor_ = file->message_type(3);
  static const int CreateChatDialogReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatDialogReq, peer_id_),
  };
  CreateChatDialogReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateChatDialogReq_descriptor_,
      CreateChatDialogReq::default_instance_,
      CreateChatDialogReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateChatDialogReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatDialogReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatDialogReq, _is_default_instance_));
  CreateChatDialogRsp_descriptor_ = file->message_type(4);
  static const int CreateChatDialogRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatDialogRsp, peer_),
  };
  CreateChatDialogRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateChatDialogRsp_descriptor_,
      CreateChatDialogRsp::default_instance_,
      CreateChatDialogRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateChatDialogRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatDialogRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateChatDialogRsp, _is_default_instance_));
  PeerBlockedNotify_descriptor_ = file->message_type(5);
  static const int PeerBlockedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerBlockedNotify, peer_),
  };
  PeerBlockedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PeerBlockedNotify_descriptor_,
      PeerBlockedNotify::default_instance_,
      PeerBlockedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(PeerBlockedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerBlockedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerBlockedNotify, _is_default_instance_));
  PeerUnBlockedNotify_descriptor_ = file->message_type(6);
  static const int PeerUnBlockedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnBlockedNotify, peer_),
  };
  PeerUnBlockedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PeerUnBlockedNotify_descriptor_,
      PeerUnBlockedNotify::default_instance_,
      PeerUnBlockedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(PeerUnBlockedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnBlockedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnBlockedNotify, _is_default_instance_));
  PeerTopedNotify_descriptor_ = file->message_type(7);
  static const int PeerTopedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerTopedNotify, peer_),
  };
  PeerTopedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PeerTopedNotify_descriptor_,
      PeerTopedNotify::default_instance_,
      PeerTopedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(PeerTopedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerTopedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerTopedNotify, _is_default_instance_));
  PeerUnTopedNotify_descriptor_ = file->message_type(8);
  static const int PeerUnTopedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnTopedNotify, peer_),
  };
  PeerUnTopedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PeerUnTopedNotify_descriptor_,
      PeerUnTopedNotify::default_instance_,
      PeerUnTopedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(PeerUnTopedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnTopedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnTopedNotify, _is_default_instance_));
  PeerDndedNotify_descriptor_ = file->message_type(9);
  static const int PeerDndedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerDndedNotify, peer_),
  };
  PeerDndedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PeerDndedNotify_descriptor_,
      PeerDndedNotify::default_instance_,
      PeerDndedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(PeerDndedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerDndedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerDndedNotify, _is_default_instance_));
  PeerUnDndedNotify_descriptor_ = file->message_type(10);
  static const int PeerUnDndedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnDndedNotify, peer_),
  };
  PeerUnDndedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PeerUnDndedNotify_descriptor_,
      PeerUnDndedNotify::default_instance_,
      PeerUnDndedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(PeerUnDndedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnDndedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerUnDndedNotify, _is_default_instance_));
  BlockPeerReq_descriptor_ = file->message_type(11);
  static const int BlockPeerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPeerReq, peer_),
  };
  BlockPeerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlockPeerReq_descriptor_,
      BlockPeerReq::default_instance_,
      BlockPeerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlockPeerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPeerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockPeerReq, _is_default_instance_));
  UnBlockPeerReq_descriptor_ = file->message_type(12);
  static const int UnBlockPeerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnBlockPeerReq, peer_),
  };
  UnBlockPeerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnBlockPeerReq_descriptor_,
      UnBlockPeerReq::default_instance_,
      UnBlockPeerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnBlockPeerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnBlockPeerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnBlockPeerReq, _is_default_instance_));
  TopPeerReq_descriptor_ = file->message_type(13);
  static const int TopPeerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeerReq, peer_),
  };
  TopPeerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TopPeerReq_descriptor_,
      TopPeerReq::default_instance_,
      TopPeerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(TopPeerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TopPeerReq, _is_default_instance_));
  UnTopPeerReq_descriptor_ = file->message_type(14);
  static const int UnTopPeerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnTopPeerReq, peer_),
  };
  UnTopPeerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnTopPeerReq_descriptor_,
      UnTopPeerReq::default_instance_,
      UnTopPeerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnTopPeerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnTopPeerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnTopPeerReq, _is_default_instance_));
  DndPeerReq_descriptor_ = file->message_type(15);
  static const int DndPeerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DndPeerReq, peer_),
  };
  DndPeerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DndPeerReq_descriptor_,
      DndPeerReq::default_instance_,
      DndPeerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(DndPeerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DndPeerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DndPeerReq, _is_default_instance_));
  UnDndPeerReq_descriptor_ = file->message_type(16);
  static const int UnDndPeerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDndPeerReq, peer_),
  };
  UnDndPeerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnDndPeerReq_descriptor_,
      UnDndPeerReq::default_instance_,
      UnDndPeerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnDndPeerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDndPeerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnDndPeerReq, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_dialogs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Dialog_descriptor_, &Dialog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadDialogsReq_descriptor_, &LoadDialogsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadDialogsRsp_descriptor_, &LoadDialogsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateChatDialogReq_descriptor_, &CreateChatDialogReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateChatDialogRsp_descriptor_, &CreateChatDialogRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PeerBlockedNotify_descriptor_, &PeerBlockedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PeerUnBlockedNotify_descriptor_, &PeerUnBlockedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PeerTopedNotify_descriptor_, &PeerTopedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PeerUnTopedNotify_descriptor_, &PeerUnTopedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PeerDndedNotify_descriptor_, &PeerDndedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PeerUnDndedNotify_descriptor_, &PeerUnDndedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlockPeerReq_descriptor_, &BlockPeerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnBlockPeerReq_descriptor_, &UnBlockPeerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TopPeerReq_descriptor_, &TopPeerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnTopPeerReq_descriptor_, &UnTopPeerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DndPeerReq_descriptor_, &DndPeerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnDndPeerReq_descriptor_, &UnDndPeerReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_dialogs_2eproto() {
  delete Dialog::default_instance_;
  delete Dialog_reflection_;
  delete LoadDialogsReq::default_instance_;
  delete LoadDialogsReq_reflection_;
  delete LoadDialogsRsp::default_instance_;
  delete LoadDialogsRsp_reflection_;
  delete CreateChatDialogReq::default_instance_;
  delete CreateChatDialogReq_reflection_;
  delete CreateChatDialogRsp::default_instance_;
  delete CreateChatDialogRsp_reflection_;
  delete PeerBlockedNotify::default_instance_;
  delete PeerBlockedNotify_reflection_;
  delete PeerUnBlockedNotify::default_instance_;
  delete PeerUnBlockedNotify_reflection_;
  delete PeerTopedNotify::default_instance_;
  delete PeerTopedNotify_reflection_;
  delete PeerUnTopedNotify::default_instance_;
  delete PeerUnTopedNotify_reflection_;
  delete PeerDndedNotify::default_instance_;
  delete PeerDndedNotify_reflection_;
  delete PeerUnDndedNotify::default_instance_;
  delete PeerUnDndedNotify_reflection_;
  delete BlockPeerReq::default_instance_;
  delete BlockPeerReq_reflection_;
  delete UnBlockPeerReq::default_instance_;
  delete UnBlockPeerReq_reflection_;
  delete TopPeerReq::default_instance_;
  delete TopPeerReq_reflection_;
  delete UnTopPeerReq::default_instance_;
  delete UnTopPeerReq_reflection_;
  delete DndPeerReq::default_instance_;
  delete DndPeerReq_reflection_;
  delete UnDndPeerReq::default_instance_;
  delete UnDndPeerReq_reflection_;
}

void protobuf_AddDesc_dialogs_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_dialogs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::zproto::protobuf_AddDesc_messaging_5fbase_2eproto();
  ::zproto::protobuf_AddDesc_group_5fbase_2eproto();
  ::zproto::protobuf_AddDesc_peers_2eproto();
  ::zproto::protobuf_AddDesc_users_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rdialogs.proto\022\006zproto\032\024messaging_base."
    "proto\032\020group_base.proto\032\013peers.proto\032\013us"
    "ers.proto\"\230\001\n\006Dialog\022\032\n\004peer\030\001 \001(\0132\014.zpr"
    "oto.Peer\022\024\n\014unread_count\030\002 \001(\005\022\021\n\tsort_d"
    "ate\030\003 \001(\003\022.\n\014last_message\030\004 \001(\0132\030.zproto"
    ".MessageContainer\022\031\n\021first_unread_date\030\005"
    " \001(\003\"Z\n\016LoadDialogsReq\022\020\n\010min_date\030\001 \001(\003"
    "\022\'\n\tload_mode\030\002 \001(\0162\024.zproto.ListLoadMod"
    "e\022\r\n\005limit\030\003 \001(\005\"\301\001\n\016LoadDialogsRsp\022\035\n\006g"
    "roups\030\001 \003(\0132\r.zproto.Group\022\033\n\005users\030\002 \003("
    "\0132\014.zproto.User\022\037\n\007dialogs\030\003 \003(\0132\016.zprot"
    "o.Dialog\022\'\n\nuser_peers\030\004 \003(\0132\023.zproto.Us"
    "erOutPeer\022)\n\013group_peers\030\005 \003(\0132\024.zproto."
    "GroupOutPeer\"&\n\023CreateChatDialogReq\022\017\n\007p"
    "eer_id\030\001 \001(\t\"4\n\023CreateChatDialogRsp\022\035\n\004p"
    "eer\030\001 \001(\0132\017.zproto.OutPeer\"/\n\021PeerBlocke"
    "dNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\"1\n\023P"
    "eerUnBlockedNotify\022\032\n\004peer\030\001 \001(\0132\014.zprot"
    "o.Peer\"-\n\017PeerTopedNotify\022\032\n\004peer\030\001 \001(\0132"
    "\014.zproto.Peer\"/\n\021PeerUnTopedNotify\022\032\n\004pe"
    "er\030\001 \001(\0132\014.zproto.Peer\"-\n\017PeerDndedNotif"
    "y\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\"/\n\021PeerUnD"
    "ndedNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\"-"
    "\n\014BlockPeerReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.Ou"
    "tPeer\"/\n\016UnBlockPeerReq\022\035\n\004peer\030\001 \001(\0132\017."
    "zproto.OutPeer\"+\n\nTopPeerReq\022\035\n\004peer\030\001 \001"
    "(\0132\017.zproto.OutPeer\"-\n\014UnTopPeerReq\022\035\n\004p"
    "eer\030\001 \001(\0132\017.zproto.OutPeer\"+\n\nDndPeerReq"
    "\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\"-\n\014UnDnd"
    "PeerReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeerB,"
    "\n\027com.zchat.engine.zprotoB\017ZProtoMessagi"
    "ngH\002b\006proto3", 1252);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dialogs.proto", &protobuf_RegisterTypes);
  Dialog::default_instance_ = new Dialog();
  LoadDialogsReq::default_instance_ = new LoadDialogsReq();
  LoadDialogsRsp::default_instance_ = new LoadDialogsRsp();
  CreateChatDialogReq::default_instance_ = new CreateChatDialogReq();
  CreateChatDialogRsp::default_instance_ = new CreateChatDialogRsp();
  PeerBlockedNotify::default_instance_ = new PeerBlockedNotify();
  PeerUnBlockedNotify::default_instance_ = new PeerUnBlockedNotify();
  PeerTopedNotify::default_instance_ = new PeerTopedNotify();
  PeerUnTopedNotify::default_instance_ = new PeerUnTopedNotify();
  PeerDndedNotify::default_instance_ = new PeerDndedNotify();
  PeerUnDndedNotify::default_instance_ = new PeerUnDndedNotify();
  BlockPeerReq::default_instance_ = new BlockPeerReq();
  UnBlockPeerReq::default_instance_ = new UnBlockPeerReq();
  TopPeerReq::default_instance_ = new TopPeerReq();
  UnTopPeerReq::default_instance_ = new UnTopPeerReq();
  DndPeerReq::default_instance_ = new DndPeerReq();
  UnDndPeerReq::default_instance_ = new UnDndPeerReq();
  Dialog::default_instance_->InitAsDefaultInstance();
  LoadDialogsReq::default_instance_->InitAsDefaultInstance();
  LoadDialogsRsp::default_instance_->InitAsDefaultInstance();
  CreateChatDialogReq::default_instance_->InitAsDefaultInstance();
  CreateChatDialogRsp::default_instance_->InitAsDefaultInstance();
  PeerBlockedNotify::default_instance_->InitAsDefaultInstance();
  PeerUnBlockedNotify::default_instance_->InitAsDefaultInstance();
  PeerTopedNotify::default_instance_->InitAsDefaultInstance();
  PeerUnTopedNotify::default_instance_->InitAsDefaultInstance();
  PeerDndedNotify::default_instance_->InitAsDefaultInstance();
  PeerUnDndedNotify::default_instance_->InitAsDefaultInstance();
  BlockPeerReq::default_instance_->InitAsDefaultInstance();
  UnBlockPeerReq::default_instance_->InitAsDefaultInstance();
  TopPeerReq::default_instance_->InitAsDefaultInstance();
  UnTopPeerReq::default_instance_->InitAsDefaultInstance();
  DndPeerReq::default_instance_->InitAsDefaultInstance();
  UnDndPeerReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_dialogs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_dialogs_2eproto {
  StaticDescriptorInitializer_dialogs_2eproto() {
    protobuf_AddDesc_dialogs_2eproto();
  }
} static_descriptor_initializer_dialogs_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dialog::kPeerFieldNumber;
const int Dialog::kUnreadCountFieldNumber;
const int Dialog::kSortDateFieldNumber;
const int Dialog::kLastMessageFieldNumber;
const int Dialog::kFirstUnreadDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dialog::Dialog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.Dialog)
}

void Dialog::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
  last_message_ = const_cast< ::zproto::MessageContainer*>(&::zproto::MessageContainer::default_instance());
}

Dialog::Dialog(const Dialog& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.Dialog)
}

void Dialog::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  unread_count_ = 0;
  sort_date_ = GOOGLE_LONGLONG(0);
  last_message_ = NULL;
  first_unread_date_ = GOOGLE_LONGLONG(0);
}

Dialog::~Dialog() {
  // @@protoc_insertion_point(destructor:zproto.Dialog)
  SharedDtor();
}

void Dialog::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
    delete last_message_;
  }
}

void Dialog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dialog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dialog_descriptor_;
}

const Dialog& Dialog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

Dialog* Dialog::default_instance_ = NULL;

Dialog* Dialog::New(::google::protobuf::Arena* arena) const {
  Dialog* n = new Dialog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dialog::Swap(Dialog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dialog::InternalSwap(Dialog* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Dialog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dialog_descriptor_;
  metadata.reflection = Dialog_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Dialog

// optional .zproto.Peer peer = 1;
bool Dialog::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void Dialog::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& Dialog::peer() const {
  // @@protoc_insertion_point(field_get:zproto.Dialog.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* Dialog::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.Dialog.peer)
  return peer_;
}
::zproto::Peer* Dialog::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.Dialog.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void Dialog::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.Dialog.peer)
}

// optional int32 unread_count = 2;
void Dialog::clear_unread_count() {
  unread_count_ = 0;
}
 ::google::protobuf::int32 Dialog::unread_count() const {
  // @@protoc_insertion_point(field_get:zproto.Dialog.unread_count)
  return unread_count_;
}
 void Dialog::set_unread_count(::google::protobuf::int32 value) {
  
  unread_count_ = value;
  // @@protoc_insertion_point(field_set:zproto.Dialog.unread_count)
}

// optional int64 sort_date = 3;
void Dialog::clear_sort_date() {
  sort_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Dialog::sort_date() const {
  // @@protoc_insertion_point(field_get:zproto.Dialog.sort_date)
  return sort_date_;
}
 void Dialog::set_sort_date(::google::protobuf::int64 value) {
  
  sort_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.Dialog.sort_date)
}

// optional .zproto.MessageContainer last_message = 4;
bool Dialog::has_last_message() const {
  return !_is_default_instance_ && last_message_ != NULL;
}
void Dialog::clear_last_message() {
  if (GetArenaNoVirtual() == NULL && last_message_ != NULL) delete last_message_;
  last_message_ = NULL;
}
const ::zproto::MessageContainer& Dialog::last_message() const {
  // @@protoc_insertion_point(field_get:zproto.Dialog.last_message)
  return last_message_ != NULL ? *last_message_ : *default_instance_->last_message_;
}
::zproto::MessageContainer* Dialog::mutable_last_message() {
  
  if (last_message_ == NULL) {
    last_message_ = new ::zproto::MessageContainer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.Dialog.last_message)
  return last_message_;
}
::zproto::MessageContainer* Dialog::release_last_message() {
  // @@protoc_insertion_point(field_release:zproto.Dialog.last_message)
  
  ::zproto::MessageContainer* temp = last_message_;
  last_message_ = NULL;
  return temp;
}
void Dialog::set_allocated_last_message(::zproto::MessageContainer* last_message) {
  delete last_message_;
  last_message_ = last_message;
  if (last_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.Dialog.last_message)
}

// optional int64 first_unread_date = 5;
void Dialog::clear_first_unread_date() {
  first_unread_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Dialog::first_unread_date() const {
  // @@protoc_insertion_point(field_get:zproto.Dialog.first_unread_date)
  return first_unread_date_;
}
 void Dialog::set_first_unread_date(::google::protobuf::int64 value) {
  
  first_unread_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.Dialog.first_unread_date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDialogsReq::kMinDateFieldNumber;
const int LoadDialogsReq::kLoadModeFieldNumber;
const int LoadDialogsReq::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDialogsReq::LoadDialogsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadDialogsReq)
}

void LoadDialogsReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadDialogsReq::LoadDialogsReq(const LoadDialogsReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadDialogsReq)
}

void LoadDialogsReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  min_date_ = GOOGLE_LONGLONG(0);
  load_mode_ = 0;
  limit_ = 0;
}

LoadDialogsReq::~LoadDialogsReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadDialogsReq)
  SharedDtor();
}

void LoadDialogsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoadDialogsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadDialogsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadDialogsReq_descriptor_;
}

const LoadDialogsReq& LoadDialogsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

LoadDialogsReq* LoadDialogsReq::default_instance_ = NULL;

LoadDialogsReq* LoadDialogsReq::New(::google::protobuf::Arena* arena) const {
  LoadDialogsReq* n = new LoadDialogsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadDialogsReq::Swap(LoadDialogsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDialogsReq::InternalSwap(LoadDialogsReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadDialogsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadDialogsReq_descriptor_;
  metadata.reflection = LoadDialogsReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadDialogsReq

// optional int64 min_date = 1;
void LoadDialogsReq::clear_min_date() {
  min_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 LoadDialogsReq::min_date() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.min_date)
  return min_date_;
}
 void LoadDialogsReq::set_min_date(::google::protobuf::int64 value) {
  
  min_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.min_date)
}

// optional .zproto.ListLoadMode load_mode = 2;
void LoadDialogsReq::clear_load_mode() {
  load_mode_ = 0;
}
 ::zproto::ListLoadMode LoadDialogsReq::load_mode() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.load_mode)
  return static_cast< ::zproto::ListLoadMode >(load_mode_);
}
 void LoadDialogsReq::set_load_mode(::zproto::ListLoadMode value) {
  
  load_mode_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.load_mode)
}

// optional int32 limit = 3;
void LoadDialogsReq::clear_limit() {
  limit_ = 0;
}
 ::google::protobuf::int32 LoadDialogsReq::limit() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.limit)
  return limit_;
}
 void LoadDialogsReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDialogsRsp::kGroupsFieldNumber;
const int LoadDialogsRsp::kUsersFieldNumber;
const int LoadDialogsRsp::kDialogsFieldNumber;
const int LoadDialogsRsp::kUserPeersFieldNumber;
const int LoadDialogsRsp::kGroupPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDialogsRsp::LoadDialogsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadDialogsRsp)
}

void LoadDialogsRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadDialogsRsp::LoadDialogsRsp(const LoadDialogsRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadDialogsRsp)
}

void LoadDialogsRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

LoadDialogsRsp::~LoadDialogsRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadDialogsRsp)
  SharedDtor();
}

void LoadDialogsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoadDialogsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadDialogsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadDialogsRsp_descriptor_;
}

const LoadDialogsRsp& LoadDialogsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

LoadDialogsRsp* LoadDialogsRsp::default_instance_ = NULL;

LoadDialogsRsp* LoadDialogsRsp::New(::google::protobuf::Arena* arena) const {
  LoadDialogsRsp* n = new LoadDialogsRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadDialogsRsp::Swap(LoadDialogsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDialogsRsp::InternalSwap(LoadDialogsRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadDialogsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadDialogsRsp_descriptor_;
  metadata.reflection = LoadDialogsRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadDialogsRsp

// repeated .zproto.Group groups = 1;
int LoadDialogsRsp::groups_size() const {
  return groups_.size();
}
void LoadDialogsRsp::clear_groups() {
  groups_.Clear();
}
const ::zproto::Group& LoadDialogsRsp::groups(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.groups)
  return groups_.Get(index);
}
::zproto::Group* LoadDialogsRsp::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.groups)
  return groups_.Mutable(index);
}
::zproto::Group* LoadDialogsRsp::add_groups() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::Group >*
LoadDialogsRsp::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::Group >&
LoadDialogsRsp::groups() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.groups)
  return groups_;
}

// repeated .zproto.User users = 2;
int LoadDialogsRsp::users_size() const {
  return users_.size();
}
void LoadDialogsRsp::clear_users() {
  users_.Clear();
}
const ::zproto::User& LoadDialogsRsp::users(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.users)
  return users_.Get(index);
}
::zproto::User* LoadDialogsRsp::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.users)
  return users_.Mutable(index);
}
::zproto::User* LoadDialogsRsp::add_users() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::User >*
LoadDialogsRsp::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::User >&
LoadDialogsRsp::users() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.users)
  return users_;
}

// repeated .zproto.Dialog dialogs = 3;
int LoadDialogsRsp::dialogs_size() const {
  return dialogs_.size();
}
void LoadDialogsRsp::clear_dialogs() {
  dialogs_.Clear();
}
const ::zproto::Dialog& LoadDialogsRsp::dialogs(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Get(index);
}
::zproto::Dialog* LoadDialogsRsp::mutable_dialogs(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Mutable(index);
}
::zproto::Dialog* LoadDialogsRsp::add_dialogs() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::Dialog >*
LoadDialogsRsp::mutable_dialogs() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.dialogs)
  return &dialogs_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >&
LoadDialogsRsp::dialogs() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.dialogs)
  return dialogs_;
}

// repeated .zproto.UserOutPeer user_peers = 4;
int LoadDialogsRsp::user_peers_size() const {
  return user_peers_.size();
}
void LoadDialogsRsp::clear_user_peers() {
  user_peers_.Clear();
}
const ::zproto::UserOutPeer& LoadDialogsRsp::user_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.user_peers)
  return user_peers_.Get(index);
}
::zproto::UserOutPeer* LoadDialogsRsp::mutable_user_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.user_peers)
  return user_peers_.Mutable(index);
}
::zproto::UserOutPeer* LoadDialogsRsp::add_user_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.user_peers)
  return user_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >*
LoadDialogsRsp::mutable_user_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.user_peers)
  return &user_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >&
LoadDialogsRsp::user_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.user_peers)
  return user_peers_;
}

// repeated .zproto.GroupOutPeer group_peers = 5;
int LoadDialogsRsp::group_peers_size() const {
  return group_peers_.size();
}
void LoadDialogsRsp::clear_group_peers() {
  group_peers_.Clear();
}
const ::zproto::GroupOutPeer& LoadDialogsRsp::group_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.group_peers)
  return group_peers_.Get(index);
}
::zproto::GroupOutPeer* LoadDialogsRsp::mutable_group_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.group_peers)
  return group_peers_.Mutable(index);
}
::zproto::GroupOutPeer* LoadDialogsRsp::add_group_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.group_peers)
  return group_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >*
LoadDialogsRsp::mutable_group_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.group_peers)
  return &group_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >&
LoadDialogsRsp::group_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.group_peers)
  return group_peers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChatDialogReq::kPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChatDialogReq::CreateChatDialogReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.CreateChatDialogReq)
}

void CreateChatDialogReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateChatDialogReq::CreateChatDialogReq(const CreateChatDialogReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.CreateChatDialogReq)
}

void CreateChatDialogReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  peer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateChatDialogReq::~CreateChatDialogReq() {
  // @@protoc_insertion_point(destructor:zproto.CreateChatDialogReq)
  SharedDtor();
}

void CreateChatDialogReq::SharedDtor() {
  peer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CreateChatDialogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateChatDialogReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateChatDialogReq_descriptor_;
}

const CreateChatDialogReq& CreateChatDialogReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

CreateChatDialogReq* CreateChatDialogReq::default_instance_ = NULL;

CreateChatDialogReq* CreateChatDialogReq::New(::google::protobuf::Arena* arena) const {
  CreateChatDialogReq* n = new CreateChatDialogReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateChatDialogReq::Swap(CreateChatDialogReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChatDialogReq::InternalSwap(CreateChatDialogReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata CreateChatDialogReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateChatDialogReq_descriptor_;
  metadata.reflection = CreateChatDialogReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateChatDialogReq

// optional string peer_id = 1;
void CreateChatDialogReq::clear_peer_id() {
  peer_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CreateChatDialogReq::peer_id() const {
  // @@protoc_insertion_point(field_get:zproto.CreateChatDialogReq.peer_id)
  return peer_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateChatDialogReq::set_peer_id(const ::std::string& value) {
  
  peer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.CreateChatDialogReq.peer_id)
}
 void CreateChatDialogReq::set_peer_id(const char* value) {
  
  peer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.CreateChatDialogReq.peer_id)
}
 void CreateChatDialogReq::set_peer_id(const char* value, size_t size) {
  
  peer_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.CreateChatDialogReq.peer_id)
}
 ::std::string* CreateChatDialogReq::mutable_peer_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.CreateChatDialogReq.peer_id)
  return peer_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CreateChatDialogReq::release_peer_id() {
  // @@protoc_insertion_point(field_release:zproto.CreateChatDialogReq.peer_id)
  
  return peer_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CreateChatDialogReq::set_allocated_peer_id(::std::string* peer_id) {
  if (peer_id != NULL) {
    
  } else {
    
  }
  peer_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), peer_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.CreateChatDialogReq.peer_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateChatDialogRsp::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateChatDialogRsp::CreateChatDialogRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.CreateChatDialogRsp)
}

void CreateChatDialogRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

CreateChatDialogRsp::CreateChatDialogRsp(const CreateChatDialogRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.CreateChatDialogRsp)
}

void CreateChatDialogRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

CreateChatDialogRsp::~CreateChatDialogRsp() {
  // @@protoc_insertion_point(destructor:zproto.CreateChatDialogRsp)
  SharedDtor();
}

void CreateChatDialogRsp::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void CreateChatDialogRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateChatDialogRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateChatDialogRsp_descriptor_;
}

const CreateChatDialogRsp& CreateChatDialogRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

CreateChatDialogRsp* CreateChatDialogRsp::default_instance_ = NULL;

CreateChatDialogRsp* CreateChatDialogRsp::New(::google::protobuf::Arena* arena) const {
  CreateChatDialogRsp* n = new CreateChatDialogRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateChatDialogRsp::Swap(CreateChatDialogRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateChatDialogRsp::InternalSwap(CreateChatDialogRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata CreateChatDialogRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateChatDialogRsp_descriptor_;
  metadata.reflection = CreateChatDialogRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateChatDialogRsp

// optional .zproto.OutPeer peer = 1;
bool CreateChatDialogRsp::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void CreateChatDialogRsp::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& CreateChatDialogRsp::peer() const {
  // @@protoc_insertion_point(field_get:zproto.CreateChatDialogRsp.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* CreateChatDialogRsp::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.CreateChatDialogRsp.peer)
  return peer_;
}
::zproto::OutPeer* CreateChatDialogRsp::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.CreateChatDialogRsp.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void CreateChatDialogRsp::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.CreateChatDialogRsp.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerBlockedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerBlockedNotify::PeerBlockedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerBlockedNotify)
}

void PeerBlockedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

PeerBlockedNotify::PeerBlockedNotify(const PeerBlockedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.PeerBlockedNotify)
}

void PeerBlockedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

PeerBlockedNotify::~PeerBlockedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerBlockedNotify)
  SharedDtor();
}

void PeerBlockedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void PeerBlockedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerBlockedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PeerBlockedNotify_descriptor_;
}

const PeerBlockedNotify& PeerBlockedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

PeerBlockedNotify* PeerBlockedNotify::default_instance_ = NULL;

PeerBlockedNotify* PeerBlockedNotify::New(::google::protobuf::Arena* arena) const {
  PeerBlockedNotify* n = new PeerBlockedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerBlockedNotify::Swap(PeerBlockedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerBlockedNotify::InternalSwap(PeerBlockedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerBlockedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PeerBlockedNotify_descriptor_;
  metadata.reflection = PeerBlockedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeerBlockedNotify

// optional .zproto.Peer peer = 1;
bool PeerBlockedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void PeerBlockedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& PeerBlockedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.PeerBlockedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* PeerBlockedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.PeerBlockedNotify.peer)
  return peer_;
}
::zproto::Peer* PeerBlockedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.PeerBlockedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void PeerBlockedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.PeerBlockedNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerUnBlockedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerUnBlockedNotify::PeerUnBlockedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerUnBlockedNotify)
}

void PeerUnBlockedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

PeerUnBlockedNotify::PeerUnBlockedNotify(const PeerUnBlockedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.PeerUnBlockedNotify)
}

void PeerUnBlockedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

PeerUnBlockedNotify::~PeerUnBlockedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerUnBlockedNotify)
  SharedDtor();
}

void PeerUnBlockedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void PeerUnBlockedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerUnBlockedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PeerUnBlockedNotify_descriptor_;
}

const PeerUnBlockedNotify& PeerUnBlockedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

PeerUnBlockedNotify* PeerUnBlockedNotify::default_instance_ = NULL;

PeerUnBlockedNotify* PeerUnBlockedNotify::New(::google::protobuf::Arena* arena) const {
  PeerUnBlockedNotify* n = new PeerUnBlockedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerUnBlockedNotify::Swap(PeerUnBlockedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerUnBlockedNotify::InternalSwap(PeerUnBlockedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerUnBlockedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PeerUnBlockedNotify_descriptor_;
  metadata.reflection = PeerUnBlockedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeerUnBlockedNotify

// optional .zproto.Peer peer = 1;
bool PeerUnBlockedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void PeerUnBlockedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& PeerUnBlockedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.PeerUnBlockedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* PeerUnBlockedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.PeerUnBlockedNotify.peer)
  return peer_;
}
::zproto::Peer* PeerUnBlockedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.PeerUnBlockedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void PeerUnBlockedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.PeerUnBlockedNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerTopedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerTopedNotify::PeerTopedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerTopedNotify)
}

void PeerTopedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

PeerTopedNotify::PeerTopedNotify(const PeerTopedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.PeerTopedNotify)
}

void PeerTopedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

PeerTopedNotify::~PeerTopedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerTopedNotify)
  SharedDtor();
}

void PeerTopedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void PeerTopedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerTopedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PeerTopedNotify_descriptor_;
}

const PeerTopedNotify& PeerTopedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

PeerTopedNotify* PeerTopedNotify::default_instance_ = NULL;

PeerTopedNotify* PeerTopedNotify::New(::google::protobuf::Arena* arena) const {
  PeerTopedNotify* n = new PeerTopedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerTopedNotify::Swap(PeerTopedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerTopedNotify::InternalSwap(PeerTopedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerTopedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PeerTopedNotify_descriptor_;
  metadata.reflection = PeerTopedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeerTopedNotify

// optional .zproto.Peer peer = 1;
bool PeerTopedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void PeerTopedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& PeerTopedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.PeerTopedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* PeerTopedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.PeerTopedNotify.peer)
  return peer_;
}
::zproto::Peer* PeerTopedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.PeerTopedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void PeerTopedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.PeerTopedNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerUnTopedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerUnTopedNotify::PeerUnTopedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerUnTopedNotify)
}

void PeerUnTopedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

PeerUnTopedNotify::PeerUnTopedNotify(const PeerUnTopedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.PeerUnTopedNotify)
}

void PeerUnTopedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

PeerUnTopedNotify::~PeerUnTopedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerUnTopedNotify)
  SharedDtor();
}

void PeerUnTopedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void PeerUnTopedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerUnTopedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PeerUnTopedNotify_descriptor_;
}

const PeerUnTopedNotify& PeerUnTopedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

PeerUnTopedNotify* PeerUnTopedNotify::default_instance_ = NULL;

PeerUnTopedNotify* PeerUnTopedNotify::New(::google::protobuf::Arena* arena) const {
  PeerUnTopedNotify* n = new PeerUnTopedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerUnTopedNotify::Swap(PeerUnTopedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerUnTopedNotify::InternalSwap(PeerUnTopedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerUnTopedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PeerUnTopedNotify_descriptor_;
  metadata.reflection = PeerUnTopedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeerUnTopedNotify

// optional .zproto.Peer peer = 1;
bool PeerUnTopedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void PeerUnTopedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& PeerUnTopedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.PeerUnTopedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* PeerUnTopedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.PeerUnTopedNotify.peer)
  return peer_;
}
::zproto::Peer* PeerUnTopedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.PeerUnTopedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void PeerUnTopedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.PeerUnTopedNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerDndedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerDndedNotify::PeerDndedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerDndedNotify)
}

void PeerDndedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

PeerDndedNotify::PeerDndedNotify(const PeerDndedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.PeerDndedNotify)
}

void PeerDndedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

PeerDndedNotify::~PeerDndedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerDndedNotify)
  SharedDtor();
}

void PeerDndedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void PeerDndedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerDndedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PeerDndedNotify_descriptor_;
}

const PeerDndedNotify& PeerDndedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

PeerDndedNotify* PeerDndedNotify::default_instance_ = NULL;

PeerDndedNotify* PeerDndedNotify::New(::google::protobuf::Arena* arena) const {
  PeerDndedNotify* n = new PeerDndedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerDndedNotify::Swap(PeerDndedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerDndedNotify::InternalSwap(PeerDndedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerDndedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PeerDndedNotify_descriptor_;
  metadata.reflection = PeerDndedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeerDndedNotify

// optional .zproto.Peer peer = 1;
bool PeerDndedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void PeerDndedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& PeerDndedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.PeerDndedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* PeerDndedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.PeerDndedNotify.peer)
  return peer_;
}
::zproto::Peer* PeerDndedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.PeerDndedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void PeerDndedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.PeerDndedNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerUnDndedNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerUnDndedNotify::PeerUnDndedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.PeerUnDndedNotify)
}

void PeerUnDndedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

PeerUnDndedNotify::PeerUnDndedNotify(const PeerUnDndedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.PeerUnDndedNotify)
}

void PeerUnDndedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

PeerUnDndedNotify::~PeerUnDndedNotify() {
  // @@protoc_insertion_point(destructor:zproto.PeerUnDndedNotify)
  SharedDtor();
}

void PeerUnDndedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void PeerUnDndedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerUnDndedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PeerUnDndedNotify_descriptor_;
}

const PeerUnDndedNotify& PeerUnDndedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

PeerUnDndedNotify* PeerUnDndedNotify::default_instance_ = NULL;

PeerUnDndedNotify* PeerUnDndedNotify::New(::google::protobuf::Arena* arena) const {
  PeerUnDndedNotify* n = new PeerUnDndedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerUnDndedNotify::Swap(PeerUnDndedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerUnDndedNotify::InternalSwap(PeerUnDndedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PeerUnDndedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PeerUnDndedNotify_descriptor_;
  metadata.reflection = PeerUnDndedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeerUnDndedNotify

// optional .zproto.Peer peer = 1;
bool PeerUnDndedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void PeerUnDndedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& PeerUnDndedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.PeerUnDndedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* PeerUnDndedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.PeerUnDndedNotify.peer)
  return peer_;
}
::zproto::Peer* PeerUnDndedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.PeerUnDndedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void PeerUnDndedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.PeerUnDndedNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockPeerReq::BlockPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.BlockPeerReq)
}

void BlockPeerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

BlockPeerReq::BlockPeerReq(const BlockPeerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.BlockPeerReq)
}

void BlockPeerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

BlockPeerReq::~BlockPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.BlockPeerReq)
  SharedDtor();
}

void BlockPeerReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void BlockPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockPeerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockPeerReq_descriptor_;
}

const BlockPeerReq& BlockPeerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

BlockPeerReq* BlockPeerReq::default_instance_ = NULL;

BlockPeerReq* BlockPeerReq::New(::google::protobuf::Arena* arena) const {
  BlockPeerReq* n = new BlockPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockPeerReq::Swap(BlockPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockPeerReq::InternalSwap(BlockPeerReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata BlockPeerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockPeerReq_descriptor_;
  metadata.reflection = BlockPeerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockPeerReq

// optional .zproto.OutPeer peer = 1;
bool BlockPeerReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void BlockPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& BlockPeerReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.BlockPeerReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* BlockPeerReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.BlockPeerReq.peer)
  return peer_;
}
::zproto::OutPeer* BlockPeerReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.BlockPeerReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void BlockPeerReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.BlockPeerReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnBlockPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnBlockPeerReq::UnBlockPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UnBlockPeerReq)
}

void UnBlockPeerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

UnBlockPeerReq::UnBlockPeerReq(const UnBlockPeerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UnBlockPeerReq)
}

void UnBlockPeerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

UnBlockPeerReq::~UnBlockPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.UnBlockPeerReq)
  SharedDtor();
}

void UnBlockPeerReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void UnBlockPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnBlockPeerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnBlockPeerReq_descriptor_;
}

const UnBlockPeerReq& UnBlockPeerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

UnBlockPeerReq* UnBlockPeerReq::default_instance_ = NULL;

UnBlockPeerReq* UnBlockPeerReq::New(::google::protobuf::Arena* arena) const {
  UnBlockPeerReq* n = new UnBlockPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnBlockPeerReq::Swap(UnBlockPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnBlockPeerReq::InternalSwap(UnBlockPeerReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UnBlockPeerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnBlockPeerReq_descriptor_;
  metadata.reflection = UnBlockPeerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnBlockPeerReq

// optional .zproto.OutPeer peer = 1;
bool UnBlockPeerReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void UnBlockPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& UnBlockPeerReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.UnBlockPeerReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* UnBlockPeerReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.UnBlockPeerReq.peer)
  return peer_;
}
::zproto::OutPeer* UnBlockPeerReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.UnBlockPeerReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void UnBlockPeerReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.UnBlockPeerReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TopPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TopPeerReq::TopPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.TopPeerReq)
}

void TopPeerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

TopPeerReq::TopPeerReq(const TopPeerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.TopPeerReq)
}

void TopPeerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

TopPeerReq::~TopPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.TopPeerReq)
  SharedDtor();
}

void TopPeerReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void TopPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TopPeerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TopPeerReq_descriptor_;
}

const TopPeerReq& TopPeerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

TopPeerReq* TopPeerReq::default_instance_ = NULL;

TopPeerReq* TopPeerReq::New(::google::protobuf::Arena* arena) const {
  TopPeerReq* n = new TopPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TopPeerReq::Swap(TopPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TopPeerReq::InternalSwap(TopPeerReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TopPeerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TopPeerReq_descriptor_;
  metadata.reflection = TopPeerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TopPeerReq

// optional .zproto.OutPeer peer = 1;
bool TopPeerReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void TopPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& TopPeerReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.TopPeerReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* TopPeerReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.TopPeerReq.peer)
  return peer_;
}
::zproto::OutPeer* TopPeerReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.TopPeerReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TopPeerReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.TopPeerReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnTopPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnTopPeerReq::UnTopPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UnTopPeerReq)
}

void UnTopPeerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

UnTopPeerReq::UnTopPeerReq(const UnTopPeerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UnTopPeerReq)
}

void UnTopPeerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

UnTopPeerReq::~UnTopPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.UnTopPeerReq)
  SharedDtor();
}

void UnTopPeerReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void UnTopPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnTopPeerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnTopPeerReq_descriptor_;
}

const UnTopPeerReq& UnTopPeerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

UnTopPeerReq* UnTopPeerReq::default_instance_ = NULL;

UnTopPeerReq* UnTopPeerReq::New(::google::protobuf::Arena* arena) const {
  UnTopPeerReq* n = new UnTopPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnTopPeerReq::Swap(UnTopPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnTopPeerReq::InternalSwap(UnTopPeerReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UnTopPeerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnTopPeerReq_descriptor_;
  metadata.reflection = UnTopPeerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnTopPeerReq

// optional .zproto.OutPeer peer = 1;
bool UnTopPeerReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void UnTopPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& UnTopPeerReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.UnTopPeerReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* UnTopPeerReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.UnTopPeerReq.peer)
  return peer_;
}
::zproto::OutPeer* UnTopPeerReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.UnTopPeerReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void UnTopPeerReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.UnTopPeerReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DndPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DndPeerReq::DndPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DndPeerReq)
}

void DndPeerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

DndPeerReq::DndPeerReq(const DndPeerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.DndPeerReq)
}

void DndPeerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

DndPeerReq::~DndPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.DndPeerReq)
  SharedDtor();
}

void DndPeerReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void DndPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DndPeerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DndPeerReq_descriptor_;
}

const DndPeerReq& DndPeerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

DndPeerReq* DndPeerReq::default_instance_ = NULL;

DndPeerReq* DndPeerReq::New(::google::protobuf::Arena* arena) const {
  DndPeerReq* n = new DndPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DndPeerReq::Swap(DndPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DndPeerReq::InternalSwap(DndPeerReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DndPeerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DndPeerReq_descriptor_;
  metadata.reflection = DndPeerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DndPeerReq

// optional .zproto.OutPeer peer = 1;
bool DndPeerReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void DndPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& DndPeerReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.DndPeerReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* DndPeerReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.DndPeerReq.peer)
  return peer_;
}
::zproto::OutPeer* DndPeerReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.DndPeerReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void DndPeerReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.DndPeerReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnDndPeerReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnDndPeerReq::UnDndPeerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UnDndPeerReq)
}

void UnDndPeerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

UnDndPeerReq::UnDndPeerReq(const UnDndPeerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UnDndPeerReq)
}

void UnDndPeerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

UnDndPeerReq::~UnDndPeerReq() {
  // @@protoc_insertion_point(destructor:zproto.UnDndPeerReq)
  SharedDtor();
}

void UnDndPeerReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void UnDndPeerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnDndPeerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnDndPeerReq_descriptor_;
}

const UnDndPeerReq& UnDndPeerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_dialogs_2eproto();
  return *default_instance_;
}

UnDndPeerReq* UnDndPeerReq::default_instance_ = NULL;

UnDndPeerReq* UnDndPeerReq::New(::google::protobuf::Arena* arena) const {
  UnDndPeerReq* n = new UnDndPeerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnDndPeerReq::Swap(UnDndPeerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnDndPeerReq::InternalSwap(UnDndPeerReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UnDndPeerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnDndPeerReq_descriptor_;
  metadata.reflection = UnDndPeerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnDndPeerReq

// optional .zproto.OutPeer peer = 1;
bool UnDndPeerReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void UnDndPeerReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& UnDndPeerReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.UnDndPeerReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* UnDndPeerReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.UnDndPeerReq.peer)
  return peer_;
}
::zproto::OutPeer* UnDndPeerReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.UnDndPeerReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void UnDndPeerReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.UnDndPeerReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
