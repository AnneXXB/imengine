// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messaging.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messaging.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* SendMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageReceivedReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageReceivedReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageReadReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageReadReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClearChatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClearChatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteChatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteChatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ArchiveChatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ArchiveChatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageSetReactionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageSetReactionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageContentChangedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageContentChangedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageDateChangedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageDateChangedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageSentNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageSentNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageReceivedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageReceivedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageReadNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageReadNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageReadByMeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageReadByMeNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* MessageDeleteNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageDeleteNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatClearNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatClearNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatDeleteNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatDeleteNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatArchiveNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatArchiveNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatDropCacheNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatDropCacheNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatGroupsChangedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatGroupsChangedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadHistoryReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadHistoryReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadHistoryRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadHistoryRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadDialogsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadDialogsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadDialogsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadDialogsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadArchivedReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadArchivedReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadArchivedRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadArchivedRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadGroupedDialogsReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadGroupedDialogsReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadGroupedDialogsRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadGroupedDialogsRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* DialogsOrderRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DialogsOrderRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* HideDialogReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HideDialogReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShowDialogReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShowDialogReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* FavouriteDialogReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FavouriteDialogReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnfavouriteDialogReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnfavouriteDialogReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyDialogOpenedReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyDialogOpenedReq_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messaging_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messaging_2eproto() {
  protobuf_AddDesc_messaging_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messaging.proto");
  GOOGLE_CHECK(file != NULL);
  SendMessageReq_descriptor_ = file->message_type(0);
  static const int SendMessageReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageReq, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageReq, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageReq, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageReq, passthrough_data_),
  };
  SendMessageReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendMessageReq_descriptor_,
      SendMessageReq::default_instance_,
      SendMessageReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SendMessageReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendMessageReq, _is_default_instance_));
  UpdateMessageReq_descriptor_ = file->message_type(1);
  static const int UpdateMessageReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMessageReq, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMessageReq, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMessageReq, updated_message_),
  };
  UpdateMessageReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateMessageReq_descriptor_,
      UpdateMessageReq::default_instance_,
      UpdateMessageReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateMessageReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMessageReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateMessageReq, _is_default_instance_));
  MessageReceivedReq_descriptor_ = file->message_type(2);
  static const int MessageReceivedReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedReq, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedReq, date_),
  };
  MessageReceivedReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageReceivedReq_descriptor_,
      MessageReceivedReq::default_instance_,
      MessageReceivedReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageReceivedReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedReq, _is_default_instance_));
  MessageReadReq_descriptor_ = file->message_type(3);
  static const int MessageReadReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadReq, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadReq, date_),
  };
  MessageReadReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageReadReq_descriptor_,
      MessageReadReq::default_instance_,
      MessageReadReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageReadReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadReq, _is_default_instance_));
  DeleteMessageReq_descriptor_ = file->message_type(4);
  static const int DeleteMessageReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageReq, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageReq, rids_),
  };
  DeleteMessageReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteMessageReq_descriptor_,
      DeleteMessageReq::default_instance_,
      DeleteMessageReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteMessageReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteMessageReq, _is_default_instance_));
  ClearChatReq_descriptor_ = file->message_type(5);
  static const int ClearChatReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearChatReq, peer_),
  };
  ClearChatReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClearChatReq_descriptor_,
      ClearChatReq::default_instance_,
      ClearChatReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClearChatReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearChatReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearChatReq, _is_default_instance_));
  DeleteChatReq_descriptor_ = file->message_type(6);
  static const int DeleteChatReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteChatReq, peer_),
  };
  DeleteChatReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DeleteChatReq_descriptor_,
      DeleteChatReq::default_instance_,
      DeleteChatReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(DeleteChatReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteChatReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteChatReq, _is_default_instance_));
  ArchiveChatReq_descriptor_ = file->message_type(7);
  static const int ArchiveChatReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveChatReq, peer_),
  };
  ArchiveChatReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ArchiveChatReq_descriptor_,
      ArchiveChatReq::default_instance_,
      ArchiveChatReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ArchiveChatReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveChatReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ArchiveChatReq, _is_default_instance_));
  MessageSetReactionReq_descriptor_ = file->message_type(8);
  static const int MessageSetReactionReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSetReactionReq, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSetReactionReq, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSetReactionReq, code_),
  };
  MessageSetReactionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageSetReactionReq_descriptor_,
      MessageSetReactionReq::default_instance_,
      MessageSetReactionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageSetReactionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSetReactionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSetReactionReq, _is_default_instance_));
  MessageNotify_descriptor_ = file->message_type(9);
  static const int MessageNotify_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNotify, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNotify, sender_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNotify, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNotify, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNotify, message_),
  };
  MessageNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageNotify_descriptor_,
      MessageNotify::default_instance_,
      MessageNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageNotify, _is_default_instance_));
  MessageContentChangedNotify_descriptor_ = file->message_type(10);
  static const int MessageContentChangedNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContentChangedNotify, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContentChangedNotify, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContentChangedNotify, message_),
  };
  MessageContentChangedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageContentChangedNotify_descriptor_,
      MessageContentChangedNotify::default_instance_,
      MessageContentChangedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageContentChangedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContentChangedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageContentChangedNotify, _is_default_instance_));
  MessageDateChangedNotify_descriptor_ = file->message_type(11);
  static const int MessageDateChangedNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDateChangedNotify, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDateChangedNotify, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDateChangedNotify, date_),
  };
  MessageDateChangedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageDateChangedNotify_descriptor_,
      MessageDateChangedNotify::default_instance_,
      MessageDateChangedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageDateChangedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDateChangedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDateChangedNotify, _is_default_instance_));
  MessageSentNotify_descriptor_ = file->message_type(12);
  static const int MessageSentNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSentNotify, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSentNotify, rid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSentNotify, date_),
  };
  MessageSentNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageSentNotify_descriptor_,
      MessageSentNotify::default_instance_,
      MessageSentNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageSentNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSentNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageSentNotify, _is_default_instance_));
  MessageReceivedNotify_descriptor_ = file->message_type(13);
  static const int MessageReceivedNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedNotify, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedNotify, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedNotify, received_date_),
  };
  MessageReceivedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageReceivedNotify_descriptor_,
      MessageReceivedNotify::default_instance_,
      MessageReceivedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageReceivedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReceivedNotify, _is_default_instance_));
  MessageReadNotify_descriptor_ = file->message_type(14);
  static const int MessageReadNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadNotify, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadNotify, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadNotify, read_date_),
  };
  MessageReadNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageReadNotify_descriptor_,
      MessageReadNotify::default_instance_,
      MessageReadNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageReadNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadNotify, _is_default_instance_));
  MessageReadByMeNotify_descriptor_ = file->message_type(15);
  static const int MessageReadByMeNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadByMeNotify, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadByMeNotify, start_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadByMeNotify, unread_counter_),
  };
  MessageReadByMeNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageReadByMeNotify_descriptor_,
      MessageReadByMeNotify::default_instance_,
      MessageReadByMeNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageReadByMeNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadByMeNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageReadByMeNotify, _is_default_instance_));
  MessageDeleteNotify_descriptor_ = file->message_type(16);
  static const int MessageDeleteNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDeleteNotify, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDeleteNotify, rids_),
  };
  MessageDeleteNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageDeleteNotify_descriptor_,
      MessageDeleteNotify::default_instance_,
      MessageDeleteNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageDeleteNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDeleteNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDeleteNotify, _is_default_instance_));
  ChatClearNotify_descriptor_ = file->message_type(17);
  static const int ChatClearNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatClearNotify, peer_),
  };
  ChatClearNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatClearNotify_descriptor_,
      ChatClearNotify::default_instance_,
      ChatClearNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatClearNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatClearNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatClearNotify, _is_default_instance_));
  ChatDeleteNotify_descriptor_ = file->message_type(18);
  static const int ChatDeleteNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatDeleteNotify, peer_),
  };
  ChatDeleteNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatDeleteNotify_descriptor_,
      ChatDeleteNotify::default_instance_,
      ChatDeleteNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatDeleteNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatDeleteNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatDeleteNotify, _is_default_instance_));
  ChatArchiveNotify_descriptor_ = file->message_type(19);
  static const int ChatArchiveNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatArchiveNotify, peer_),
  };
  ChatArchiveNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatArchiveNotify_descriptor_,
      ChatArchiveNotify::default_instance_,
      ChatArchiveNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatArchiveNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatArchiveNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatArchiveNotify, _is_default_instance_));
  ChatDropCacheNotify_descriptor_ = file->message_type(20);
  static const int ChatDropCacheNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatDropCacheNotify, peer_),
  };
  ChatDropCacheNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatDropCacheNotify_descriptor_,
      ChatDropCacheNotify::default_instance_,
      ChatDropCacheNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatDropCacheNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatDropCacheNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatDropCacheNotify, _is_default_instance_));
  ChatGroupsChangedNotify_descriptor_ = file->message_type(21);
  static const int ChatGroupsChangedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatGroupsChangedNotify, dialogs_),
  };
  ChatGroupsChangedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatGroupsChangedNotify_descriptor_,
      ChatGroupsChangedNotify::default_instance_,
      ChatGroupsChangedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatGroupsChangedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatGroupsChangedNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatGroupsChangedNotify, _is_default_instance_));
  LoadHistoryReq_descriptor_ = file->message_type(22);
  static const int LoadHistoryReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryReq, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryReq, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryReq, load_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryReq, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryReq, optimizations_),
  };
  LoadHistoryReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadHistoryReq_descriptor_,
      LoadHistoryReq::default_instance_,
      LoadHistoryReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadHistoryReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryReq, _is_default_instance_));
  LoadHistoryRsp_descriptor_ = file->message_type(23);
  static const int LoadHistoryRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryRsp, history_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryRsp, users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryRsp, user_peers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryRsp, groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryRsp, group_peers_),
  };
  LoadHistoryRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadHistoryRsp_descriptor_,
      LoadHistoryRsp::default_instance_,
      LoadHistoryRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadHistoryRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadHistoryRsp, _is_default_instance_));
  LoadDialogsReq_descriptor_ = file->message_type(24);
  static const int LoadDialogsReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, min_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, optimizations_),
  };
  LoadDialogsReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadDialogsReq_descriptor_,
      LoadDialogsReq::default_instance_,
      LoadDialogsReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadDialogsReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsReq, _is_default_instance_));
  LoadDialogsRsp_descriptor_ = file->message_type(25);
  static const int LoadDialogsRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, dialogs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, user_peers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, group_peers_),
  };
  LoadDialogsRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadDialogsRsp_descriptor_,
      LoadDialogsRsp::default_instance_,
      LoadDialogsRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadDialogsRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadDialogsRsp, _is_default_instance_));
  LoadArchivedReq_descriptor_ = file->message_type(26);
  static const int LoadArchivedReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedReq, next_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedReq, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedReq, optimizations_),
  };
  LoadArchivedReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadArchivedReq_descriptor_,
      LoadArchivedReq::default_instance_,
      LoadArchivedReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadArchivedReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedReq, _is_default_instance_));
  LoadArchivedRsp_descriptor_ = file->message_type(27);
  static const int LoadArchivedRsp_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedRsp, groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedRsp, users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedRsp, dialogs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedRsp, user_peers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedRsp, group_peers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedRsp, next_offset_),
  };
  LoadArchivedRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadArchivedRsp_descriptor_,
      LoadArchivedRsp::default_instance_,
      LoadArchivedRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadArchivedRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadArchivedRsp, _is_default_instance_));
  LoadGroupedDialogsReq_descriptor_ = file->message_type(28);
  static const int LoadGroupedDialogsReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsReq, optimizations_),
  };
  LoadGroupedDialogsReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadGroupedDialogsReq_descriptor_,
      LoadGroupedDialogsReq::default_instance_,
      LoadGroupedDialogsReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadGroupedDialogsReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsReq, _is_default_instance_));
  LoadGroupedDialogsRsp_descriptor_ = file->message_type(29);
  static const int LoadGroupedDialogsRsp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, dialogs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, users_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, groups_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, show_archived_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, show_invite_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, user_peers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, group_peers_),
  };
  LoadGroupedDialogsRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadGroupedDialogsRsp_descriptor_,
      LoadGroupedDialogsRsp::default_instance_,
      LoadGroupedDialogsRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadGroupedDialogsRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadGroupedDialogsRsp, _is_default_instance_));
  DialogsOrderRsp_descriptor_ = file->message_type(30);
  static const int DialogsOrderRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DialogsOrderRsp, seq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DialogsOrderRsp, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DialogsOrderRsp, groups_),
  };
  DialogsOrderRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DialogsOrderRsp_descriptor_,
      DialogsOrderRsp::default_instance_,
      DialogsOrderRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(DialogsOrderRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DialogsOrderRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DialogsOrderRsp, _is_default_instance_));
  HideDialogReq_descriptor_ = file->message_type(31);
  static const int HideDialogReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HideDialogReq, peer_),
  };
  HideDialogReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HideDialogReq_descriptor_,
      HideDialogReq::default_instance_,
      HideDialogReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(HideDialogReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HideDialogReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HideDialogReq, _is_default_instance_));
  ShowDialogReq_descriptor_ = file->message_type(32);
  static const int ShowDialogReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowDialogReq, peer_),
  };
  ShowDialogReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShowDialogReq_descriptor_,
      ShowDialogReq::default_instance_,
      ShowDialogReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShowDialogReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowDialogReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowDialogReq, _is_default_instance_));
  FavouriteDialogReq_descriptor_ = file->message_type(33);
  static const int FavouriteDialogReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FavouriteDialogReq, peer_),
  };
  FavouriteDialogReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FavouriteDialogReq_descriptor_,
      FavouriteDialogReq::default_instance_,
      FavouriteDialogReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(FavouriteDialogReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FavouriteDialogReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FavouriteDialogReq, _is_default_instance_));
  UnfavouriteDialogReq_descriptor_ = file->message_type(34);
  static const int UnfavouriteDialogReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfavouriteDialogReq, peer_),
  };
  UnfavouriteDialogReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnfavouriteDialogReq_descriptor_,
      UnfavouriteDialogReq::default_instance_,
      UnfavouriteDialogReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnfavouriteDialogReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfavouriteDialogReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfavouriteDialogReq, _is_default_instance_));
  NotifyDialogOpenedReq_descriptor_ = file->message_type(35);
  static const int NotifyDialogOpenedReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyDialogOpenedReq, peer_),
  };
  NotifyDialogOpenedReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyDialogOpenedReq_descriptor_,
      NotifyDialogOpenedReq::default_instance_,
      NotifyDialogOpenedReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(NotifyDialogOpenedReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyDialogOpenedReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyDialogOpenedReq, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messaging_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendMessageReq_descriptor_, &SendMessageReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateMessageReq_descriptor_, &UpdateMessageReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageReceivedReq_descriptor_, &MessageReceivedReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageReadReq_descriptor_, &MessageReadReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteMessageReq_descriptor_, &DeleteMessageReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClearChatReq_descriptor_, &ClearChatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DeleteChatReq_descriptor_, &DeleteChatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ArchiveChatReq_descriptor_, &ArchiveChatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageSetReactionReq_descriptor_, &MessageSetReactionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageNotify_descriptor_, &MessageNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageContentChangedNotify_descriptor_, &MessageContentChangedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageDateChangedNotify_descriptor_, &MessageDateChangedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageSentNotify_descriptor_, &MessageSentNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageReceivedNotify_descriptor_, &MessageReceivedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageReadNotify_descriptor_, &MessageReadNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageReadByMeNotify_descriptor_, &MessageReadByMeNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageDeleteNotify_descriptor_, &MessageDeleteNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatClearNotify_descriptor_, &ChatClearNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatDeleteNotify_descriptor_, &ChatDeleteNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatArchiveNotify_descriptor_, &ChatArchiveNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatDropCacheNotify_descriptor_, &ChatDropCacheNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatGroupsChangedNotify_descriptor_, &ChatGroupsChangedNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadHistoryReq_descriptor_, &LoadHistoryReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadHistoryRsp_descriptor_, &LoadHistoryRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadDialogsReq_descriptor_, &LoadDialogsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadDialogsRsp_descriptor_, &LoadDialogsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadArchivedReq_descriptor_, &LoadArchivedReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadArchivedRsp_descriptor_, &LoadArchivedRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadGroupedDialogsReq_descriptor_, &LoadGroupedDialogsReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadGroupedDialogsRsp_descriptor_, &LoadGroupedDialogsRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DialogsOrderRsp_descriptor_, &DialogsOrderRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HideDialogReq_descriptor_, &HideDialogReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShowDialogReq_descriptor_, &ShowDialogReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FavouriteDialogReq_descriptor_, &FavouriteDialogReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnfavouriteDialogReq_descriptor_, &UnfavouriteDialogReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyDialogOpenedReq_descriptor_, &NotifyDialogOpenedReq::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messaging_2eproto() {
  delete SendMessageReq::default_instance_;
  delete SendMessageReq_reflection_;
  delete UpdateMessageReq::default_instance_;
  delete UpdateMessageReq_reflection_;
  delete MessageReceivedReq::default_instance_;
  delete MessageReceivedReq_reflection_;
  delete MessageReadReq::default_instance_;
  delete MessageReadReq_reflection_;
  delete DeleteMessageReq::default_instance_;
  delete DeleteMessageReq_reflection_;
  delete ClearChatReq::default_instance_;
  delete ClearChatReq_reflection_;
  delete DeleteChatReq::default_instance_;
  delete DeleteChatReq_reflection_;
  delete ArchiveChatReq::default_instance_;
  delete ArchiveChatReq_reflection_;
  delete MessageSetReactionReq::default_instance_;
  delete MessageSetReactionReq_reflection_;
  delete MessageNotify::default_instance_;
  delete MessageNotify_reflection_;
  delete MessageContentChangedNotify::default_instance_;
  delete MessageContentChangedNotify_reflection_;
  delete MessageDateChangedNotify::default_instance_;
  delete MessageDateChangedNotify_reflection_;
  delete MessageSentNotify::default_instance_;
  delete MessageSentNotify_reflection_;
  delete MessageReceivedNotify::default_instance_;
  delete MessageReceivedNotify_reflection_;
  delete MessageReadNotify::default_instance_;
  delete MessageReadNotify_reflection_;
  delete MessageReadByMeNotify::default_instance_;
  delete MessageReadByMeNotify_reflection_;
  delete MessageDeleteNotify::default_instance_;
  delete MessageDeleteNotify_reflection_;
  delete ChatClearNotify::default_instance_;
  delete ChatClearNotify_reflection_;
  delete ChatDeleteNotify::default_instance_;
  delete ChatDeleteNotify_reflection_;
  delete ChatArchiveNotify::default_instance_;
  delete ChatArchiveNotify_reflection_;
  delete ChatDropCacheNotify::default_instance_;
  delete ChatDropCacheNotify_reflection_;
  delete ChatGroupsChangedNotify::default_instance_;
  delete ChatGroupsChangedNotify_reflection_;
  delete LoadHistoryReq::default_instance_;
  delete LoadHistoryReq_reflection_;
  delete LoadHistoryRsp::default_instance_;
  delete LoadHistoryRsp_reflection_;
  delete LoadDialogsReq::default_instance_;
  delete LoadDialogsReq_reflection_;
  delete LoadDialogsRsp::default_instance_;
  delete LoadDialogsRsp_reflection_;
  delete LoadArchivedReq::default_instance_;
  delete LoadArchivedReq_reflection_;
  delete LoadArchivedRsp::default_instance_;
  delete LoadArchivedRsp_reflection_;
  delete LoadGroupedDialogsReq::default_instance_;
  delete LoadGroupedDialogsReq_reflection_;
  delete LoadGroupedDialogsRsp::default_instance_;
  delete LoadGroupedDialogsRsp_reflection_;
  delete DialogsOrderRsp::default_instance_;
  delete DialogsOrderRsp_reflection_;
  delete HideDialogReq::default_instance_;
  delete HideDialogReq_reflection_;
  delete ShowDialogReq::default_instance_;
  delete ShowDialogReq_reflection_;
  delete FavouriteDialogReq::default_instance_;
  delete FavouriteDialogReq_reflection_;
  delete UnfavouriteDialogReq::default_instance_;
  delete UnfavouriteDialogReq_reflection_;
  delete NotifyDialogOpenedReq::default_instance_;
  delete NotifyDialogOpenedReq_reflection_;
}

void protobuf_AddDesc_messaging_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_messaging_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::zproto::protobuf_AddDesc_peers_2eproto();
  ::zproto::protobuf_AddDesc_users_2eproto();
  ::zproto::protobuf_AddDesc_group_5fbase_2eproto();
  ::zproto::protobuf_AddDesc_sequence_5fbase_2eproto();
  ::zproto::protobuf_AddDesc_messaging_5fbase_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017messaging.proto\022\006zproto\032\013peers.proto\032\013"
    "users.proto\032\020group_base.proto\032\023sequence_"
    "base.proto\032\024messaging_base.proto\"\177\n\016Send"
    "MessageReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPee"
    "r\022\013\n\003rid\030\002 \001(\003\022\'\n\007message\030\003 \001(\0132\026.zproto"
    ".InstantMessage\022\030\n\020passthrough_data\030\004 \001("
    "\014\"o\n\020UpdateMessageReq\022\035\n\004peer\030\001 \001(\0132\017.zp"
    "roto.OutPeer\022\013\n\003rid\030\002 \001(\003\022/\n\017updated_mes"
    "sage\030\003 \001(\0132\026.zproto.InstantMessage\"A\n\022Me"
    "ssageReceivedReq\022\035\n\004peer\030\001 \001(\0132\017.zproto."
    "OutPeer\022\014\n\004date\030\003 \001(\003\"=\n\016MessageReadReq\022"
    "\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\022\014\n\004date\030\003"
    " \001(\003\"\?\n\020DeleteMessageReq\022\035\n\004peer\030\001 \001(\0132\017"
    ".zproto.OutPeer\022\014\n\004rids\030\003 \003(\003\"-\n\014ClearCh"
    "atReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\".\n\r"
    "DeleteChatReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.Out"
    "Peer\"/\n\016ArchiveChatReq\022\035\n\004peer\030\001 \001(\0132\017.z"
    "proto.OutPeer\"Q\n\025MessageSetReactionReq\022\035"
    "\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\022\013\n\003rid\030\002 \001"
    "(\003\022\014\n\004code\030\003 \001(\t\"\203\001\n\rMessageNotify\022\032\n\004pe"
    "er\030\001 \001(\0132\014.zproto.Peer\022\022\n\nsender_uid\030\002 \001"
    "(\t\022\014\n\004date\030\003 \001(\003\022\013\n\003rid\030\004 \001(\003\022\'\n\007message"
    "\030\005 \001(\0132\026.zproto.InstantMessage\"o\n\033Messag"
    "eContentChangedNotify\022\032\n\004peer\030\001 \001(\0132\014.zp"
    "roto.Peer\022\013\n\003rid\030\002 \001(\003\022\'\n\007message\030\003 \001(\0132"
    "\026.zproto.InstantMessage\"Q\n\030MessageDateCh"
    "angedNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\022"
    "\013\n\003rid\030\002 \001(\003\022\014\n\004date\030\003 \001(\003\"J\n\021MessageSen"
    "tNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\022\013\n\003r"
    "id\030\002 \001(\003\022\014\n\004date\030\003 \001(\003\"^\n\025MessageReceive"
    "dNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\022\022\n\ns"
    "tart_date\030\002 \001(\003\022\025\n\rreceived_date\030\003 \001(\003\"V"
    "\n\021MessageReadNotify\022\032\n\004peer\030\001 \001(\0132\014.zpro"
    "to.Peer\022\022\n\nstart_date\030\002 \001(\003\022\021\n\tread_date"
    "\030\003 \001(\003\"_\n\025MessageReadByMeNotify\022\032\n\004peer\030"
    "\001 \001(\0132\014.zproto.Peer\022\022\n\nstart_date\030\002 \001(\003\022"
    "\026\n\016unread_counter\030\003 \001(\005\"\?\n\023MessageDelete"
    "Notify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\022\014\n\004ri"
    "ds\030\002 \003(\003\"-\n\017ChatClearNotify\022\032\n\004peer\030\001 \001("
    "\0132\014.zproto.Peer\".\n\020ChatDeleteNotify\022\032\n\004p"
    "eer\030\001 \001(\0132\014.zproto.Peer\"/\n\021ChatArchiveNo"
    "tify\022\032\n\004peer\030\001 \001(\0132\014.zproto.Peer\"1\n\023Chat"
    "DropCacheNotify\022\032\n\004peer\030\001 \001(\0132\014.zproto.P"
    "eer\"\?\n\027ChatGroupsChangedNotify\022$\n\007dialog"
    "s\030\001 \003(\0132\023.zproto.DialogGroup\"\250\001\n\016LoadHis"
    "toryReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutPeer\022\014"
    "\n\004date\030\003 \001(\003\022\'\n\tload_mode\030\005 \001(\0162\024.zproto"
    ".ListLoadMode\022\r\n\005limit\030\004 \001(\005\0221\n\roptimiza"
    "tions\030\006 \003(\0162\032.zproto.UpdateOptimization\""
    "\313\001\n\016LoadHistoryRsp\022)\n\007history\030\001 \003(\0132\030.zp"
    "roto.MessageContainer\022\033\n\005users\030\002 \003(\0132\014.z"
    "proto.User\022\'\n\nuser_peers\030\004 \003(\0132\023.zproto."
    "UserOutPeer\022\035\n\006groups\030\005 \003(\0132\r.zproto.Gro"
    "up\022)\n\013group_peers\030\006 \003(\0132\024.zproto.GroupOu"
    "tPeer\"d\n\016LoadDialogsReq\022\020\n\010min_date\030\001 \001("
    "\003\022\r\n\005limit\030\002 \001(\005\0221\n\roptimizations\030\003 \003(\0162"
    "\032.zproto.UpdateOptimization\"\301\001\n\016LoadDial"
    "ogsRsp\022\035\n\006groups\030\001 \003(\0132\r.zproto.Group\022\033\n"
    "\005users\030\002 \003(\0132\014.zproto.User\022\037\n\007dialogs\030\003 "
    "\003(\0132\016.zproto.Dialog\022\'\n\nuser_peers\030\004 \003(\0132"
    "\023.zproto.UserOutPeer\022)\n\013group_peers\030\005 \003("
    "\0132\024.zproto.GroupOutPeer\"h\n\017LoadArchivedR"
    "eq\022\023\n\013next_offset\030\001 \001(\014\022\r\n\005limit\030\002 \001(\005\0221"
    "\n\roptimizations\030\003 \003(\0162\032.zproto.UpdateOpt"
    "imization\"\327\001\n\017LoadArchivedRsp\022\035\n\006groups\030"
    "\001 \003(\0132\r.zproto.Group\022\033\n\005users\030\002 \003(\0132\014.zp"
    "roto.User\022\037\n\007dialogs\030\003 \003(\0132\016.zproto.Dial"
    "og\022\'\n\nuser_peers\030\005 \003(\0132\023.zproto.UserOutP"
    "eer\022)\n\013group_peers\030\006 \003(\0132\024.zproto.GroupO"
    "utPeer\022\023\n\013next_offset\030\004 \001(\014\"J\n\025LoadGroup"
    "edDialogsReq\0221\n\roptimizations\030\001 \003(\0162\032.zp"
    "roto.UpdateOptimization\"\371\001\n\025LoadGroupedD"
    "ialogsRsp\022$\n\007dialogs\030\001 \003(\0132\023.zproto.Dial"
    "ogGroup\022\033\n\005users\030\002 \003(\0132\014.zproto.User\022\035\n\006"
    "groups\030\003 \003(\0132\r.zproto.Group\022\025\n\rshow_arch"
    "ived\030\004 \001(\010\022\023\n\013show_invite\030\005 \001(\010\022\'\n\nuser_"
    "peers\030\006 \003(\0132\023.zproto.UserOutPeer\022)\n\013grou"
    "p_peers\030\007 \003(\0132\024.zproto.GroupOutPeer\"R\n\017D"
    "ialogsOrderRsp\022\013\n\003seq\030\001 \001(\005\022\r\n\005state\030\002 \001"
    "(\014\022#\n\006groups\030\003 \003(\0132\023.zproto.DialogGroup\""
    ".\n\rHideDialogReq\022\035\n\004peer\030\001 \001(\0132\017.zproto."
    "OutPeer\".\n\rShowDialogReq\022\035\n\004peer\030\001 \001(\0132\017"
    ".zproto.OutPeer\"3\n\022FavouriteDialogReq\022\035\n"
    "\004peer\030\001 \001(\0132\017.zproto.OutPeer\"5\n\024Unfavour"
    "iteDialogReq\022\035\n\004peer\030\001 \001(\0132\017.zproto.OutP"
    "eer\"6\n\025NotifyDialogOpenedReq\022\035\n\004peer\030\001 \001"
    "(\0132\017.zproto.OutPeerB,\n\027com.zchat.engine."
    "zprotoB\017ZProtoMessagingH\002b\006proto3", 3513);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messaging.proto", &protobuf_RegisterTypes);
  SendMessageReq::default_instance_ = new SendMessageReq();
  UpdateMessageReq::default_instance_ = new UpdateMessageReq();
  MessageReceivedReq::default_instance_ = new MessageReceivedReq();
  MessageReadReq::default_instance_ = new MessageReadReq();
  DeleteMessageReq::default_instance_ = new DeleteMessageReq();
  ClearChatReq::default_instance_ = new ClearChatReq();
  DeleteChatReq::default_instance_ = new DeleteChatReq();
  ArchiveChatReq::default_instance_ = new ArchiveChatReq();
  MessageSetReactionReq::default_instance_ = new MessageSetReactionReq();
  MessageNotify::default_instance_ = new MessageNotify();
  MessageContentChangedNotify::default_instance_ = new MessageContentChangedNotify();
  MessageDateChangedNotify::default_instance_ = new MessageDateChangedNotify();
  MessageSentNotify::default_instance_ = new MessageSentNotify();
  MessageReceivedNotify::default_instance_ = new MessageReceivedNotify();
  MessageReadNotify::default_instance_ = new MessageReadNotify();
  MessageReadByMeNotify::default_instance_ = new MessageReadByMeNotify();
  MessageDeleteNotify::default_instance_ = new MessageDeleteNotify();
  ChatClearNotify::default_instance_ = new ChatClearNotify();
  ChatDeleteNotify::default_instance_ = new ChatDeleteNotify();
  ChatArchiveNotify::default_instance_ = new ChatArchiveNotify();
  ChatDropCacheNotify::default_instance_ = new ChatDropCacheNotify();
  ChatGroupsChangedNotify::default_instance_ = new ChatGroupsChangedNotify();
  LoadHistoryReq::default_instance_ = new LoadHistoryReq();
  LoadHistoryRsp::default_instance_ = new LoadHistoryRsp();
  LoadDialogsReq::default_instance_ = new LoadDialogsReq();
  LoadDialogsRsp::default_instance_ = new LoadDialogsRsp();
  LoadArchivedReq::default_instance_ = new LoadArchivedReq();
  LoadArchivedRsp::default_instance_ = new LoadArchivedRsp();
  LoadGroupedDialogsReq::default_instance_ = new LoadGroupedDialogsReq();
  LoadGroupedDialogsRsp::default_instance_ = new LoadGroupedDialogsRsp();
  DialogsOrderRsp::default_instance_ = new DialogsOrderRsp();
  HideDialogReq::default_instance_ = new HideDialogReq();
  ShowDialogReq::default_instance_ = new ShowDialogReq();
  FavouriteDialogReq::default_instance_ = new FavouriteDialogReq();
  UnfavouriteDialogReq::default_instance_ = new UnfavouriteDialogReq();
  NotifyDialogOpenedReq::default_instance_ = new NotifyDialogOpenedReq();
  SendMessageReq::default_instance_->InitAsDefaultInstance();
  UpdateMessageReq::default_instance_->InitAsDefaultInstance();
  MessageReceivedReq::default_instance_->InitAsDefaultInstance();
  MessageReadReq::default_instance_->InitAsDefaultInstance();
  DeleteMessageReq::default_instance_->InitAsDefaultInstance();
  ClearChatReq::default_instance_->InitAsDefaultInstance();
  DeleteChatReq::default_instance_->InitAsDefaultInstance();
  ArchiveChatReq::default_instance_->InitAsDefaultInstance();
  MessageSetReactionReq::default_instance_->InitAsDefaultInstance();
  MessageNotify::default_instance_->InitAsDefaultInstance();
  MessageContentChangedNotify::default_instance_->InitAsDefaultInstance();
  MessageDateChangedNotify::default_instance_->InitAsDefaultInstance();
  MessageSentNotify::default_instance_->InitAsDefaultInstance();
  MessageReceivedNotify::default_instance_->InitAsDefaultInstance();
  MessageReadNotify::default_instance_->InitAsDefaultInstance();
  MessageReadByMeNotify::default_instance_->InitAsDefaultInstance();
  MessageDeleteNotify::default_instance_->InitAsDefaultInstance();
  ChatClearNotify::default_instance_->InitAsDefaultInstance();
  ChatDeleteNotify::default_instance_->InitAsDefaultInstance();
  ChatArchiveNotify::default_instance_->InitAsDefaultInstance();
  ChatDropCacheNotify::default_instance_->InitAsDefaultInstance();
  ChatGroupsChangedNotify::default_instance_->InitAsDefaultInstance();
  LoadHistoryReq::default_instance_->InitAsDefaultInstance();
  LoadHistoryRsp::default_instance_->InitAsDefaultInstance();
  LoadDialogsReq::default_instance_->InitAsDefaultInstance();
  LoadDialogsRsp::default_instance_->InitAsDefaultInstance();
  LoadArchivedReq::default_instance_->InitAsDefaultInstance();
  LoadArchivedRsp::default_instance_->InitAsDefaultInstance();
  LoadGroupedDialogsReq::default_instance_->InitAsDefaultInstance();
  LoadGroupedDialogsRsp::default_instance_->InitAsDefaultInstance();
  DialogsOrderRsp::default_instance_->InitAsDefaultInstance();
  HideDialogReq::default_instance_->InitAsDefaultInstance();
  ShowDialogReq::default_instance_->InitAsDefaultInstance();
  FavouriteDialogReq::default_instance_->InitAsDefaultInstance();
  UnfavouriteDialogReq::default_instance_->InitAsDefaultInstance();
  NotifyDialogOpenedReq::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messaging_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messaging_2eproto {
  StaticDescriptorInitializer_messaging_2eproto() {
    protobuf_AddDesc_messaging_2eproto();
  }
} static_descriptor_initializer_messaging_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendMessageReq::kPeerFieldNumber;
const int SendMessageReq::kRidFieldNumber;
const int SendMessageReq::kMessageFieldNumber;
const int SendMessageReq::kPassthroughDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendMessageReq::SendMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.SendMessageReq)
}

void SendMessageReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
  message_ = const_cast< ::zproto::InstantMessage*>(&::zproto::InstantMessage::default_instance());
}

SendMessageReq::SendMessageReq(const SendMessageReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.SendMessageReq)
}

void SendMessageReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  peer_ = NULL;
  rid_ = GOOGLE_LONGLONG(0);
  message_ = NULL;
  passthrough_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendMessageReq::~SendMessageReq() {
  // @@protoc_insertion_point(destructor:zproto.SendMessageReq)
  SharedDtor();
}

void SendMessageReq::SharedDtor() {
  passthrough_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete peer_;
    delete message_;
  }
}

void SendMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendMessageReq_descriptor_;
}

const SendMessageReq& SendMessageReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

SendMessageReq* SendMessageReq::default_instance_ = NULL;

SendMessageReq* SendMessageReq::New(::google::protobuf::Arena* arena) const {
  SendMessageReq* n = new SendMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendMessageReq::Swap(SendMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendMessageReq::InternalSwap(SendMessageReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata SendMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendMessageReq_descriptor_;
  metadata.reflection = SendMessageReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendMessageReq

// optional .zproto.OutPeer peer = 1;
bool SendMessageReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void SendMessageReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& SendMessageReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.SendMessageReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* SendMessageReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.SendMessageReq.peer)
  return peer_;
}
::zproto::OutPeer* SendMessageReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.SendMessageReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void SendMessageReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.SendMessageReq.peer)
}

// optional int64 rid = 2;
void SendMessageReq::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 SendMessageReq::rid() const {
  // @@protoc_insertion_point(field_get:zproto.SendMessageReq.rid)
  return rid_;
}
 void SendMessageReq::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:zproto.SendMessageReq.rid)
}

// optional .zproto.InstantMessage message = 3;
bool SendMessageReq::has_message() const {
  return !_is_default_instance_ && message_ != NULL;
}
void SendMessageReq::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
const ::zproto::InstantMessage& SendMessageReq::message() const {
  // @@protoc_insertion_point(field_get:zproto.SendMessageReq.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
::zproto::InstantMessage* SendMessageReq::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::zproto::InstantMessage;
  }
  // @@protoc_insertion_point(field_mutable:zproto.SendMessageReq.message)
  return message_;
}
::zproto::InstantMessage* SendMessageReq::release_message() {
  // @@protoc_insertion_point(field_release:zproto.SendMessageReq.message)
  
  ::zproto::InstantMessage* temp = message_;
  message_ = NULL;
  return temp;
}
void SendMessageReq::set_allocated_message(::zproto::InstantMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.SendMessageReq.message)
}

// optional bytes passthrough_data = 4;
void SendMessageReq::clear_passthrough_data() {
  passthrough_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SendMessageReq::passthrough_data() const {
  // @@protoc_insertion_point(field_get:zproto.SendMessageReq.passthrough_data)
  return passthrough_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMessageReq::set_passthrough_data(const ::std::string& value) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.SendMessageReq.passthrough_data)
}
 void SendMessageReq::set_passthrough_data(const char* value) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.SendMessageReq.passthrough_data)
}
 void SendMessageReq::set_passthrough_data(const void* value, size_t size) {
  
  passthrough_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.SendMessageReq.passthrough_data)
}
 ::std::string* SendMessageReq::mutable_passthrough_data() {
  
  // @@protoc_insertion_point(field_mutable:zproto.SendMessageReq.passthrough_data)
  return passthrough_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SendMessageReq::release_passthrough_data() {
  // @@protoc_insertion_point(field_release:zproto.SendMessageReq.passthrough_data)
  
  return passthrough_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SendMessageReq::set_allocated_passthrough_data(::std::string* passthrough_data) {
  if (passthrough_data != NULL) {
    
  } else {
    
  }
  passthrough_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passthrough_data);
  // @@protoc_insertion_point(field_set_allocated:zproto.SendMessageReq.passthrough_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateMessageReq::kPeerFieldNumber;
const int UpdateMessageReq::kRidFieldNumber;
const int UpdateMessageReq::kUpdatedMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateMessageReq::UpdateMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UpdateMessageReq)
}

void UpdateMessageReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
  updated_message_ = const_cast< ::zproto::InstantMessage*>(&::zproto::InstantMessage::default_instance());
}

UpdateMessageReq::UpdateMessageReq(const UpdateMessageReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UpdateMessageReq)
}

void UpdateMessageReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  rid_ = GOOGLE_LONGLONG(0);
  updated_message_ = NULL;
}

UpdateMessageReq::~UpdateMessageReq() {
  // @@protoc_insertion_point(destructor:zproto.UpdateMessageReq)
  SharedDtor();
}

void UpdateMessageReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
    delete updated_message_;
  }
}

void UpdateMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateMessageReq_descriptor_;
}

const UpdateMessageReq& UpdateMessageReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

UpdateMessageReq* UpdateMessageReq::default_instance_ = NULL;

UpdateMessageReq* UpdateMessageReq::New(::google::protobuf::Arena* arena) const {
  UpdateMessageReq* n = new UpdateMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateMessageReq::Swap(UpdateMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateMessageReq::InternalSwap(UpdateMessageReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UpdateMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateMessageReq_descriptor_;
  metadata.reflection = UpdateMessageReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateMessageReq

// optional .zproto.OutPeer peer = 1;
bool UpdateMessageReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void UpdateMessageReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& UpdateMessageReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.UpdateMessageReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* UpdateMessageReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.UpdateMessageReq.peer)
  return peer_;
}
::zproto::OutPeer* UpdateMessageReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.UpdateMessageReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void UpdateMessageReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.UpdateMessageReq.peer)
}

// optional int64 rid = 2;
void UpdateMessageReq::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UpdateMessageReq::rid() const {
  // @@protoc_insertion_point(field_get:zproto.UpdateMessageReq.rid)
  return rid_;
}
 void UpdateMessageReq::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:zproto.UpdateMessageReq.rid)
}

// optional .zproto.InstantMessage updated_message = 3;
bool UpdateMessageReq::has_updated_message() const {
  return !_is_default_instance_ && updated_message_ != NULL;
}
void UpdateMessageReq::clear_updated_message() {
  if (GetArenaNoVirtual() == NULL && updated_message_ != NULL) delete updated_message_;
  updated_message_ = NULL;
}
const ::zproto::InstantMessage& UpdateMessageReq::updated_message() const {
  // @@protoc_insertion_point(field_get:zproto.UpdateMessageReq.updated_message)
  return updated_message_ != NULL ? *updated_message_ : *default_instance_->updated_message_;
}
::zproto::InstantMessage* UpdateMessageReq::mutable_updated_message() {
  
  if (updated_message_ == NULL) {
    updated_message_ = new ::zproto::InstantMessage;
  }
  // @@protoc_insertion_point(field_mutable:zproto.UpdateMessageReq.updated_message)
  return updated_message_;
}
::zproto::InstantMessage* UpdateMessageReq::release_updated_message() {
  // @@protoc_insertion_point(field_release:zproto.UpdateMessageReq.updated_message)
  
  ::zproto::InstantMessage* temp = updated_message_;
  updated_message_ = NULL;
  return temp;
}
void UpdateMessageReq::set_allocated_updated_message(::zproto::InstantMessage* updated_message) {
  delete updated_message_;
  updated_message_ = updated_message;
  if (updated_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.UpdateMessageReq.updated_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReceivedReq::kPeerFieldNumber;
const int MessageReceivedReq::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReceivedReq::MessageReceivedReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReceivedReq)
}

void MessageReceivedReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

MessageReceivedReq::MessageReceivedReq(const MessageReceivedReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReceivedReq)
}

void MessageReceivedReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  date_ = GOOGLE_LONGLONG(0);
}

MessageReceivedReq::~MessageReceivedReq() {
  // @@protoc_insertion_point(destructor:zproto.MessageReceivedReq)
  SharedDtor();
}

void MessageReceivedReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageReceivedReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReceivedReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageReceivedReq_descriptor_;
}

const MessageReceivedReq& MessageReceivedReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageReceivedReq* MessageReceivedReq::default_instance_ = NULL;

MessageReceivedReq* MessageReceivedReq::New(::google::protobuf::Arena* arena) const {
  MessageReceivedReq* n = new MessageReceivedReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReceivedReq::Swap(MessageReceivedReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReceivedReq::InternalSwap(MessageReceivedReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReceivedReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageReceivedReq_descriptor_;
  metadata.reflection = MessageReceivedReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageReceivedReq

// optional .zproto.OutPeer peer = 1;
bool MessageReceivedReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageReceivedReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& MessageReceivedReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReceivedReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* MessageReceivedReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageReceivedReq.peer)
  return peer_;
}
::zproto::OutPeer* MessageReceivedReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageReceivedReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageReceivedReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageReceivedReq.peer)
}

// optional int64 date = 3;
void MessageReceivedReq::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageReceivedReq::date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReceivedReq.date)
  return date_;
}
 void MessageReceivedReq::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReceivedReq.date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReadReq::kPeerFieldNumber;
const int MessageReadReq::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReadReq::MessageReadReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReadReq)
}

void MessageReadReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

MessageReadReq::MessageReadReq(const MessageReadReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReadReq)
}

void MessageReadReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  date_ = GOOGLE_LONGLONG(0);
}

MessageReadReq::~MessageReadReq() {
  // @@protoc_insertion_point(destructor:zproto.MessageReadReq)
  SharedDtor();
}

void MessageReadReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageReadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReadReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageReadReq_descriptor_;
}

const MessageReadReq& MessageReadReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageReadReq* MessageReadReq::default_instance_ = NULL;

MessageReadReq* MessageReadReq::New(::google::protobuf::Arena* arena) const {
  MessageReadReq* n = new MessageReadReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReadReq::Swap(MessageReadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReadReq::InternalSwap(MessageReadReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReadReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageReadReq_descriptor_;
  metadata.reflection = MessageReadReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageReadReq

// optional .zproto.OutPeer peer = 1;
bool MessageReadReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageReadReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& MessageReadReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* MessageReadReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageReadReq.peer)
  return peer_;
}
::zproto::OutPeer* MessageReadReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageReadReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageReadReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageReadReq.peer)
}

// optional int64 date = 3;
void MessageReadReq::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageReadReq::date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadReq.date)
  return date_;
}
 void MessageReadReq::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReadReq.date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteMessageReq::kPeerFieldNumber;
const int DeleteMessageReq::kRidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteMessageReq::DeleteMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DeleteMessageReq)
}

void DeleteMessageReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

DeleteMessageReq::DeleteMessageReq(const DeleteMessageReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.DeleteMessageReq)
}

void DeleteMessageReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

DeleteMessageReq::~DeleteMessageReq() {
  // @@protoc_insertion_point(destructor:zproto.DeleteMessageReq)
  SharedDtor();
}

void DeleteMessageReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void DeleteMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteMessageReq_descriptor_;
}

const DeleteMessageReq& DeleteMessageReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

DeleteMessageReq* DeleteMessageReq::default_instance_ = NULL;

DeleteMessageReq* DeleteMessageReq::New(::google::protobuf::Arena* arena) const {
  DeleteMessageReq* n = new DeleteMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteMessageReq::Swap(DeleteMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteMessageReq::InternalSwap(DeleteMessageReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DeleteMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteMessageReq_descriptor_;
  metadata.reflection = DeleteMessageReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteMessageReq

// optional .zproto.OutPeer peer = 1;
bool DeleteMessageReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void DeleteMessageReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& DeleteMessageReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.DeleteMessageReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* DeleteMessageReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.DeleteMessageReq.peer)
  return peer_;
}
::zproto::OutPeer* DeleteMessageReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.DeleteMessageReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void DeleteMessageReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.DeleteMessageReq.peer)
}

// repeated int64 rids = 3;
int DeleteMessageReq::rids_size() const {
  return rids_.size();
}
void DeleteMessageReq::clear_rids() {
  rids_.Clear();
}
 ::google::protobuf::int64 DeleteMessageReq::rids(int index) const {
  // @@protoc_insertion_point(field_get:zproto.DeleteMessageReq.rids)
  return rids_.Get(index);
}
 void DeleteMessageReq::set_rids(int index, ::google::protobuf::int64 value) {
  rids_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.DeleteMessageReq.rids)
}
 void DeleteMessageReq::add_rids(::google::protobuf::int64 value) {
  rids_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.DeleteMessageReq.rids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DeleteMessageReq::rids() const {
  // @@protoc_insertion_point(field_list:zproto.DeleteMessageReq.rids)
  return rids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DeleteMessageReq::mutable_rids() {
  // @@protoc_insertion_point(field_mutable_list:zproto.DeleteMessageReq.rids)
  return &rids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearChatReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearChatReq::ClearChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ClearChatReq)
}

void ClearChatReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

ClearChatReq::ClearChatReq(const ClearChatReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ClearChatReq)
}

void ClearChatReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

ClearChatReq::~ClearChatReq() {
  // @@protoc_insertion_point(destructor:zproto.ClearChatReq)
  SharedDtor();
}

void ClearChatReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void ClearChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearChatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClearChatReq_descriptor_;
}

const ClearChatReq& ClearChatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

ClearChatReq* ClearChatReq::default_instance_ = NULL;

ClearChatReq* ClearChatReq::New(::google::protobuf::Arena* arena) const {
  ClearChatReq* n = new ClearChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClearChatReq::Swap(ClearChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearChatReq::InternalSwap(ClearChatReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ClearChatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClearChatReq_descriptor_;
  metadata.reflection = ClearChatReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClearChatReq

// optional .zproto.OutPeer peer = 1;
bool ClearChatReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void ClearChatReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& ClearChatReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.ClearChatReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* ClearChatReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.ClearChatReq.peer)
  return peer_;
}
::zproto::OutPeer* ClearChatReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.ClearChatReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ClearChatReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.ClearChatReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteChatReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteChatReq::DeleteChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DeleteChatReq)
}

void DeleteChatReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

DeleteChatReq::DeleteChatReq(const DeleteChatReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.DeleteChatReq)
}

void DeleteChatReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

DeleteChatReq::~DeleteChatReq() {
  // @@protoc_insertion_point(destructor:zproto.DeleteChatReq)
  SharedDtor();
}

void DeleteChatReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void DeleteChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteChatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteChatReq_descriptor_;
}

const DeleteChatReq& DeleteChatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

DeleteChatReq* DeleteChatReq::default_instance_ = NULL;

DeleteChatReq* DeleteChatReq::New(::google::protobuf::Arena* arena) const {
  DeleteChatReq* n = new DeleteChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteChatReq::Swap(DeleteChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteChatReq::InternalSwap(DeleteChatReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DeleteChatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteChatReq_descriptor_;
  metadata.reflection = DeleteChatReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteChatReq

// optional .zproto.OutPeer peer = 1;
bool DeleteChatReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void DeleteChatReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& DeleteChatReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.DeleteChatReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* DeleteChatReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.DeleteChatReq.peer)
  return peer_;
}
::zproto::OutPeer* DeleteChatReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.DeleteChatReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void DeleteChatReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.DeleteChatReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArchiveChatReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArchiveChatReq::ArchiveChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ArchiveChatReq)
}

void ArchiveChatReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

ArchiveChatReq::ArchiveChatReq(const ArchiveChatReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ArchiveChatReq)
}

void ArchiveChatReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

ArchiveChatReq::~ArchiveChatReq() {
  // @@protoc_insertion_point(destructor:zproto.ArchiveChatReq)
  SharedDtor();
}

void ArchiveChatReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void ArchiveChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArchiveChatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ArchiveChatReq_descriptor_;
}

const ArchiveChatReq& ArchiveChatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

ArchiveChatReq* ArchiveChatReq::default_instance_ = NULL;

ArchiveChatReq* ArchiveChatReq::New(::google::protobuf::Arena* arena) const {
  ArchiveChatReq* n = new ArchiveChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArchiveChatReq::Swap(ArchiveChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArchiveChatReq::InternalSwap(ArchiveChatReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ArchiveChatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ArchiveChatReq_descriptor_;
  metadata.reflection = ArchiveChatReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ArchiveChatReq

// optional .zproto.OutPeer peer = 1;
bool ArchiveChatReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void ArchiveChatReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& ArchiveChatReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.ArchiveChatReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* ArchiveChatReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.ArchiveChatReq.peer)
  return peer_;
}
::zproto::OutPeer* ArchiveChatReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.ArchiveChatReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ArchiveChatReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.ArchiveChatReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageSetReactionReq::kPeerFieldNumber;
const int MessageSetReactionReq::kRidFieldNumber;
const int MessageSetReactionReq::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageSetReactionReq::MessageSetReactionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageSetReactionReq)
}

void MessageSetReactionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

MessageSetReactionReq::MessageSetReactionReq(const MessageSetReactionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageSetReactionReq)
}

void MessageSetReactionReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  peer_ = NULL;
  rid_ = GOOGLE_LONGLONG(0);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessageSetReactionReq::~MessageSetReactionReq() {
  // @@protoc_insertion_point(destructor:zproto.MessageSetReactionReq)
  SharedDtor();
}

void MessageSetReactionReq::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageSetReactionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageSetReactionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageSetReactionReq_descriptor_;
}

const MessageSetReactionReq& MessageSetReactionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageSetReactionReq* MessageSetReactionReq::default_instance_ = NULL;

MessageSetReactionReq* MessageSetReactionReq::New(::google::protobuf::Arena* arena) const {
  MessageSetReactionReq* n = new MessageSetReactionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageSetReactionReq::Swap(MessageSetReactionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageSetReactionReq::InternalSwap(MessageSetReactionReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageSetReactionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageSetReactionReq_descriptor_;
  metadata.reflection = MessageSetReactionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageSetReactionReq

// optional .zproto.OutPeer peer = 1;
bool MessageSetReactionReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageSetReactionReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& MessageSetReactionReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageSetReactionReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* MessageSetReactionReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageSetReactionReq.peer)
  return peer_;
}
::zproto::OutPeer* MessageSetReactionReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageSetReactionReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageSetReactionReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageSetReactionReq.peer)
}

// optional int64 rid = 2;
void MessageSetReactionReq::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageSetReactionReq::rid() const {
  // @@protoc_insertion_point(field_get:zproto.MessageSetReactionReq.rid)
  return rid_;
}
 void MessageSetReactionReq::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageSetReactionReq.rid)
}

// optional string code = 3;
void MessageSetReactionReq::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageSetReactionReq::code() const {
  // @@protoc_insertion_point(field_get:zproto.MessageSetReactionReq.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageSetReactionReq::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.MessageSetReactionReq.code)
}
 void MessageSetReactionReq::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.MessageSetReactionReq.code)
}
 void MessageSetReactionReq::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.MessageSetReactionReq.code)
}
 ::std::string* MessageSetReactionReq::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:zproto.MessageSetReactionReq.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageSetReactionReq::release_code() {
  // @@protoc_insertion_point(field_release:zproto.MessageSetReactionReq.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageSetReactionReq::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageSetReactionReq.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageNotify::kPeerFieldNumber;
const int MessageNotify::kSenderUidFieldNumber;
const int MessageNotify::kDateFieldNumber;
const int MessageNotify::kRidFieldNumber;
const int MessageNotify::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageNotify::MessageNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageNotify)
}

void MessageNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
  message_ = const_cast< ::zproto::InstantMessage*>(&::zproto::InstantMessage::default_instance());
}

MessageNotify::MessageNotify(const MessageNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageNotify)
}

void MessageNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  peer_ = NULL;
  sender_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_ = GOOGLE_LONGLONG(0);
  rid_ = GOOGLE_LONGLONG(0);
  message_ = NULL;
}

MessageNotify::~MessageNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageNotify)
  SharedDtor();
}

void MessageNotify::SharedDtor() {
  sender_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete peer_;
    delete message_;
  }
}

void MessageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageNotify_descriptor_;
}

const MessageNotify& MessageNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageNotify* MessageNotify::default_instance_ = NULL;

MessageNotify* MessageNotify::New(::google::protobuf::Arena* arena) const {
  MessageNotify* n = new MessageNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageNotify::Swap(MessageNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageNotify::InternalSwap(MessageNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageNotify_descriptor_;
  metadata.reflection = MessageNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageNotify

// optional .zproto.Peer peer = 1;
bool MessageNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageNotify.peer)
  return peer_;
}
::zproto::Peer* MessageNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageNotify.peer)
}

// optional string sender_uid = 2;
void MessageNotify::clear_sender_uid() {
  sender_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageNotify::sender_uid() const {
  // @@protoc_insertion_point(field_get:zproto.MessageNotify.sender_uid)
  return sender_uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageNotify::set_sender_uid(const ::std::string& value) {
  
  sender_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.MessageNotify.sender_uid)
}
 void MessageNotify::set_sender_uid(const char* value) {
  
  sender_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.MessageNotify.sender_uid)
}
 void MessageNotify::set_sender_uid(const char* value, size_t size) {
  
  sender_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.MessageNotify.sender_uid)
}
 ::std::string* MessageNotify::mutable_sender_uid() {
  
  // @@protoc_insertion_point(field_mutable:zproto.MessageNotify.sender_uid)
  return sender_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageNotify::release_sender_uid() {
  // @@protoc_insertion_point(field_release:zproto.MessageNotify.sender_uid)
  
  return sender_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageNotify::set_allocated_sender_uid(::std::string* sender_uid) {
  if (sender_uid != NULL) {
    
  } else {
    
  }
  sender_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender_uid);
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageNotify.sender_uid)
}

// optional int64 date = 3;
void MessageNotify::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageNotify::date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageNotify.date)
  return date_;
}
 void MessageNotify::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageNotify.date)
}

// optional int64 rid = 4;
void MessageNotify::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageNotify::rid() const {
  // @@protoc_insertion_point(field_get:zproto.MessageNotify.rid)
  return rid_;
}
 void MessageNotify::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageNotify.rid)
}

// optional .zproto.InstantMessage message = 5;
bool MessageNotify::has_message() const {
  return !_is_default_instance_ && message_ != NULL;
}
void MessageNotify::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
const ::zproto::InstantMessage& MessageNotify::message() const {
  // @@protoc_insertion_point(field_get:zproto.MessageNotify.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
::zproto::InstantMessage* MessageNotify::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::zproto::InstantMessage;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageNotify.message)
  return message_;
}
::zproto::InstantMessage* MessageNotify::release_message() {
  // @@protoc_insertion_point(field_release:zproto.MessageNotify.message)
  
  ::zproto::InstantMessage* temp = message_;
  message_ = NULL;
  return temp;
}
void MessageNotify::set_allocated_message(::zproto::InstantMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageNotify.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageContentChangedNotify::kPeerFieldNumber;
const int MessageContentChangedNotify::kRidFieldNumber;
const int MessageContentChangedNotify::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageContentChangedNotify::MessageContentChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageContentChangedNotify)
}

void MessageContentChangedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
  message_ = const_cast< ::zproto::InstantMessage*>(&::zproto::InstantMessage::default_instance());
}

MessageContentChangedNotify::MessageContentChangedNotify(const MessageContentChangedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageContentChangedNotify)
}

void MessageContentChangedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  rid_ = GOOGLE_LONGLONG(0);
  message_ = NULL;
}

MessageContentChangedNotify::~MessageContentChangedNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageContentChangedNotify)
  SharedDtor();
}

void MessageContentChangedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
    delete message_;
  }
}

void MessageContentChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageContentChangedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageContentChangedNotify_descriptor_;
}

const MessageContentChangedNotify& MessageContentChangedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageContentChangedNotify* MessageContentChangedNotify::default_instance_ = NULL;

MessageContentChangedNotify* MessageContentChangedNotify::New(::google::protobuf::Arena* arena) const {
  MessageContentChangedNotify* n = new MessageContentChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageContentChangedNotify::Swap(MessageContentChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageContentChangedNotify::InternalSwap(MessageContentChangedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageContentChangedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageContentChangedNotify_descriptor_;
  metadata.reflection = MessageContentChangedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageContentChangedNotify

// optional .zproto.Peer peer = 1;
bool MessageContentChangedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageContentChangedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageContentChangedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContentChangedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageContentChangedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageContentChangedNotify.peer)
  return peer_;
}
::zproto::Peer* MessageContentChangedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageContentChangedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageContentChangedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageContentChangedNotify.peer)
}

// optional int64 rid = 2;
void MessageContentChangedNotify::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageContentChangedNotify::rid() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContentChangedNotify.rid)
  return rid_;
}
 void MessageContentChangedNotify::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageContentChangedNotify.rid)
}

// optional .zproto.InstantMessage message = 3;
bool MessageContentChangedNotify::has_message() const {
  return !_is_default_instance_ && message_ != NULL;
}
void MessageContentChangedNotify::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
const ::zproto::InstantMessage& MessageContentChangedNotify::message() const {
  // @@protoc_insertion_point(field_get:zproto.MessageContentChangedNotify.message)
  return message_ != NULL ? *message_ : *default_instance_->message_;
}
::zproto::InstantMessage* MessageContentChangedNotify::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::zproto::InstantMessage;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageContentChangedNotify.message)
  return message_;
}
::zproto::InstantMessage* MessageContentChangedNotify::release_message() {
  // @@protoc_insertion_point(field_release:zproto.MessageContentChangedNotify.message)
  
  ::zproto::InstantMessage* temp = message_;
  message_ = NULL;
  return temp;
}
void MessageContentChangedNotify::set_allocated_message(::zproto::InstantMessage* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageContentChangedNotify.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDateChangedNotify::kPeerFieldNumber;
const int MessageDateChangedNotify::kRidFieldNumber;
const int MessageDateChangedNotify::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDateChangedNotify::MessageDateChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageDateChangedNotify)
}

void MessageDateChangedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

MessageDateChangedNotify::MessageDateChangedNotify(const MessageDateChangedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageDateChangedNotify)
}

void MessageDateChangedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  rid_ = GOOGLE_LONGLONG(0);
  date_ = GOOGLE_LONGLONG(0);
}

MessageDateChangedNotify::~MessageDateChangedNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageDateChangedNotify)
  SharedDtor();
}

void MessageDateChangedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageDateChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDateChangedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageDateChangedNotify_descriptor_;
}

const MessageDateChangedNotify& MessageDateChangedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageDateChangedNotify* MessageDateChangedNotify::default_instance_ = NULL;

MessageDateChangedNotify* MessageDateChangedNotify::New(::google::protobuf::Arena* arena) const {
  MessageDateChangedNotify* n = new MessageDateChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDateChangedNotify::Swap(MessageDateChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDateChangedNotify::InternalSwap(MessageDateChangedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageDateChangedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageDateChangedNotify_descriptor_;
  metadata.reflection = MessageDateChangedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageDateChangedNotify

// optional .zproto.Peer peer = 1;
bool MessageDateChangedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageDateChangedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageDateChangedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageDateChangedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageDateChangedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageDateChangedNotify.peer)
  return peer_;
}
::zproto::Peer* MessageDateChangedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageDateChangedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageDateChangedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageDateChangedNotify.peer)
}

// optional int64 rid = 2;
void MessageDateChangedNotify::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageDateChangedNotify::rid() const {
  // @@protoc_insertion_point(field_get:zproto.MessageDateChangedNotify.rid)
  return rid_;
}
 void MessageDateChangedNotify::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageDateChangedNotify.rid)
}

// optional int64 date = 3;
void MessageDateChangedNotify::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageDateChangedNotify::date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageDateChangedNotify.date)
  return date_;
}
 void MessageDateChangedNotify::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageDateChangedNotify.date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageSentNotify::kPeerFieldNumber;
const int MessageSentNotify::kRidFieldNumber;
const int MessageSentNotify::kDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageSentNotify::MessageSentNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageSentNotify)
}

void MessageSentNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

MessageSentNotify::MessageSentNotify(const MessageSentNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageSentNotify)
}

void MessageSentNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  rid_ = GOOGLE_LONGLONG(0);
  date_ = GOOGLE_LONGLONG(0);
}

MessageSentNotify::~MessageSentNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageSentNotify)
  SharedDtor();
}

void MessageSentNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageSentNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageSentNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageSentNotify_descriptor_;
}

const MessageSentNotify& MessageSentNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageSentNotify* MessageSentNotify::default_instance_ = NULL;

MessageSentNotify* MessageSentNotify::New(::google::protobuf::Arena* arena) const {
  MessageSentNotify* n = new MessageSentNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageSentNotify::Swap(MessageSentNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageSentNotify::InternalSwap(MessageSentNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageSentNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageSentNotify_descriptor_;
  metadata.reflection = MessageSentNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageSentNotify

// optional .zproto.Peer peer = 1;
bool MessageSentNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageSentNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageSentNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageSentNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageSentNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageSentNotify.peer)
  return peer_;
}
::zproto::Peer* MessageSentNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageSentNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageSentNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageSentNotify.peer)
}

// optional int64 rid = 2;
void MessageSentNotify::clear_rid() {
  rid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageSentNotify::rid() const {
  // @@protoc_insertion_point(field_get:zproto.MessageSentNotify.rid)
  return rid_;
}
 void MessageSentNotify::set_rid(::google::protobuf::int64 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageSentNotify.rid)
}

// optional int64 date = 3;
void MessageSentNotify::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageSentNotify::date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageSentNotify.date)
  return date_;
}
 void MessageSentNotify::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageSentNotify.date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReceivedNotify::kPeerFieldNumber;
const int MessageReceivedNotify::kStartDateFieldNumber;
const int MessageReceivedNotify::kReceivedDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReceivedNotify::MessageReceivedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReceivedNotify)
}

void MessageReceivedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

MessageReceivedNotify::MessageReceivedNotify(const MessageReceivedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReceivedNotify)
}

void MessageReceivedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  start_date_ = GOOGLE_LONGLONG(0);
  received_date_ = GOOGLE_LONGLONG(0);
}

MessageReceivedNotify::~MessageReceivedNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageReceivedNotify)
  SharedDtor();
}

void MessageReceivedNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageReceivedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReceivedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageReceivedNotify_descriptor_;
}

const MessageReceivedNotify& MessageReceivedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageReceivedNotify* MessageReceivedNotify::default_instance_ = NULL;

MessageReceivedNotify* MessageReceivedNotify::New(::google::protobuf::Arena* arena) const {
  MessageReceivedNotify* n = new MessageReceivedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReceivedNotify::Swap(MessageReceivedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReceivedNotify::InternalSwap(MessageReceivedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReceivedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageReceivedNotify_descriptor_;
  metadata.reflection = MessageReceivedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageReceivedNotify

// optional .zproto.Peer peer = 1;
bool MessageReceivedNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageReceivedNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageReceivedNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReceivedNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageReceivedNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageReceivedNotify.peer)
  return peer_;
}
::zproto::Peer* MessageReceivedNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageReceivedNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageReceivedNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageReceivedNotify.peer)
}

// optional int64 start_date = 2;
void MessageReceivedNotify::clear_start_date() {
  start_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageReceivedNotify::start_date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReceivedNotify.start_date)
  return start_date_;
}
 void MessageReceivedNotify::set_start_date(::google::protobuf::int64 value) {
  
  start_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReceivedNotify.start_date)
}

// optional int64 received_date = 3;
void MessageReceivedNotify::clear_received_date() {
  received_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageReceivedNotify::received_date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReceivedNotify.received_date)
  return received_date_;
}
 void MessageReceivedNotify::set_received_date(::google::protobuf::int64 value) {
  
  received_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReceivedNotify.received_date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReadNotify::kPeerFieldNumber;
const int MessageReadNotify::kStartDateFieldNumber;
const int MessageReadNotify::kReadDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReadNotify::MessageReadNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReadNotify)
}

void MessageReadNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

MessageReadNotify::MessageReadNotify(const MessageReadNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReadNotify)
}

void MessageReadNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  start_date_ = GOOGLE_LONGLONG(0);
  read_date_ = GOOGLE_LONGLONG(0);
}

MessageReadNotify::~MessageReadNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageReadNotify)
  SharedDtor();
}

void MessageReadNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageReadNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReadNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageReadNotify_descriptor_;
}

const MessageReadNotify& MessageReadNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageReadNotify* MessageReadNotify::default_instance_ = NULL;

MessageReadNotify* MessageReadNotify::New(::google::protobuf::Arena* arena) const {
  MessageReadNotify* n = new MessageReadNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReadNotify::Swap(MessageReadNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReadNotify::InternalSwap(MessageReadNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReadNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageReadNotify_descriptor_;
  metadata.reflection = MessageReadNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageReadNotify

// optional .zproto.Peer peer = 1;
bool MessageReadNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageReadNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageReadNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageReadNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageReadNotify.peer)
  return peer_;
}
::zproto::Peer* MessageReadNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageReadNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageReadNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageReadNotify.peer)
}

// optional int64 start_date = 2;
void MessageReadNotify::clear_start_date() {
  start_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageReadNotify::start_date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadNotify.start_date)
  return start_date_;
}
 void MessageReadNotify::set_start_date(::google::protobuf::int64 value) {
  
  start_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReadNotify.start_date)
}

// optional int64 read_date = 3;
void MessageReadNotify::clear_read_date() {
  read_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageReadNotify::read_date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadNotify.read_date)
  return read_date_;
}
 void MessageReadNotify::set_read_date(::google::protobuf::int64 value) {
  
  read_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReadNotify.read_date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageReadByMeNotify::kPeerFieldNumber;
const int MessageReadByMeNotify::kStartDateFieldNumber;
const int MessageReadByMeNotify::kUnreadCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageReadByMeNotify::MessageReadByMeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageReadByMeNotify)
}

void MessageReadByMeNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

MessageReadByMeNotify::MessageReadByMeNotify(const MessageReadByMeNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageReadByMeNotify)
}

void MessageReadByMeNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  start_date_ = GOOGLE_LONGLONG(0);
  unread_counter_ = 0;
}

MessageReadByMeNotify::~MessageReadByMeNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageReadByMeNotify)
  SharedDtor();
}

void MessageReadByMeNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageReadByMeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageReadByMeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageReadByMeNotify_descriptor_;
}

const MessageReadByMeNotify& MessageReadByMeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageReadByMeNotify* MessageReadByMeNotify::default_instance_ = NULL;

MessageReadByMeNotify* MessageReadByMeNotify::New(::google::protobuf::Arena* arena) const {
  MessageReadByMeNotify* n = new MessageReadByMeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageReadByMeNotify::Swap(MessageReadByMeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageReadByMeNotify::InternalSwap(MessageReadByMeNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageReadByMeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageReadByMeNotify_descriptor_;
  metadata.reflection = MessageReadByMeNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageReadByMeNotify

// optional .zproto.Peer peer = 1;
bool MessageReadByMeNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageReadByMeNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageReadByMeNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadByMeNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageReadByMeNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageReadByMeNotify.peer)
  return peer_;
}
::zproto::Peer* MessageReadByMeNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageReadByMeNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageReadByMeNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageReadByMeNotify.peer)
}

// optional int64 start_date = 2;
void MessageReadByMeNotify::clear_start_date() {
  start_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MessageReadByMeNotify::start_date() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadByMeNotify.start_date)
  return start_date_;
}
 void MessageReadByMeNotify::set_start_date(::google::protobuf::int64 value) {
  
  start_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReadByMeNotify.start_date)
}

// optional int32 unread_counter = 3;
void MessageReadByMeNotify::clear_unread_counter() {
  unread_counter_ = 0;
}
 ::google::protobuf::int32 MessageReadByMeNotify::unread_counter() const {
  // @@protoc_insertion_point(field_get:zproto.MessageReadByMeNotify.unread_counter)
  return unread_counter_;
}
 void MessageReadByMeNotify::set_unread_counter(::google::protobuf::int32 value) {
  
  unread_counter_ = value;
  // @@protoc_insertion_point(field_set:zproto.MessageReadByMeNotify.unread_counter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDeleteNotify::kPeerFieldNumber;
const int MessageDeleteNotify::kRidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDeleteNotify::MessageDeleteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.MessageDeleteNotify)
}

void MessageDeleteNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

MessageDeleteNotify::MessageDeleteNotify(const MessageDeleteNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.MessageDeleteNotify)
}

void MessageDeleteNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

MessageDeleteNotify::~MessageDeleteNotify() {
  // @@protoc_insertion_point(destructor:zproto.MessageDeleteNotify)
  SharedDtor();
}

void MessageDeleteNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void MessageDeleteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDeleteNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageDeleteNotify_descriptor_;
}

const MessageDeleteNotify& MessageDeleteNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

MessageDeleteNotify* MessageDeleteNotify::default_instance_ = NULL;

MessageDeleteNotify* MessageDeleteNotify::New(::google::protobuf::Arena* arena) const {
  MessageDeleteNotify* n = new MessageDeleteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDeleteNotify::Swap(MessageDeleteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDeleteNotify::InternalSwap(MessageDeleteNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MessageDeleteNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageDeleteNotify_descriptor_;
  metadata.reflection = MessageDeleteNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageDeleteNotify

// optional .zproto.Peer peer = 1;
bool MessageDeleteNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void MessageDeleteNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& MessageDeleteNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.MessageDeleteNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* MessageDeleteNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.MessageDeleteNotify.peer)
  return peer_;
}
::zproto::Peer* MessageDeleteNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.MessageDeleteNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void MessageDeleteNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.MessageDeleteNotify.peer)
}

// repeated int64 rids = 2;
int MessageDeleteNotify::rids_size() const {
  return rids_.size();
}
void MessageDeleteNotify::clear_rids() {
  rids_.Clear();
}
 ::google::protobuf::int64 MessageDeleteNotify::rids(int index) const {
  // @@protoc_insertion_point(field_get:zproto.MessageDeleteNotify.rids)
  return rids_.Get(index);
}
 void MessageDeleteNotify::set_rids(int index, ::google::protobuf::int64 value) {
  rids_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.MessageDeleteNotify.rids)
}
 void MessageDeleteNotify::add_rids(::google::protobuf::int64 value) {
  rids_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.MessageDeleteNotify.rids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageDeleteNotify::rids() const {
  // @@protoc_insertion_point(field_list:zproto.MessageDeleteNotify.rids)
  return rids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageDeleteNotify::mutable_rids() {
  // @@protoc_insertion_point(field_mutable_list:zproto.MessageDeleteNotify.rids)
  return &rids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatClearNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatClearNotify::ChatClearNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ChatClearNotify)
}

void ChatClearNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

ChatClearNotify::ChatClearNotify(const ChatClearNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ChatClearNotify)
}

void ChatClearNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

ChatClearNotify::~ChatClearNotify() {
  // @@protoc_insertion_point(destructor:zproto.ChatClearNotify)
  SharedDtor();
}

void ChatClearNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void ChatClearNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatClearNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatClearNotify_descriptor_;
}

const ChatClearNotify& ChatClearNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

ChatClearNotify* ChatClearNotify::default_instance_ = NULL;

ChatClearNotify* ChatClearNotify::New(::google::protobuf::Arena* arena) const {
  ChatClearNotify* n = new ChatClearNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatClearNotify::Swap(ChatClearNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatClearNotify::InternalSwap(ChatClearNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ChatClearNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatClearNotify_descriptor_;
  metadata.reflection = ChatClearNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatClearNotify

// optional .zproto.Peer peer = 1;
bool ChatClearNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void ChatClearNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& ChatClearNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.ChatClearNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* ChatClearNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.ChatClearNotify.peer)
  return peer_;
}
::zproto::Peer* ChatClearNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.ChatClearNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ChatClearNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.ChatClearNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatDeleteNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatDeleteNotify::ChatDeleteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ChatDeleteNotify)
}

void ChatDeleteNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

ChatDeleteNotify::ChatDeleteNotify(const ChatDeleteNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ChatDeleteNotify)
}

void ChatDeleteNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

ChatDeleteNotify::~ChatDeleteNotify() {
  // @@protoc_insertion_point(destructor:zproto.ChatDeleteNotify)
  SharedDtor();
}

void ChatDeleteNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void ChatDeleteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatDeleteNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatDeleteNotify_descriptor_;
}

const ChatDeleteNotify& ChatDeleteNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

ChatDeleteNotify* ChatDeleteNotify::default_instance_ = NULL;

ChatDeleteNotify* ChatDeleteNotify::New(::google::protobuf::Arena* arena) const {
  ChatDeleteNotify* n = new ChatDeleteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatDeleteNotify::Swap(ChatDeleteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatDeleteNotify::InternalSwap(ChatDeleteNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ChatDeleteNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatDeleteNotify_descriptor_;
  metadata.reflection = ChatDeleteNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatDeleteNotify

// optional .zproto.Peer peer = 1;
bool ChatDeleteNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void ChatDeleteNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& ChatDeleteNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.ChatDeleteNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* ChatDeleteNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.ChatDeleteNotify.peer)
  return peer_;
}
::zproto::Peer* ChatDeleteNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.ChatDeleteNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ChatDeleteNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.ChatDeleteNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatArchiveNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatArchiveNotify::ChatArchiveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ChatArchiveNotify)
}

void ChatArchiveNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

ChatArchiveNotify::ChatArchiveNotify(const ChatArchiveNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ChatArchiveNotify)
}

void ChatArchiveNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

ChatArchiveNotify::~ChatArchiveNotify() {
  // @@protoc_insertion_point(destructor:zproto.ChatArchiveNotify)
  SharedDtor();
}

void ChatArchiveNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void ChatArchiveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatArchiveNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatArchiveNotify_descriptor_;
}

const ChatArchiveNotify& ChatArchiveNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

ChatArchiveNotify* ChatArchiveNotify::default_instance_ = NULL;

ChatArchiveNotify* ChatArchiveNotify::New(::google::protobuf::Arena* arena) const {
  ChatArchiveNotify* n = new ChatArchiveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatArchiveNotify::Swap(ChatArchiveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatArchiveNotify::InternalSwap(ChatArchiveNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ChatArchiveNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatArchiveNotify_descriptor_;
  metadata.reflection = ChatArchiveNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatArchiveNotify

// optional .zproto.Peer peer = 1;
bool ChatArchiveNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void ChatArchiveNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& ChatArchiveNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.ChatArchiveNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* ChatArchiveNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.ChatArchiveNotify.peer)
  return peer_;
}
::zproto::Peer* ChatArchiveNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.ChatArchiveNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ChatArchiveNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.ChatArchiveNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatDropCacheNotify::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatDropCacheNotify::ChatDropCacheNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ChatDropCacheNotify)
}

void ChatDropCacheNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::Peer*>(&::zproto::Peer::default_instance());
}

ChatDropCacheNotify::ChatDropCacheNotify(const ChatDropCacheNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ChatDropCacheNotify)
}

void ChatDropCacheNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

ChatDropCacheNotify::~ChatDropCacheNotify() {
  // @@protoc_insertion_point(destructor:zproto.ChatDropCacheNotify)
  SharedDtor();
}

void ChatDropCacheNotify::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void ChatDropCacheNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatDropCacheNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatDropCacheNotify_descriptor_;
}

const ChatDropCacheNotify& ChatDropCacheNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

ChatDropCacheNotify* ChatDropCacheNotify::default_instance_ = NULL;

ChatDropCacheNotify* ChatDropCacheNotify::New(::google::protobuf::Arena* arena) const {
  ChatDropCacheNotify* n = new ChatDropCacheNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatDropCacheNotify::Swap(ChatDropCacheNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatDropCacheNotify::InternalSwap(ChatDropCacheNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ChatDropCacheNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatDropCacheNotify_descriptor_;
  metadata.reflection = ChatDropCacheNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatDropCacheNotify

// optional .zproto.Peer peer = 1;
bool ChatDropCacheNotify::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void ChatDropCacheNotify::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::Peer& ChatDropCacheNotify::peer() const {
  // @@protoc_insertion_point(field_get:zproto.ChatDropCacheNotify.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::Peer* ChatDropCacheNotify::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::Peer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.ChatDropCacheNotify.peer)
  return peer_;
}
::zproto::Peer* ChatDropCacheNotify::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.ChatDropCacheNotify.peer)
  
  ::zproto::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ChatDropCacheNotify::set_allocated_peer(::zproto::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.ChatDropCacheNotify.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatGroupsChangedNotify::kDialogsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatGroupsChangedNotify::ChatGroupsChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ChatGroupsChangedNotify)
}

void ChatGroupsChangedNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ChatGroupsChangedNotify::ChatGroupsChangedNotify(const ChatGroupsChangedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ChatGroupsChangedNotify)
}

void ChatGroupsChangedNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ChatGroupsChangedNotify::~ChatGroupsChangedNotify() {
  // @@protoc_insertion_point(destructor:zproto.ChatGroupsChangedNotify)
  SharedDtor();
}

void ChatGroupsChangedNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChatGroupsChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatGroupsChangedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatGroupsChangedNotify_descriptor_;
}

const ChatGroupsChangedNotify& ChatGroupsChangedNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

ChatGroupsChangedNotify* ChatGroupsChangedNotify::default_instance_ = NULL;

ChatGroupsChangedNotify* ChatGroupsChangedNotify::New(::google::protobuf::Arena* arena) const {
  ChatGroupsChangedNotify* n = new ChatGroupsChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatGroupsChangedNotify::Swap(ChatGroupsChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatGroupsChangedNotify::InternalSwap(ChatGroupsChangedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ChatGroupsChangedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatGroupsChangedNotify_descriptor_;
  metadata.reflection = ChatGroupsChangedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatGroupsChangedNotify

// repeated .zproto.DialogGroup dialogs = 1;
int ChatGroupsChangedNotify::dialogs_size() const {
  return dialogs_.size();
}
void ChatGroupsChangedNotify::clear_dialogs() {
  dialogs_.Clear();
}
const ::zproto::DialogGroup& ChatGroupsChangedNotify::dialogs(int index) const {
  // @@protoc_insertion_point(field_get:zproto.ChatGroupsChangedNotify.dialogs)
  return dialogs_.Get(index);
}
::zproto::DialogGroup* ChatGroupsChangedNotify::mutable_dialogs(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.ChatGroupsChangedNotify.dialogs)
  return dialogs_.Mutable(index);
}
::zproto::DialogGroup* ChatGroupsChangedNotify::add_dialogs() {
  // @@protoc_insertion_point(field_add:zproto.ChatGroupsChangedNotify.dialogs)
  return dialogs_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::DialogGroup >*
ChatGroupsChangedNotify::mutable_dialogs() {
  // @@protoc_insertion_point(field_mutable_list:zproto.ChatGroupsChangedNotify.dialogs)
  return &dialogs_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::DialogGroup >&
ChatGroupsChangedNotify::dialogs() const {
  // @@protoc_insertion_point(field_list:zproto.ChatGroupsChangedNotify.dialogs)
  return dialogs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadHistoryReq::kPeerFieldNumber;
const int LoadHistoryReq::kDateFieldNumber;
const int LoadHistoryReq::kLoadModeFieldNumber;
const int LoadHistoryReq::kLimitFieldNumber;
const int LoadHistoryReq::kOptimizationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadHistoryReq::LoadHistoryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadHistoryReq)
}

void LoadHistoryReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

LoadHistoryReq::LoadHistoryReq(const LoadHistoryReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadHistoryReq)
}

void LoadHistoryReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
  date_ = GOOGLE_LONGLONG(0);
  load_mode_ = 0;
  limit_ = 0;
}

LoadHistoryReq::~LoadHistoryReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadHistoryReq)
  SharedDtor();
}

void LoadHistoryReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void LoadHistoryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadHistoryReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadHistoryReq_descriptor_;
}

const LoadHistoryReq& LoadHistoryReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

LoadHistoryReq* LoadHistoryReq::default_instance_ = NULL;

LoadHistoryReq* LoadHistoryReq::New(::google::protobuf::Arena* arena) const {
  LoadHistoryReq* n = new LoadHistoryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadHistoryReq::Swap(LoadHistoryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadHistoryReq::InternalSwap(LoadHistoryReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadHistoryReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadHistoryReq_descriptor_;
  metadata.reflection = LoadHistoryReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadHistoryReq

// optional .zproto.OutPeer peer = 1;
bool LoadHistoryReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void LoadHistoryReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& LoadHistoryReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* LoadHistoryReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryReq.peer)
  return peer_;
}
::zproto::OutPeer* LoadHistoryReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.LoadHistoryReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void LoadHistoryReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.LoadHistoryReq.peer)
}

// optional int64 date = 3;
void LoadHistoryReq::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 LoadHistoryReq::date() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryReq.date)
  return date_;
}
 void LoadHistoryReq::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryReq.date)
}

// optional .zproto.ListLoadMode load_mode = 5;
void LoadHistoryReq::clear_load_mode() {
  load_mode_ = 0;
}
 ::zproto::ListLoadMode LoadHistoryReq::load_mode() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryReq.load_mode)
  return static_cast< ::zproto::ListLoadMode >(load_mode_);
}
 void LoadHistoryReq::set_load_mode(::zproto::ListLoadMode value) {
  
  load_mode_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryReq.load_mode)
}

// optional int32 limit = 4;
void LoadHistoryReq::clear_limit() {
  limit_ = 0;
}
 ::google::protobuf::int32 LoadHistoryReq::limit() const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryReq.limit)
  return limit_;
}
 void LoadHistoryReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryReq.limit)
}

// repeated .zproto.UpdateOptimization optimizations = 6;
int LoadHistoryReq::optimizations_size() const {
  return optimizations_.size();
}
void LoadHistoryReq::clear_optimizations() {
  optimizations_.Clear();
}
 ::zproto::UpdateOptimization LoadHistoryReq::optimizations(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryReq.optimizations)
  return static_cast< ::zproto::UpdateOptimization >(optimizations_.Get(index));
}
 void LoadHistoryReq::set_optimizations(int index, ::zproto::UpdateOptimization value) {
  optimizations_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.LoadHistoryReq.optimizations)
}
 void LoadHistoryReq::add_optimizations(::zproto::UpdateOptimization value) {
  optimizations_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.LoadHistoryReq.optimizations)
}
 const ::google::protobuf::RepeatedField<int>&
LoadHistoryReq::optimizations() const {
  // @@protoc_insertion_point(field_list:zproto.LoadHistoryReq.optimizations)
  return optimizations_;
}
 ::google::protobuf::RepeatedField<int>*
LoadHistoryReq::mutable_optimizations() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadHistoryReq.optimizations)
  return &optimizations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadHistoryRsp::kHistoryFieldNumber;
const int LoadHistoryRsp::kUsersFieldNumber;
const int LoadHistoryRsp::kUserPeersFieldNumber;
const int LoadHistoryRsp::kGroupsFieldNumber;
const int LoadHistoryRsp::kGroupPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadHistoryRsp::LoadHistoryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadHistoryRsp)
}

void LoadHistoryRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadHistoryRsp::LoadHistoryRsp(const LoadHistoryRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadHistoryRsp)
}

void LoadHistoryRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

LoadHistoryRsp::~LoadHistoryRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadHistoryRsp)
  SharedDtor();
}

void LoadHistoryRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoadHistoryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadHistoryRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadHistoryRsp_descriptor_;
}

const LoadHistoryRsp& LoadHistoryRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

LoadHistoryRsp* LoadHistoryRsp::default_instance_ = NULL;

LoadHistoryRsp* LoadHistoryRsp::New(::google::protobuf::Arena* arena) const {
  LoadHistoryRsp* n = new LoadHistoryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadHistoryRsp::Swap(LoadHistoryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadHistoryRsp::InternalSwap(LoadHistoryRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadHistoryRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadHistoryRsp_descriptor_;
  metadata.reflection = LoadHistoryRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadHistoryRsp

// repeated .zproto.MessageContainer history = 1;
int LoadHistoryRsp::history_size() const {
  return history_.size();
}
void LoadHistoryRsp::clear_history() {
  history_.Clear();
}
const ::zproto::MessageContainer& LoadHistoryRsp::history(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryRsp.history)
  return history_.Get(index);
}
::zproto::MessageContainer* LoadHistoryRsp::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryRsp.history)
  return history_.Mutable(index);
}
::zproto::MessageContainer* LoadHistoryRsp::add_history() {
  // @@protoc_insertion_point(field_add:zproto.LoadHistoryRsp.history)
  return history_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >*
LoadHistoryRsp::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadHistoryRsp.history)
  return &history_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::MessageContainer >&
LoadHistoryRsp::history() const {
  // @@protoc_insertion_point(field_list:zproto.LoadHistoryRsp.history)
  return history_;
}

// repeated .zproto.User users = 2;
int LoadHistoryRsp::users_size() const {
  return users_.size();
}
void LoadHistoryRsp::clear_users() {
  users_.Clear();
}
const ::zproto::User& LoadHistoryRsp::users(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryRsp.users)
  return users_.Get(index);
}
::zproto::User* LoadHistoryRsp::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryRsp.users)
  return users_.Mutable(index);
}
::zproto::User* LoadHistoryRsp::add_users() {
  // @@protoc_insertion_point(field_add:zproto.LoadHistoryRsp.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::User >*
LoadHistoryRsp::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadHistoryRsp.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::User >&
LoadHistoryRsp::users() const {
  // @@protoc_insertion_point(field_list:zproto.LoadHistoryRsp.users)
  return users_;
}

// repeated .zproto.UserOutPeer user_peers = 4;
int LoadHistoryRsp::user_peers_size() const {
  return user_peers_.size();
}
void LoadHistoryRsp::clear_user_peers() {
  user_peers_.Clear();
}
const ::zproto::UserOutPeer& LoadHistoryRsp::user_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryRsp.user_peers)
  return user_peers_.Get(index);
}
::zproto::UserOutPeer* LoadHistoryRsp::mutable_user_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryRsp.user_peers)
  return user_peers_.Mutable(index);
}
::zproto::UserOutPeer* LoadHistoryRsp::add_user_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadHistoryRsp.user_peers)
  return user_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >*
LoadHistoryRsp::mutable_user_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadHistoryRsp.user_peers)
  return &user_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >&
LoadHistoryRsp::user_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadHistoryRsp.user_peers)
  return user_peers_;
}

// repeated .zproto.Group groups = 5;
int LoadHistoryRsp::groups_size() const {
  return groups_.size();
}
void LoadHistoryRsp::clear_groups() {
  groups_.Clear();
}
const ::zproto::Group& LoadHistoryRsp::groups(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryRsp.groups)
  return groups_.Get(index);
}
::zproto::Group* LoadHistoryRsp::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryRsp.groups)
  return groups_.Mutable(index);
}
::zproto::Group* LoadHistoryRsp::add_groups() {
  // @@protoc_insertion_point(field_add:zproto.LoadHistoryRsp.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::Group >*
LoadHistoryRsp::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadHistoryRsp.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::Group >&
LoadHistoryRsp::groups() const {
  // @@protoc_insertion_point(field_list:zproto.LoadHistoryRsp.groups)
  return groups_;
}

// repeated .zproto.GroupOutPeer group_peers = 6;
int LoadHistoryRsp::group_peers_size() const {
  return group_peers_.size();
}
void LoadHistoryRsp::clear_group_peers() {
  group_peers_.Clear();
}
const ::zproto::GroupOutPeer& LoadHistoryRsp::group_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadHistoryRsp.group_peers)
  return group_peers_.Get(index);
}
::zproto::GroupOutPeer* LoadHistoryRsp::mutable_group_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadHistoryRsp.group_peers)
  return group_peers_.Mutable(index);
}
::zproto::GroupOutPeer* LoadHistoryRsp::add_group_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadHistoryRsp.group_peers)
  return group_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >*
LoadHistoryRsp::mutable_group_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadHistoryRsp.group_peers)
  return &group_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >&
LoadHistoryRsp::group_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadHistoryRsp.group_peers)
  return group_peers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDialogsReq::kMinDateFieldNumber;
const int LoadDialogsReq::kLimitFieldNumber;
const int LoadDialogsReq::kOptimizationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDialogsReq::LoadDialogsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadDialogsReq)
}

void LoadDialogsReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadDialogsReq::LoadDialogsReq(const LoadDialogsReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadDialogsReq)
}

void LoadDialogsReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  min_date_ = GOOGLE_LONGLONG(0);
  limit_ = 0;
}

LoadDialogsReq::~LoadDialogsReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadDialogsReq)
  SharedDtor();
}

void LoadDialogsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoadDialogsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadDialogsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadDialogsReq_descriptor_;
}

const LoadDialogsReq& LoadDialogsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

LoadDialogsReq* LoadDialogsReq::default_instance_ = NULL;

LoadDialogsReq* LoadDialogsReq::New(::google::protobuf::Arena* arena) const {
  LoadDialogsReq* n = new LoadDialogsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadDialogsReq::Swap(LoadDialogsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDialogsReq::InternalSwap(LoadDialogsReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadDialogsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadDialogsReq_descriptor_;
  metadata.reflection = LoadDialogsReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadDialogsReq

// optional int64 min_date = 1;
void LoadDialogsReq::clear_min_date() {
  min_date_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 LoadDialogsReq::min_date() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.min_date)
  return min_date_;
}
 void LoadDialogsReq::set_min_date(::google::protobuf::int64 value) {
  
  min_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.min_date)
}

// optional int32 limit = 2;
void LoadDialogsReq::clear_limit() {
  limit_ = 0;
}
 ::google::protobuf::int32 LoadDialogsReq::limit() const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.limit)
  return limit_;
}
 void LoadDialogsReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.limit)
}

// repeated .zproto.UpdateOptimization optimizations = 3;
int LoadDialogsReq::optimizations_size() const {
  return optimizations_.size();
}
void LoadDialogsReq::clear_optimizations() {
  optimizations_.Clear();
}
 ::zproto::UpdateOptimization LoadDialogsReq::optimizations(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsReq.optimizations)
  return static_cast< ::zproto::UpdateOptimization >(optimizations_.Get(index));
}
 void LoadDialogsReq::set_optimizations(int index, ::zproto::UpdateOptimization value) {
  optimizations_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.LoadDialogsReq.optimizations)
}
 void LoadDialogsReq::add_optimizations(::zproto::UpdateOptimization value) {
  optimizations_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsReq.optimizations)
}
 const ::google::protobuf::RepeatedField<int>&
LoadDialogsReq::optimizations() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsReq.optimizations)
  return optimizations_;
}
 ::google::protobuf::RepeatedField<int>*
LoadDialogsReq::mutable_optimizations() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsReq.optimizations)
  return &optimizations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadDialogsRsp::kGroupsFieldNumber;
const int LoadDialogsRsp::kUsersFieldNumber;
const int LoadDialogsRsp::kDialogsFieldNumber;
const int LoadDialogsRsp::kUserPeersFieldNumber;
const int LoadDialogsRsp::kGroupPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadDialogsRsp::LoadDialogsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadDialogsRsp)
}

void LoadDialogsRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadDialogsRsp::LoadDialogsRsp(const LoadDialogsRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadDialogsRsp)
}

void LoadDialogsRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

LoadDialogsRsp::~LoadDialogsRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadDialogsRsp)
  SharedDtor();
}

void LoadDialogsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoadDialogsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadDialogsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadDialogsRsp_descriptor_;
}

const LoadDialogsRsp& LoadDialogsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

LoadDialogsRsp* LoadDialogsRsp::default_instance_ = NULL;

LoadDialogsRsp* LoadDialogsRsp::New(::google::protobuf::Arena* arena) const {
  LoadDialogsRsp* n = new LoadDialogsRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadDialogsRsp::Swap(LoadDialogsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadDialogsRsp::InternalSwap(LoadDialogsRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadDialogsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadDialogsRsp_descriptor_;
  metadata.reflection = LoadDialogsRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadDialogsRsp

// repeated .zproto.Group groups = 1;
int LoadDialogsRsp::groups_size() const {
  return groups_.size();
}
void LoadDialogsRsp::clear_groups() {
  groups_.Clear();
}
const ::zproto::Group& LoadDialogsRsp::groups(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.groups)
  return groups_.Get(index);
}
::zproto::Group* LoadDialogsRsp::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.groups)
  return groups_.Mutable(index);
}
::zproto::Group* LoadDialogsRsp::add_groups() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::Group >*
LoadDialogsRsp::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::Group >&
LoadDialogsRsp::groups() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.groups)
  return groups_;
}

// repeated .zproto.User users = 2;
int LoadDialogsRsp::users_size() const {
  return users_.size();
}
void LoadDialogsRsp::clear_users() {
  users_.Clear();
}
const ::zproto::User& LoadDialogsRsp::users(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.users)
  return users_.Get(index);
}
::zproto::User* LoadDialogsRsp::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.users)
  return users_.Mutable(index);
}
::zproto::User* LoadDialogsRsp::add_users() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::User >*
LoadDialogsRsp::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::User >&
LoadDialogsRsp::users() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.users)
  return users_;
}

// repeated .zproto.Dialog dialogs = 3;
int LoadDialogsRsp::dialogs_size() const {
  return dialogs_.size();
}
void LoadDialogsRsp::clear_dialogs() {
  dialogs_.Clear();
}
const ::zproto::Dialog& LoadDialogsRsp::dialogs(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Get(index);
}
::zproto::Dialog* LoadDialogsRsp::mutable_dialogs(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Mutable(index);
}
::zproto::Dialog* LoadDialogsRsp::add_dialogs() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.dialogs)
  return dialogs_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::Dialog >*
LoadDialogsRsp::mutable_dialogs() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.dialogs)
  return &dialogs_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >&
LoadDialogsRsp::dialogs() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.dialogs)
  return dialogs_;
}

// repeated .zproto.UserOutPeer user_peers = 4;
int LoadDialogsRsp::user_peers_size() const {
  return user_peers_.size();
}
void LoadDialogsRsp::clear_user_peers() {
  user_peers_.Clear();
}
const ::zproto::UserOutPeer& LoadDialogsRsp::user_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.user_peers)
  return user_peers_.Get(index);
}
::zproto::UserOutPeer* LoadDialogsRsp::mutable_user_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.user_peers)
  return user_peers_.Mutable(index);
}
::zproto::UserOutPeer* LoadDialogsRsp::add_user_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.user_peers)
  return user_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >*
LoadDialogsRsp::mutable_user_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.user_peers)
  return &user_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >&
LoadDialogsRsp::user_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.user_peers)
  return user_peers_;
}

// repeated .zproto.GroupOutPeer group_peers = 5;
int LoadDialogsRsp::group_peers_size() const {
  return group_peers_.size();
}
void LoadDialogsRsp::clear_group_peers() {
  group_peers_.Clear();
}
const ::zproto::GroupOutPeer& LoadDialogsRsp::group_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadDialogsRsp.group_peers)
  return group_peers_.Get(index);
}
::zproto::GroupOutPeer* LoadDialogsRsp::mutable_group_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadDialogsRsp.group_peers)
  return group_peers_.Mutable(index);
}
::zproto::GroupOutPeer* LoadDialogsRsp::add_group_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadDialogsRsp.group_peers)
  return group_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >*
LoadDialogsRsp::mutable_group_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadDialogsRsp.group_peers)
  return &group_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >&
LoadDialogsRsp::group_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadDialogsRsp.group_peers)
  return group_peers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadArchivedReq::kNextOffsetFieldNumber;
const int LoadArchivedReq::kLimitFieldNumber;
const int LoadArchivedReq::kOptimizationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadArchivedReq::LoadArchivedReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadArchivedReq)
}

void LoadArchivedReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadArchivedReq::LoadArchivedReq(const LoadArchivedReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadArchivedReq)
}

void LoadArchivedReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  next_offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_ = 0;
}

LoadArchivedReq::~LoadArchivedReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadArchivedReq)
  SharedDtor();
}

void LoadArchivedReq::SharedDtor() {
  next_offset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoadArchivedReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadArchivedReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadArchivedReq_descriptor_;
}

const LoadArchivedReq& LoadArchivedReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

LoadArchivedReq* LoadArchivedReq::default_instance_ = NULL;

LoadArchivedReq* LoadArchivedReq::New(::google::protobuf::Arena* arena) const {
  LoadArchivedReq* n = new LoadArchivedReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadArchivedReq::Swap(LoadArchivedReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadArchivedReq::InternalSwap(LoadArchivedReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadArchivedReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadArchivedReq_descriptor_;
  metadata.reflection = LoadArchivedReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadArchivedReq

// optional bytes next_offset = 1;
void LoadArchivedReq::clear_next_offset() {
  next_offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoadArchivedReq::next_offset() const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedReq.next_offset)
  return next_offset_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoadArchivedReq::set_next_offset(const ::std::string& value) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.LoadArchivedReq.next_offset)
}
 void LoadArchivedReq::set_next_offset(const char* value) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.LoadArchivedReq.next_offset)
}
 void LoadArchivedReq::set_next_offset(const void* value, size_t size) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.LoadArchivedReq.next_offset)
}
 ::std::string* LoadArchivedReq::mutable_next_offset() {
  
  // @@protoc_insertion_point(field_mutable:zproto.LoadArchivedReq.next_offset)
  return next_offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoadArchivedReq::release_next_offset() {
  // @@protoc_insertion_point(field_release:zproto.LoadArchivedReq.next_offset)
  
  return next_offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoadArchivedReq::set_allocated_next_offset(::std::string* next_offset) {
  if (next_offset != NULL) {
    
  } else {
    
  }
  next_offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_offset);
  // @@protoc_insertion_point(field_set_allocated:zproto.LoadArchivedReq.next_offset)
}

// optional int32 limit = 2;
void LoadArchivedReq::clear_limit() {
  limit_ = 0;
}
 ::google::protobuf::int32 LoadArchivedReq::limit() const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedReq.limit)
  return limit_;
}
 void LoadArchivedReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadArchivedReq.limit)
}

// repeated .zproto.UpdateOptimization optimizations = 3;
int LoadArchivedReq::optimizations_size() const {
  return optimizations_.size();
}
void LoadArchivedReq::clear_optimizations() {
  optimizations_.Clear();
}
 ::zproto::UpdateOptimization LoadArchivedReq::optimizations(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedReq.optimizations)
  return static_cast< ::zproto::UpdateOptimization >(optimizations_.Get(index));
}
 void LoadArchivedReq::set_optimizations(int index, ::zproto::UpdateOptimization value) {
  optimizations_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.LoadArchivedReq.optimizations)
}
 void LoadArchivedReq::add_optimizations(::zproto::UpdateOptimization value) {
  optimizations_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.LoadArchivedReq.optimizations)
}
 const ::google::protobuf::RepeatedField<int>&
LoadArchivedReq::optimizations() const {
  // @@protoc_insertion_point(field_list:zproto.LoadArchivedReq.optimizations)
  return optimizations_;
}
 ::google::protobuf::RepeatedField<int>*
LoadArchivedReq::mutable_optimizations() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadArchivedReq.optimizations)
  return &optimizations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadArchivedRsp::kGroupsFieldNumber;
const int LoadArchivedRsp::kUsersFieldNumber;
const int LoadArchivedRsp::kDialogsFieldNumber;
const int LoadArchivedRsp::kUserPeersFieldNumber;
const int LoadArchivedRsp::kGroupPeersFieldNumber;
const int LoadArchivedRsp::kNextOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadArchivedRsp::LoadArchivedRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadArchivedRsp)
}

void LoadArchivedRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadArchivedRsp::LoadArchivedRsp(const LoadArchivedRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadArchivedRsp)
}

void LoadArchivedRsp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  next_offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoadArchivedRsp::~LoadArchivedRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadArchivedRsp)
  SharedDtor();
}

void LoadArchivedRsp::SharedDtor() {
  next_offset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoadArchivedRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadArchivedRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadArchivedRsp_descriptor_;
}

const LoadArchivedRsp& LoadArchivedRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

LoadArchivedRsp* LoadArchivedRsp::default_instance_ = NULL;

LoadArchivedRsp* LoadArchivedRsp::New(::google::protobuf::Arena* arena) const {
  LoadArchivedRsp* n = new LoadArchivedRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadArchivedRsp::Swap(LoadArchivedRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadArchivedRsp::InternalSwap(LoadArchivedRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadArchivedRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadArchivedRsp_descriptor_;
  metadata.reflection = LoadArchivedRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadArchivedRsp

// repeated .zproto.Group groups = 1;
int LoadArchivedRsp::groups_size() const {
  return groups_.size();
}
void LoadArchivedRsp::clear_groups() {
  groups_.Clear();
}
const ::zproto::Group& LoadArchivedRsp::groups(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedRsp.groups)
  return groups_.Get(index);
}
::zproto::Group* LoadArchivedRsp::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadArchivedRsp.groups)
  return groups_.Mutable(index);
}
::zproto::Group* LoadArchivedRsp::add_groups() {
  // @@protoc_insertion_point(field_add:zproto.LoadArchivedRsp.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::Group >*
LoadArchivedRsp::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadArchivedRsp.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::Group >&
LoadArchivedRsp::groups() const {
  // @@protoc_insertion_point(field_list:zproto.LoadArchivedRsp.groups)
  return groups_;
}

// repeated .zproto.User users = 2;
int LoadArchivedRsp::users_size() const {
  return users_.size();
}
void LoadArchivedRsp::clear_users() {
  users_.Clear();
}
const ::zproto::User& LoadArchivedRsp::users(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedRsp.users)
  return users_.Get(index);
}
::zproto::User* LoadArchivedRsp::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadArchivedRsp.users)
  return users_.Mutable(index);
}
::zproto::User* LoadArchivedRsp::add_users() {
  // @@protoc_insertion_point(field_add:zproto.LoadArchivedRsp.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::User >*
LoadArchivedRsp::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadArchivedRsp.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::User >&
LoadArchivedRsp::users() const {
  // @@protoc_insertion_point(field_list:zproto.LoadArchivedRsp.users)
  return users_;
}

// repeated .zproto.Dialog dialogs = 3;
int LoadArchivedRsp::dialogs_size() const {
  return dialogs_.size();
}
void LoadArchivedRsp::clear_dialogs() {
  dialogs_.Clear();
}
const ::zproto::Dialog& LoadArchivedRsp::dialogs(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedRsp.dialogs)
  return dialogs_.Get(index);
}
::zproto::Dialog* LoadArchivedRsp::mutable_dialogs(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadArchivedRsp.dialogs)
  return dialogs_.Mutable(index);
}
::zproto::Dialog* LoadArchivedRsp::add_dialogs() {
  // @@protoc_insertion_point(field_add:zproto.LoadArchivedRsp.dialogs)
  return dialogs_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::Dialog >*
LoadArchivedRsp::mutable_dialogs() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadArchivedRsp.dialogs)
  return &dialogs_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::Dialog >&
LoadArchivedRsp::dialogs() const {
  // @@protoc_insertion_point(field_list:zproto.LoadArchivedRsp.dialogs)
  return dialogs_;
}

// repeated .zproto.UserOutPeer user_peers = 5;
int LoadArchivedRsp::user_peers_size() const {
  return user_peers_.size();
}
void LoadArchivedRsp::clear_user_peers() {
  user_peers_.Clear();
}
const ::zproto::UserOutPeer& LoadArchivedRsp::user_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedRsp.user_peers)
  return user_peers_.Get(index);
}
::zproto::UserOutPeer* LoadArchivedRsp::mutable_user_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadArchivedRsp.user_peers)
  return user_peers_.Mutable(index);
}
::zproto::UserOutPeer* LoadArchivedRsp::add_user_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadArchivedRsp.user_peers)
  return user_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >*
LoadArchivedRsp::mutable_user_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadArchivedRsp.user_peers)
  return &user_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >&
LoadArchivedRsp::user_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadArchivedRsp.user_peers)
  return user_peers_;
}

// repeated .zproto.GroupOutPeer group_peers = 6;
int LoadArchivedRsp::group_peers_size() const {
  return group_peers_.size();
}
void LoadArchivedRsp::clear_group_peers() {
  group_peers_.Clear();
}
const ::zproto::GroupOutPeer& LoadArchivedRsp::group_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedRsp.group_peers)
  return group_peers_.Get(index);
}
::zproto::GroupOutPeer* LoadArchivedRsp::mutable_group_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadArchivedRsp.group_peers)
  return group_peers_.Mutable(index);
}
::zproto::GroupOutPeer* LoadArchivedRsp::add_group_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadArchivedRsp.group_peers)
  return group_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >*
LoadArchivedRsp::mutable_group_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadArchivedRsp.group_peers)
  return &group_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >&
LoadArchivedRsp::group_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadArchivedRsp.group_peers)
  return group_peers_;
}

// optional bytes next_offset = 4;
void LoadArchivedRsp::clear_next_offset() {
  next_offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LoadArchivedRsp::next_offset() const {
  // @@protoc_insertion_point(field_get:zproto.LoadArchivedRsp.next_offset)
  return next_offset_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoadArchivedRsp::set_next_offset(const ::std::string& value) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.LoadArchivedRsp.next_offset)
}
 void LoadArchivedRsp::set_next_offset(const char* value) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.LoadArchivedRsp.next_offset)
}
 void LoadArchivedRsp::set_next_offset(const void* value, size_t size) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.LoadArchivedRsp.next_offset)
}
 ::std::string* LoadArchivedRsp::mutable_next_offset() {
  
  // @@protoc_insertion_point(field_mutable:zproto.LoadArchivedRsp.next_offset)
  return next_offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoadArchivedRsp::release_next_offset() {
  // @@protoc_insertion_point(field_release:zproto.LoadArchivedRsp.next_offset)
  
  return next_offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoadArchivedRsp::set_allocated_next_offset(::std::string* next_offset) {
  if (next_offset != NULL) {
    
  } else {
    
  }
  next_offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_offset);
  // @@protoc_insertion_point(field_set_allocated:zproto.LoadArchivedRsp.next_offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadGroupedDialogsReq::kOptimizationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadGroupedDialogsReq::LoadGroupedDialogsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadGroupedDialogsReq)
}

void LoadGroupedDialogsReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadGroupedDialogsReq::LoadGroupedDialogsReq(const LoadGroupedDialogsReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadGroupedDialogsReq)
}

void LoadGroupedDialogsReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

LoadGroupedDialogsReq::~LoadGroupedDialogsReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadGroupedDialogsReq)
  SharedDtor();
}

void LoadGroupedDialogsReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoadGroupedDialogsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadGroupedDialogsReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadGroupedDialogsReq_descriptor_;
}

const LoadGroupedDialogsReq& LoadGroupedDialogsReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

LoadGroupedDialogsReq* LoadGroupedDialogsReq::default_instance_ = NULL;

LoadGroupedDialogsReq* LoadGroupedDialogsReq::New(::google::protobuf::Arena* arena) const {
  LoadGroupedDialogsReq* n = new LoadGroupedDialogsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadGroupedDialogsReq::Swap(LoadGroupedDialogsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadGroupedDialogsReq::InternalSwap(LoadGroupedDialogsReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadGroupedDialogsReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadGroupedDialogsReq_descriptor_;
  metadata.reflection = LoadGroupedDialogsReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadGroupedDialogsReq

// repeated .zproto.UpdateOptimization optimizations = 1;
int LoadGroupedDialogsReq::optimizations_size() const {
  return optimizations_.size();
}
void LoadGroupedDialogsReq::clear_optimizations() {
  optimizations_.Clear();
}
 ::zproto::UpdateOptimization LoadGroupedDialogsReq::optimizations(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadGroupedDialogsReq.optimizations)
  return static_cast< ::zproto::UpdateOptimization >(optimizations_.Get(index));
}
 void LoadGroupedDialogsReq::set_optimizations(int index, ::zproto::UpdateOptimization value) {
  optimizations_.Set(index, value);
  // @@protoc_insertion_point(field_set:zproto.LoadGroupedDialogsReq.optimizations)
}
 void LoadGroupedDialogsReq::add_optimizations(::zproto::UpdateOptimization value) {
  optimizations_.Add(value);
  // @@protoc_insertion_point(field_add:zproto.LoadGroupedDialogsReq.optimizations)
}
 const ::google::protobuf::RepeatedField<int>&
LoadGroupedDialogsReq::optimizations() const {
  // @@protoc_insertion_point(field_list:zproto.LoadGroupedDialogsReq.optimizations)
  return optimizations_;
}
 ::google::protobuf::RepeatedField<int>*
LoadGroupedDialogsReq::mutable_optimizations() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadGroupedDialogsReq.optimizations)
  return &optimizations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadGroupedDialogsRsp::kDialogsFieldNumber;
const int LoadGroupedDialogsRsp::kUsersFieldNumber;
const int LoadGroupedDialogsRsp::kGroupsFieldNumber;
const int LoadGroupedDialogsRsp::kShowArchivedFieldNumber;
const int LoadGroupedDialogsRsp::kShowInviteFieldNumber;
const int LoadGroupedDialogsRsp::kUserPeersFieldNumber;
const int LoadGroupedDialogsRsp::kGroupPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadGroupedDialogsRsp::LoadGroupedDialogsRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadGroupedDialogsRsp)
}

void LoadGroupedDialogsRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LoadGroupedDialogsRsp::LoadGroupedDialogsRsp(const LoadGroupedDialogsRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadGroupedDialogsRsp)
}

void LoadGroupedDialogsRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  show_archived_ = false;
  show_invite_ = false;
}

LoadGroupedDialogsRsp::~LoadGroupedDialogsRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadGroupedDialogsRsp)
  SharedDtor();
}

void LoadGroupedDialogsRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoadGroupedDialogsRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadGroupedDialogsRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadGroupedDialogsRsp_descriptor_;
}

const LoadGroupedDialogsRsp& LoadGroupedDialogsRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

LoadGroupedDialogsRsp* LoadGroupedDialogsRsp::default_instance_ = NULL;

LoadGroupedDialogsRsp* LoadGroupedDialogsRsp::New(::google::protobuf::Arena* arena) const {
  LoadGroupedDialogsRsp* n = new LoadGroupedDialogsRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadGroupedDialogsRsp::Swap(LoadGroupedDialogsRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadGroupedDialogsRsp::InternalSwap(LoadGroupedDialogsRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadGroupedDialogsRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadGroupedDialogsRsp_descriptor_;
  metadata.reflection = LoadGroupedDialogsRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadGroupedDialogsRsp

// repeated .zproto.DialogGroup dialogs = 1;
int LoadGroupedDialogsRsp::dialogs_size() const {
  return dialogs_.size();
}
void LoadGroupedDialogsRsp::clear_dialogs() {
  dialogs_.Clear();
}
const ::zproto::DialogGroup& LoadGroupedDialogsRsp::dialogs(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadGroupedDialogsRsp.dialogs)
  return dialogs_.Get(index);
}
::zproto::DialogGroup* LoadGroupedDialogsRsp::mutable_dialogs(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadGroupedDialogsRsp.dialogs)
  return dialogs_.Mutable(index);
}
::zproto::DialogGroup* LoadGroupedDialogsRsp::add_dialogs() {
  // @@protoc_insertion_point(field_add:zproto.LoadGroupedDialogsRsp.dialogs)
  return dialogs_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::DialogGroup >*
LoadGroupedDialogsRsp::mutable_dialogs() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadGroupedDialogsRsp.dialogs)
  return &dialogs_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::DialogGroup >&
LoadGroupedDialogsRsp::dialogs() const {
  // @@protoc_insertion_point(field_list:zproto.LoadGroupedDialogsRsp.dialogs)
  return dialogs_;
}

// repeated .zproto.User users = 2;
int LoadGroupedDialogsRsp::users_size() const {
  return users_.size();
}
void LoadGroupedDialogsRsp::clear_users() {
  users_.Clear();
}
const ::zproto::User& LoadGroupedDialogsRsp::users(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadGroupedDialogsRsp.users)
  return users_.Get(index);
}
::zproto::User* LoadGroupedDialogsRsp::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadGroupedDialogsRsp.users)
  return users_.Mutable(index);
}
::zproto::User* LoadGroupedDialogsRsp::add_users() {
  // @@protoc_insertion_point(field_add:zproto.LoadGroupedDialogsRsp.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::User >*
LoadGroupedDialogsRsp::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadGroupedDialogsRsp.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::User >&
LoadGroupedDialogsRsp::users() const {
  // @@protoc_insertion_point(field_list:zproto.LoadGroupedDialogsRsp.users)
  return users_;
}

// repeated .zproto.Group groups = 3;
int LoadGroupedDialogsRsp::groups_size() const {
  return groups_.size();
}
void LoadGroupedDialogsRsp::clear_groups() {
  groups_.Clear();
}
const ::zproto::Group& LoadGroupedDialogsRsp::groups(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadGroupedDialogsRsp.groups)
  return groups_.Get(index);
}
::zproto::Group* LoadGroupedDialogsRsp::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadGroupedDialogsRsp.groups)
  return groups_.Mutable(index);
}
::zproto::Group* LoadGroupedDialogsRsp::add_groups() {
  // @@protoc_insertion_point(field_add:zproto.LoadGroupedDialogsRsp.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::Group >*
LoadGroupedDialogsRsp::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadGroupedDialogsRsp.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::Group >&
LoadGroupedDialogsRsp::groups() const {
  // @@protoc_insertion_point(field_list:zproto.LoadGroupedDialogsRsp.groups)
  return groups_;
}

// optional bool show_archived = 4;
void LoadGroupedDialogsRsp::clear_show_archived() {
  show_archived_ = false;
}
 bool LoadGroupedDialogsRsp::show_archived() const {
  // @@protoc_insertion_point(field_get:zproto.LoadGroupedDialogsRsp.show_archived)
  return show_archived_;
}
 void LoadGroupedDialogsRsp::set_show_archived(bool value) {
  
  show_archived_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadGroupedDialogsRsp.show_archived)
}

// optional bool show_invite = 5;
void LoadGroupedDialogsRsp::clear_show_invite() {
  show_invite_ = false;
}
 bool LoadGroupedDialogsRsp::show_invite() const {
  // @@protoc_insertion_point(field_get:zproto.LoadGroupedDialogsRsp.show_invite)
  return show_invite_;
}
 void LoadGroupedDialogsRsp::set_show_invite(bool value) {
  
  show_invite_ = value;
  // @@protoc_insertion_point(field_set:zproto.LoadGroupedDialogsRsp.show_invite)
}

// repeated .zproto.UserOutPeer user_peers = 6;
int LoadGroupedDialogsRsp::user_peers_size() const {
  return user_peers_.size();
}
void LoadGroupedDialogsRsp::clear_user_peers() {
  user_peers_.Clear();
}
const ::zproto::UserOutPeer& LoadGroupedDialogsRsp::user_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadGroupedDialogsRsp.user_peers)
  return user_peers_.Get(index);
}
::zproto::UserOutPeer* LoadGroupedDialogsRsp::mutable_user_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadGroupedDialogsRsp.user_peers)
  return user_peers_.Mutable(index);
}
::zproto::UserOutPeer* LoadGroupedDialogsRsp::add_user_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadGroupedDialogsRsp.user_peers)
  return user_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >*
LoadGroupedDialogsRsp::mutable_user_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadGroupedDialogsRsp.user_peers)
  return &user_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >&
LoadGroupedDialogsRsp::user_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadGroupedDialogsRsp.user_peers)
  return user_peers_;
}

// repeated .zproto.GroupOutPeer group_peers = 7;
int LoadGroupedDialogsRsp::group_peers_size() const {
  return group_peers_.size();
}
void LoadGroupedDialogsRsp::clear_group_peers() {
  group_peers_.Clear();
}
const ::zproto::GroupOutPeer& LoadGroupedDialogsRsp::group_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadGroupedDialogsRsp.group_peers)
  return group_peers_.Get(index);
}
::zproto::GroupOutPeer* LoadGroupedDialogsRsp::mutable_group_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadGroupedDialogsRsp.group_peers)
  return group_peers_.Mutable(index);
}
::zproto::GroupOutPeer* LoadGroupedDialogsRsp::add_group_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadGroupedDialogsRsp.group_peers)
  return group_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >*
LoadGroupedDialogsRsp::mutable_group_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadGroupedDialogsRsp.group_peers)
  return &group_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::GroupOutPeer >&
LoadGroupedDialogsRsp::group_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadGroupedDialogsRsp.group_peers)
  return group_peers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DialogsOrderRsp::kSeqFieldNumber;
const int DialogsOrderRsp::kStateFieldNumber;
const int DialogsOrderRsp::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DialogsOrderRsp::DialogsOrderRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.DialogsOrderRsp)
}

void DialogsOrderRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DialogsOrderRsp::DialogsOrderRsp(const DialogsOrderRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.DialogsOrderRsp)
}

void DialogsOrderRsp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  seq_ = 0;
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DialogsOrderRsp::~DialogsOrderRsp() {
  // @@protoc_insertion_point(destructor:zproto.DialogsOrderRsp)
  SharedDtor();
}

void DialogsOrderRsp::SharedDtor() {
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DialogsOrderRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DialogsOrderRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DialogsOrderRsp_descriptor_;
}

const DialogsOrderRsp& DialogsOrderRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

DialogsOrderRsp* DialogsOrderRsp::default_instance_ = NULL;

DialogsOrderRsp* DialogsOrderRsp::New(::google::protobuf::Arena* arena) const {
  DialogsOrderRsp* n = new DialogsOrderRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DialogsOrderRsp::Swap(DialogsOrderRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DialogsOrderRsp::InternalSwap(DialogsOrderRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DialogsOrderRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DialogsOrderRsp_descriptor_;
  metadata.reflection = DialogsOrderRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DialogsOrderRsp

// optional int32 seq = 1;
void DialogsOrderRsp::clear_seq() {
  seq_ = 0;
}
 ::google::protobuf::int32 DialogsOrderRsp::seq() const {
  // @@protoc_insertion_point(field_get:zproto.DialogsOrderRsp.seq)
  return seq_;
}
 void DialogsOrderRsp::set_seq(::google::protobuf::int32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:zproto.DialogsOrderRsp.seq)
}

// optional bytes state = 2;
void DialogsOrderRsp::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DialogsOrderRsp::state() const {
  // @@protoc_insertion_point(field_get:zproto.DialogsOrderRsp.state)
  return state_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DialogsOrderRsp::set_state(const ::std::string& value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.DialogsOrderRsp.state)
}
 void DialogsOrderRsp::set_state(const char* value) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.DialogsOrderRsp.state)
}
 void DialogsOrderRsp::set_state(const void* value, size_t size) {
  
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.DialogsOrderRsp.state)
}
 ::std::string* DialogsOrderRsp::mutable_state() {
  
  // @@protoc_insertion_point(field_mutable:zproto.DialogsOrderRsp.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DialogsOrderRsp::release_state() {
  // @@protoc_insertion_point(field_release:zproto.DialogsOrderRsp.state)
  
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DialogsOrderRsp::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    
  } else {
    
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:zproto.DialogsOrderRsp.state)
}

// repeated .zproto.DialogGroup groups = 3;
int DialogsOrderRsp::groups_size() const {
  return groups_.size();
}
void DialogsOrderRsp::clear_groups() {
  groups_.Clear();
}
const ::zproto::DialogGroup& DialogsOrderRsp::groups(int index) const {
  // @@protoc_insertion_point(field_get:zproto.DialogsOrderRsp.groups)
  return groups_.Get(index);
}
::zproto::DialogGroup* DialogsOrderRsp::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.DialogsOrderRsp.groups)
  return groups_.Mutable(index);
}
::zproto::DialogGroup* DialogsOrderRsp::add_groups() {
  // @@protoc_insertion_point(field_add:zproto.DialogsOrderRsp.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::DialogGroup >*
DialogsOrderRsp::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:zproto.DialogsOrderRsp.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::DialogGroup >&
DialogsOrderRsp::groups() const {
  // @@protoc_insertion_point(field_list:zproto.DialogsOrderRsp.groups)
  return groups_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HideDialogReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HideDialogReq::HideDialogReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.HideDialogReq)
}

void HideDialogReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

HideDialogReq::HideDialogReq(const HideDialogReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.HideDialogReq)
}

void HideDialogReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

HideDialogReq::~HideDialogReq() {
  // @@protoc_insertion_point(destructor:zproto.HideDialogReq)
  SharedDtor();
}

void HideDialogReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void HideDialogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HideDialogReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HideDialogReq_descriptor_;
}

const HideDialogReq& HideDialogReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

HideDialogReq* HideDialogReq::default_instance_ = NULL;

HideDialogReq* HideDialogReq::New(::google::protobuf::Arena* arena) const {
  HideDialogReq* n = new HideDialogReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HideDialogReq::Swap(HideDialogReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HideDialogReq::InternalSwap(HideDialogReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata HideDialogReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HideDialogReq_descriptor_;
  metadata.reflection = HideDialogReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HideDialogReq

// optional .zproto.OutPeer peer = 1;
bool HideDialogReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void HideDialogReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& HideDialogReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.HideDialogReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* HideDialogReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.HideDialogReq.peer)
  return peer_;
}
::zproto::OutPeer* HideDialogReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.HideDialogReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void HideDialogReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.HideDialogReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowDialogReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowDialogReq::ShowDialogReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ShowDialogReq)
}

void ShowDialogReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

ShowDialogReq::ShowDialogReq(const ShowDialogReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ShowDialogReq)
}

void ShowDialogReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

ShowDialogReq::~ShowDialogReq() {
  // @@protoc_insertion_point(destructor:zproto.ShowDialogReq)
  SharedDtor();
}

void ShowDialogReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void ShowDialogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShowDialogReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShowDialogReq_descriptor_;
}

const ShowDialogReq& ShowDialogReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

ShowDialogReq* ShowDialogReq::default_instance_ = NULL;

ShowDialogReq* ShowDialogReq::New(::google::protobuf::Arena* arena) const {
  ShowDialogReq* n = new ShowDialogReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowDialogReq::Swap(ShowDialogReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowDialogReq::InternalSwap(ShowDialogReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ShowDialogReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShowDialogReq_descriptor_;
  metadata.reflection = ShowDialogReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowDialogReq

// optional .zproto.OutPeer peer = 1;
bool ShowDialogReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void ShowDialogReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& ShowDialogReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.ShowDialogReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* ShowDialogReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.ShowDialogReq.peer)
  return peer_;
}
::zproto::OutPeer* ShowDialogReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.ShowDialogReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ShowDialogReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.ShowDialogReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FavouriteDialogReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FavouriteDialogReq::FavouriteDialogReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.FavouriteDialogReq)
}

void FavouriteDialogReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

FavouriteDialogReq::FavouriteDialogReq(const FavouriteDialogReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.FavouriteDialogReq)
}

void FavouriteDialogReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

FavouriteDialogReq::~FavouriteDialogReq() {
  // @@protoc_insertion_point(destructor:zproto.FavouriteDialogReq)
  SharedDtor();
}

void FavouriteDialogReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void FavouriteDialogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FavouriteDialogReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FavouriteDialogReq_descriptor_;
}

const FavouriteDialogReq& FavouriteDialogReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

FavouriteDialogReq* FavouriteDialogReq::default_instance_ = NULL;

FavouriteDialogReq* FavouriteDialogReq::New(::google::protobuf::Arena* arena) const {
  FavouriteDialogReq* n = new FavouriteDialogReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FavouriteDialogReq::Swap(FavouriteDialogReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FavouriteDialogReq::InternalSwap(FavouriteDialogReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata FavouriteDialogReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FavouriteDialogReq_descriptor_;
  metadata.reflection = FavouriteDialogReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FavouriteDialogReq

// optional .zproto.OutPeer peer = 1;
bool FavouriteDialogReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void FavouriteDialogReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& FavouriteDialogReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.FavouriteDialogReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* FavouriteDialogReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.FavouriteDialogReq.peer)
  return peer_;
}
::zproto::OutPeer* FavouriteDialogReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.FavouriteDialogReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void FavouriteDialogReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.FavouriteDialogReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnfavouriteDialogReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnfavouriteDialogReq::UnfavouriteDialogReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UnfavouriteDialogReq)
}

void UnfavouriteDialogReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

UnfavouriteDialogReq::UnfavouriteDialogReq(const UnfavouriteDialogReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UnfavouriteDialogReq)
}

void UnfavouriteDialogReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

UnfavouriteDialogReq::~UnfavouriteDialogReq() {
  // @@protoc_insertion_point(destructor:zproto.UnfavouriteDialogReq)
  SharedDtor();
}

void UnfavouriteDialogReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void UnfavouriteDialogReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnfavouriteDialogReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnfavouriteDialogReq_descriptor_;
}

const UnfavouriteDialogReq& UnfavouriteDialogReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

UnfavouriteDialogReq* UnfavouriteDialogReq::default_instance_ = NULL;

UnfavouriteDialogReq* UnfavouriteDialogReq::New(::google::protobuf::Arena* arena) const {
  UnfavouriteDialogReq* n = new UnfavouriteDialogReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnfavouriteDialogReq::Swap(UnfavouriteDialogReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnfavouriteDialogReq::InternalSwap(UnfavouriteDialogReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UnfavouriteDialogReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnfavouriteDialogReq_descriptor_;
  metadata.reflection = UnfavouriteDialogReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnfavouriteDialogReq

// optional .zproto.OutPeer peer = 1;
bool UnfavouriteDialogReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void UnfavouriteDialogReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& UnfavouriteDialogReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.UnfavouriteDialogReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* UnfavouriteDialogReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.UnfavouriteDialogReq.peer)
  return peer_;
}
::zproto::OutPeer* UnfavouriteDialogReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.UnfavouriteDialogReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void UnfavouriteDialogReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.UnfavouriteDialogReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyDialogOpenedReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyDialogOpenedReq::NotifyDialogOpenedReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.NotifyDialogOpenedReq)
}

void NotifyDialogOpenedReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  peer_ = const_cast< ::zproto::OutPeer*>(&::zproto::OutPeer::default_instance());
}

NotifyDialogOpenedReq::NotifyDialogOpenedReq(const NotifyDialogOpenedReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.NotifyDialogOpenedReq)
}

void NotifyDialogOpenedReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  peer_ = NULL;
}

NotifyDialogOpenedReq::~NotifyDialogOpenedReq() {
  // @@protoc_insertion_point(destructor:zproto.NotifyDialogOpenedReq)
  SharedDtor();
}

void NotifyDialogOpenedReq::SharedDtor() {
  if (this != default_instance_) {
    delete peer_;
  }
}

void NotifyDialogOpenedReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyDialogOpenedReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyDialogOpenedReq_descriptor_;
}

const NotifyDialogOpenedReq& NotifyDialogOpenedReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messaging_2eproto();
  return *default_instance_;
}

NotifyDialogOpenedReq* NotifyDialogOpenedReq::default_instance_ = NULL;

NotifyDialogOpenedReq* NotifyDialogOpenedReq::New(::google::protobuf::Arena* arena) const {
  NotifyDialogOpenedReq* n = new NotifyDialogOpenedReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyDialogOpenedReq::Swap(NotifyDialogOpenedReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyDialogOpenedReq::InternalSwap(NotifyDialogOpenedReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata NotifyDialogOpenedReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyDialogOpenedReq_descriptor_;
  metadata.reflection = NotifyDialogOpenedReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyDialogOpenedReq

// optional .zproto.OutPeer peer = 1;
bool NotifyDialogOpenedReq::has_peer() const {
  return !_is_default_instance_ && peer_ != NULL;
}
void NotifyDialogOpenedReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::OutPeer& NotifyDialogOpenedReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.NotifyDialogOpenedReq.peer)
  return peer_ != NULL ? *peer_ : *default_instance_->peer_;
}
::zproto::OutPeer* NotifyDialogOpenedReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::OutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.NotifyDialogOpenedReq.peer)
  return peer_;
}
::zproto::OutPeer* NotifyDialogOpenedReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.NotifyDialogOpenedReq.peer)
  
  ::zproto::OutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void NotifyDialogOpenedReq::set_allocated_peer(::zproto::OutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.NotifyDialogOpenedReq.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
