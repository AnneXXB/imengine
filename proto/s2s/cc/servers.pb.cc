// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: servers.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "servers.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* ServerAuthReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerAuthReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ServerAuthRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ServerAuthRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_servers_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_servers_2eproto() {
  protobuf_AddDesc_servers_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "servers.proto");
  GOOGLE_CHECK(file != NULL);
  ServerAuthReq_descriptor_ = file->message_type(0);
  static const int ServerAuthReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAuthReq, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAuthReq, server_name_),
  };
  ServerAuthReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerAuthReq_descriptor_,
      ServerAuthReq::default_instance_,
      ServerAuthReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServerAuthReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAuthReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAuthReq, _is_default_instance_));
  ServerAuthRsp_descriptor_ = file->message_type(1);
  static const int ServerAuthRsp_offsets_[1] = {
  };
  ServerAuthRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ServerAuthRsp_descriptor_,
      ServerAuthRsp::default_instance_,
      ServerAuthRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ServerAuthRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAuthRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAuthRsp, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_servers_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerAuthReq_descriptor_, &ServerAuthReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ServerAuthRsp_descriptor_, &ServerAuthRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_servers_2eproto() {
  delete ServerAuthReq::default_instance_;
  delete ServerAuthReq_reflection_;
  delete ServerAuthRsp::default_instance_;
  delete ServerAuthRsp_reflection_;
}

void protobuf_AddDesc_servers_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_servers_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rservers.proto\022\006zproto\"7\n\rServerAuthReq"
    "\022\021\n\tserver_id\030\001 \001(\r\022\023\n\013server_name\030\002 \001(\t"
    "\"\017\n\rServerAuthRspB#\n\027com.zchat.engine.zp"
    "rotoB\006ZProtoH\002b\006proto3", 142);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "servers.proto", &protobuf_RegisterTypes);
  ServerAuthReq::default_instance_ = new ServerAuthReq();
  ServerAuthRsp::default_instance_ = new ServerAuthRsp();
  ServerAuthReq::default_instance_->InitAsDefaultInstance();
  ServerAuthRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_servers_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_servers_2eproto {
  StaticDescriptorInitializer_servers_2eproto() {
    protobuf_AddDesc_servers_2eproto();
  }
} static_descriptor_initializer_servers_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAuthReq::kServerIdFieldNumber;
const int ServerAuthReq::kServerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAuthReq::ServerAuthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ServerAuthReq)
}

void ServerAuthReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServerAuthReq::ServerAuthReq(const ServerAuthReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ServerAuthReq)
}

void ServerAuthReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  server_id_ = 0u;
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ServerAuthReq::~ServerAuthReq() {
  // @@protoc_insertion_point(destructor:zproto.ServerAuthReq)
  SharedDtor();
}

void ServerAuthReq::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ServerAuthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAuthReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerAuthReq_descriptor_;
}

const ServerAuthReq& ServerAuthReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_servers_2eproto();
  return *default_instance_;
}

ServerAuthReq* ServerAuthReq::default_instance_ = NULL;

ServerAuthReq* ServerAuthReq::New(::google::protobuf::Arena* arena) const {
  ServerAuthReq* n = new ServerAuthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAuthReq::Swap(ServerAuthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAuthReq::InternalSwap(ServerAuthReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ServerAuthReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerAuthReq_descriptor_;
  metadata.reflection = ServerAuthReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAuthReq

// optional uint32 server_id = 1;
void ServerAuthReq::clear_server_id() {
  server_id_ = 0u;
}
 ::google::protobuf::uint32 ServerAuthReq::server_id() const {
  // @@protoc_insertion_point(field_get:zproto.ServerAuthReq.server_id)
  return server_id_;
}
 void ServerAuthReq::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ServerAuthReq.server_id)
}

// optional string server_name = 2;
void ServerAuthReq::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ServerAuthReq::server_name() const {
  // @@protoc_insertion_point(field_get:zproto.ServerAuthReq.server_name)
  return server_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerAuthReq::set_server_name(const ::std::string& value) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ServerAuthReq.server_name)
}
 void ServerAuthReq::set_server_name(const char* value) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ServerAuthReq.server_name)
}
 void ServerAuthReq::set_server_name(const char* value, size_t size) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ServerAuthReq.server_name)
}
 ::std::string* ServerAuthReq::mutable_server_name() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ServerAuthReq.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ServerAuthReq::release_server_name() {
  // @@protoc_insertion_point(field_release:zproto.ServerAuthReq.server_name)
  
  return server_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ServerAuthReq::set_allocated_server_name(::std::string* server_name) {
  if (server_name != NULL) {
    
  } else {
    
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:zproto.ServerAuthReq.server_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAuthRsp::ServerAuthRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ServerAuthRsp)
}

void ServerAuthRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ServerAuthRsp::ServerAuthRsp(const ServerAuthRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ServerAuthRsp)
}

void ServerAuthRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ServerAuthRsp::~ServerAuthRsp() {
  // @@protoc_insertion_point(destructor:zproto.ServerAuthRsp)
  SharedDtor();
}

void ServerAuthRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ServerAuthRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAuthRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServerAuthRsp_descriptor_;
}

const ServerAuthRsp& ServerAuthRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_servers_2eproto();
  return *default_instance_;
}

ServerAuthRsp* ServerAuthRsp::default_instance_ = NULL;

ServerAuthRsp* ServerAuthRsp::New(::google::protobuf::Arena* arena) const {
  ServerAuthRsp* n = new ServerAuthRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAuthRsp::Swap(ServerAuthRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAuthRsp::InternalSwap(ServerAuthRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ServerAuthRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ServerAuthRsp_descriptor_;
  metadata.reflection = ServerAuthRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAuthRsp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
